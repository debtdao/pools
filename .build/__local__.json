{"contractTypes":{"BondManager":{"abi":[{"inputs":[{"name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"pending_reserves","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"permanent_reserves","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bamm_token_debt","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"contractName":"BondManager","deploymentBytecode":{"bytecode":"0x60206100c36000396000518060a01c6100be57604052346100be576000608e5261008e61002f6000396100ae6000f36003361161000c57610076565b60003560e01c3461007c5763bf468cce8118610036576004361061007c5760005460405260206040f35b636e8ae51d8118610055576004361061007c5760015460405260206040f35b63978341ea8118610074576004361061007c5760025460405260206040f35b505b60006000fd5b600080fda165767970657283000307000b005b600080fd"},"dev_messages":{},"devdoc":{"methods":{"__init__(address)":{"params":{"_owner":"- Debt DAO Pool Delegate for bond base yield source that will manage this contract"}}}},"pcmap":{},"runtimeBytecode":{"bytecode":"0x6003361161000c57610076565b60003560e01c3461007c5763bf468cce8118610036576004361061007c5760005460405260206040f35b636e8ae51d8118610055576004361061007c5760015460405260206040f35b63978341ea8118610074576004361061007c5760025460405260206040f35b505b60006000fd5b600080fda165767970657283000307000b"},"sourceId":"BondManager.vy","sourcemap":"-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;:::-;;;;:::-;;;","userdoc":{}},"BondNFT":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":true,"name":"_tokenID","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_troveManagerAddress","type":"address"},{"name":"_transfer_lockout_epoch_seconds","type":"uint256"},{"name":"_bond_manager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"name":"_bonder","type":"address"},{"name":"_permanentSeed","type":"uint256"}],"name":"mint","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint80"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_to","type":"address"},{"name":"_tokenID","type":"uint256"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_tokenID","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_bonder","type":"address"},{"name":"_tokenID","type":"uint256"},{"name":"_permanentSeed","type":"uint256"}],"name":"set_final_extra_data","outputs":[{"name":"","type":"uint80"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"total_supply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"contractName":"BondNFT","deploymentBytecode":{"bytecode":"0x60206106d7600039600051601e6020826106d701600039600051116106d2576020816106d70160003960005180604052602082016020816106d70160003960005160605250505060206106f760003960005160126020826106d701600039600051116106d2576020816106d70160003960005180608052602082016020816106d70160003960005160a05250505060206107176000396000518060a01c6106d25760c05260206107576000396000518060a01c6106d25760e052346106d25760e05161060b5260206107376000396000516105eb526105eb6100e66100003961062b610000f36003361161000c57610217565b60003560e01c346105d9576340c10f1981186100d357604436106105d9576004358060a01c6105d95761042052602061060b60003960005133186105d957600054600181018181106105d9579050610440526104405160405260243560605261007661048061054b565b61048051610460526005610440516020526000526040600020610460518155600060018201556000600282015550610420516103c052610440516103e0526100bc6104ef565b6104405161048052610460516104a0526040610480f35b63a9059cbb811861011957604436106105d9576004358060a01c6105d9576103c05233610140526103c051610160526024356101805260016101a052610117610320565b005b6323b872dd811861017157606436106105d9576004358060a01c6105d9576103c0526024358060a01c6105d9576103e0526103c051610140526103e051610160526044356101805260016101a05261016f610320565b005b63e444c5f781186101f657606436106105d9576004358060a01c6105d95761010052602061060b60003960005133186105d9576005602435602052600052604060002080546101205260018101546101405260028101546101605250604060246040376101df6101a061054b565b6101a0516101805261018051610140526020610180f35b633940e9ee811861021557600436106105d95760005460405260206040f35b505b60006000fd5b60016040516020526000526040600020541515815250565b60405160016060516020526000526040600020541861025557600161026c565b604051600260605160205260005260406000205418155b815250565b6040513b1561031e57600460c0527f150b7a020000000000000000000000000000000000000000000000000000000060e05260c050602061012060c05160e060006040515af16102c6573d600060003e3d6000fd5b3d602081183d60201002186101005261010080518060805260208201805160a0525050507f150b7a02000000000000000000000000000000000000000000000000000000006020608051186105d95760a051186105d9575b565b61014051604052610180516060526103396101c0610235565b6101c05060006002610180516020526000526040600020556101a051156103d457610140511561038c57600461014051602052600052604060002080546101a0518082038281116105d957905090508155505b61016051156103d45761016051604052610180516060526103ab610271565b600461016051602052600052604060002080546101a0518082018281106105d957905090508155505b6101605160016101805160205260005260406000205561014051156104ed5760a0366101c037602061060b6000396000516364335ae061026052610180516102805260a0610260602461027c6000855af1610434573d600060003e3d6000fd5b60a03d106105d9576102605161032052610280518060401c6105d957610340526102a0518060401c6105d957610360526102c0518060401c6105d957610380526102e0518060041c6105d9576103a052610320905080516101c05260208101516101e05260408101516102005260608101516102205260808101516102405250600261024051186104c65760016104e7565b6102205160206105eb6000396000518082018281106105d957905090504210155b156105d9575b565b6103c051156105d9576103e05160405261050a61040061021d565b610400516105d957600054600181018181106105d95790506000556000610140526103c051610160526103e0516101805260016101a052610549610320565b565b60405160a0524260c05260605160e052606060805260808051602082012090508060501c6105d957815250565b600160405160205260005260406000205481525056610598610400610578565b610400516103e052600054600181038181116105d95790506000556103e051610140526000610160526103c0516101805260016101a0526105d7610320565b565b600080fda165767970657283000307000b005b600080fd"},"dev_messages":{"233":"dev: \"ERC721: mint _to the zero address\"","234":"dev: \"ERC721: token already minted\""},"devdoc":{},"pcmap":{"1001":[268,4,268,25],"1003":[272,7,272,12],"1006":[272,7,272,30],"1007":[272,7,272,30],"1011":[272,4,280,125],"1012":[273,8,273,35],"1014":[273,8,273,35],"1015":[273,8,273,35],"1018":[273,8,273,35],"1019":[278,40,278,90],"102":[170,58,170,72],"1020":[278,40,278,90],"1021":[278,40,278,90],"1024":[278,40,278,90],"1026":[278,40,278,90],"1027":[278,40,278,90],"1029":[278,40,278,90],"1039":[278,81,278,89],"1059":[278,40,278,90],"111":[170,31,170,73],"114":[170,31,170,73],"1160":[278,40,278,90],"1161":[278,40,278,90],"1162":[278,8,278,90],"1164":[278,9,278,10],"117":[170,31,170,73],"1170":[278,8,278,90],"1173":[278,12,278,14],"1179":[278,8,278,90],"118":[170,31,170,73],"1182":[278,16,278,19],"1188":[278,8,278,90],"119":[170,31,170,73],"1191":[278,21,278,28],"1197":[278,8,278,90],"1200":[278,30,278,36],"1204":[278,8,278,90],"1205":[280,25,280,43],"1207":[280,15,280,21],"1210":[280,15,280,43],"1211":[280,15,280,43],"1212":[280,15,280,125],"1215":[280,15,280,125],"1216":[280,15,280,125],"1218":[280,15,280,125],"122":[170,4,170,73],"1221":[280,15,280,125],"1222":[280,15,280,125],"1223":[280,66,280,91],"123":[170,4,170,73],"1250":[280,66,280,125],"1251":[280,66,280,125],"1252":[280,47,280,62],"1255":[280,15,280,125],"1256":[280,8,280,125],"1257":[280,8,280,125],"126":[170,4,170,73],"1260":[280,8,280,125],"1261":[251,0,280,125],"1263":[232,0,237,49],"1264":[233,11,233,14],"1267":[233,11,233,32],"1268":[233,11,233,32],"1269":[233,4,233,32],"127":[171,4,171,18],"1272":[233,4,233,32],"1273":[234,33,234,41],"1279":[234,15,234,42],"1283":[234,15,234,42],"1286":[234,15,234,42],"1289":[234,15,234,42],"129":[171,19,171,26],"1290":[234,15,234,42],"1291":[234,15,234,42],"1294":[234,11,234,42],"1295":[234,4,234,42],"1298":[234,4,234,42],"1299":[236,4,236,21],"1302":[236,25,236,26],"1313":[236,4,236,26],"1314":[236,4,236,26],"1315":[236,4,236,21],"1324":[237,35,237,38],"133":[171,4,171,27],"1332":[237,40,237,48],"1340":[251,86,251,87],"1349":[237,4,237,49],"135":[171,4,171,27],"1352":[237,4,237,49],"1353":[232,0,237,49],"1355":[195,0,196,111],"1356":[196,49,196,57],"136":[171,4,171,27],"1362":[196,59,196,74],"1366":[196,76,196,90],"1376":[196,37,196,91],"1377":[196,37,196,91],"1379":[196,27,196,92],"138":[171,4,171,27],"1383":[196,27,196,92],"1385":[196,27,196,92],"1386":[196,27,196,92],"1387":[196,27,196,92],"1388":[196,11,196,111],"139":[171,4,171,27],"1397":[196,4,196,111],"1398":[196,4,196,111],"1400":[307,0,308,32],"1401":[308,11,308,22],"1403":[308,23,308,31],"1406":[308,11,308,32],"1408":[308,11,308,32],"1409":[308,11,308,32],"141":[171,4,171,27],"1411":[308,11,308,32],"1412":[308,11,308,32],"1414":[308,11,308,32],"1416":[308,11,308,32],"1419":[308,4,308,32],"1420":[308,4,308,32],"1425":[244,21,244,45],"1428":[244,21,244,45],"143":[171,4,171,27],"1431":[244,21,244,45],"1432":[244,21,244,45],"1433":[244,21,244,45],"1436":[244,4,244,45],"1437":[244,4,244,45],"144":[172,26,172,42],"1440":[244,4,244,45],"1441":[246,4,246,21],"1444":[246,25,246,26],"1455":[246,4,246,26],"1456":[246,4,246,26],"1457":[246,4,246,21],"1460":[247,19,247,24],"1474":[247,42,247,50],"148":[171,4,175,6],"1482":[251,86,251,87],"1491":[247,4,247,51],"1494":[247,4,247,51],"1495":[241,0,247,51],"150":[173,24,173,25],"154":[171,4,175,6],"157":[174,20,174,21],"161":[171,4,175,6],"164":[171,4,175,6],"165":[177,15,177,22],"173":[177,24,177,31],"184":[177,4,177,32],"187":[177,4,177,32],"188":[177,4,177,32],"189":[179,12,179,19],"197":[179,21,179,37],"242":[183,13,183,25],"245":[183,13,183,25],"246":[184,19,184,29],"251":[184,31,184,34],"259":[184,36,184,44],"266":[251,86,251,87],"275":[184,4,184,45],"278":[184,4,184,45],"312":[187,17,187,31],"315":[187,17,187,31],"327":[187,33,187,45],"330":[187,33,187,45],"331":[188,19,188,24],"339":[188,26,188,29],"347":[188,31,188,39],"354":[251,86,251,87],"363":[188,4,188,40],"366":[188,4,188,40],"400":[199,25,199,41],"403":[199,25,199,41],"404":[200,11,200,37],"405":[200,11,200,37],"406":[200,11,200,37],"409":[200,11,200,37],"411":[200,11,200,37],"412":[200,11,200,37],"414":[200,11,200,37],"415":[200,11,200,21],"416":[200,11,200,37],"417":[200,4,200,37],"420":[200,4,200,37],"421":[203,26,203,40],"423":[205,41,205,49],"425":[203,26,203,50],"426":[203,26,203,50],"428":[203,26,203,50],"429":[203,26,203,50],"431":[203,26,203,50],"432":[203,26,203,50],"434":[203,26,203,50],"436":[203,26,203,50],"437":[203,4,203,50],"445":[203,4,203,50],"454":[203,4,203,50],"461":[203,4,203,50],"468":[205,23,205,66],"472":[205,23,205,66],"475":[205,23,205,66],"478":[205,23,205,66],"479":[205,23,205,66],"480":[205,23,205,66],"483":[205,4,205,66],"484":[205,4,205,66],"487":[205,4,205,66],"488":[206,31,206,38],"491":[206,4,206,38],"492":[206,4,206,28],"495":[206,4,206,38],"498":[227,11,227,18],"54":[164,9,164,25],"541":[312,0,313,50],"542":[313,29,313,40],"544":[313,41,313,49],"547":[313,29,313,50],"549":[313,29,313,50],"550":[313,29,313,50],"552":[313,29,313,50],"553":[313,29,313,50],"555":[313,29,313,50],"557":[313,29,313,50],"558":[313,11,313,50],"559":[313,11,313,50],"560":[313,11,313,50],"562":[313,4,313,50],"563":[313,4,313,50],"565":[302,0,303,82],"566":[303,36,303,43],"568":[303,11,303,43],"569":[303,11,303,22],"57":[164,9,164,25],"571":[303,23,303,31],"574":[303,11,303,32],"576":[303,11,303,32],"577":[303,11,303,32],"579":[303,11,303,32],"58":[165,11,165,37],"580":[303,11,303,32],"582":[303,11,303,32],"584":[303,11,303,32],"585":[303,11,303,43],"586":[303,11,303,43],"587":[303,11,303,82],"59":[165,11,165,37],"590":[303,11,303,82],"591":[303,11,303,82],"593":[303,11,303,82],"596":[303,11,303,82],"597":[303,11,303,82],"598":[303,75,303,82],"60":[165,11,165,37],"600":[303,47,303,82],"601":[303,47,303,61],"603":[303,62,303,70],"606":[303,47,303,71],"608":[303,47,303,71],"609":[303,47,303,71],"611":[303,47,303,71],"612":[303,47,303,71],"614":[303,47,303,71],"616":[303,47,303,71],"617":[303,47,303,82],"618":[303,47,303,82],"619":[303,47,303,82],"620":[303,11,303,82],"622":[303,4,303,82],"623":[303,4,303,82],"625":[286,0,298,63],"626":[290,7,290,10],"629":[290,7,290,22],"63":[165,11,165,37],"630":[290,7,290,22],"634":[290,4,298,63],"639":[293,12,293,72],"65":[165,11,165,37],"66":[165,11,165,37],"675":[293,12,293,72],"676":[293,12,293,72],"68":[165,11,165,37],"684":[293,12,293,72],"69":[165,11,165,21],"691":[292,12,292,15],"696":[291,30,296,9],"699":[291,30,296,9],"70":[165,11,165,37],"71":[165,4,165,37],"710":[291,30,296,9],"729":[291,8,296,9],"737":[291,8,296,9],"74":[165,4,165,37],"745":[291,8,296,9],"746":[291,8,296,9],"747":[298,15,298,30],"75":[168,23,168,40],"78":[168,43,168,44],"782":[298,46,298,54],"786":[298,34,298,63],"789":[298,34,298,63],"790":[298,34,298,63],"792":[298,15,298,63],"793":[298,15,298,63],"794":[298,8,298,63],"797":[298,8,298,63],"798":[286,0,298,63],"800":[251,0,280,125],"801":[252,31,252,36],"808":[252,38,252,46],"818":[252,4,252,47],"821":[252,4,252,47],"824":[252,4,252,47],"825":[252,4,252,47],"826":[252,4,252,47],"832":[254,4,254,18],"834":[254,19,254,27],"838":[254,4,254,28],"840":[254,4,254,28],"841":[254,4,254,28],"843":[254,4,254,28],"844":[254,4,254,28],"846":[254,4,254,28],"848":[254,4,254,28],"850":[258,7,258,18],"853":[258,7,258,23],"854":[258,7,258,23],"855":[258,4,265,45],"858":[258,4,265,45],"859":[259,11,259,16],"862":[259,11,259,34],"863":[259,11,259,34],"864":[259,8,260,47],"867":[259,8,260,47],"868":[260,12,260,25],"870":[260,26,260,31],"874":[260,12,260,32],"876":[260,12,260,32],"877":[260,12,260,32],"879":[260,12,260,32],"880":[260,12,260,32],"882":[260,12,260,32],"884":[260,12,260,32],"887":[260,36,260,47],"89":[168,23,168,44],"90":[168,23,168,44],"903":[260,12,260,47],"904":[260,12,260,47],"907":[260,12,260,47],"908":[259,8,260,47],"909":[262,11,262,14],"912":[262,11,262,32],"913":[262,11,262,32],"914":[258,4,265,45],"917":[262,8,265,45],"918":[263,43,263,46],"925":[263,48,263,56],"935":[263,12,263,57],"938":[263,12,263,57],"939":[263,12,263,57],"94":[168,4,168,44],"940":[265,12,265,25],"942":[265,26,265,29],"946":[265,12,265,30],"948":[265,12,265,30],"949":[265,12,265,30],"95":[170,49,170,56],"951":[265,12,265,30],"952":[265,12,265,30],"954":[265,12,265,30],"956":[265,12,265,30],"959":[265,34,265,45],"975":[265,12,265,45],"976":[265,12,265,45],"979":[265,12,265,45],"980":[258,4,265,45],"981":[268,28,268,31],"985":[268,4,268,15],"987":[268,16,268,24],"991":[268,4,268,25],"993":[268,4,268,25],"994":[268,4,268,25],"996":[268,4,268,25],"997":[268,4,268,25],"999":[268,4,268,25]},"runtimeBytecode":{"bytecode":"0x6003361161000c57610217565b60003560e01c346105d9576340c10f1981186100d357604436106105d9576004358060a01c6105d95761042052602061060b60003960005133186105d957600054600181018181106105d9579050610440526104405160405260243560605261007661048061054b565b61048051610460526005610440516020526000526040600020610460518155600060018201556000600282015550610420516103c052610440516103e0526100bc6104ef565b6104405161048052610460516104a0526040610480f35b63a9059cbb811861011957604436106105d9576004358060a01c6105d9576103c05233610140526103c051610160526024356101805260016101a052610117610320565b005b6323b872dd811861017157606436106105d9576004358060a01c6105d9576103c0526024358060a01c6105d9576103e0526103c051610140526103e051610160526044356101805260016101a05261016f610320565b005b63e444c5f781186101f657606436106105d9576004358060a01c6105d95761010052602061060b60003960005133186105d9576005602435602052600052604060002080546101205260018101546101405260028101546101605250604060246040376101df6101a061054b565b6101a0516101805261018051610140526020610180f35b633940e9ee811861021557600436106105d95760005460405260206040f35b505b60006000fd5b60016040516020526000526040600020541515815250565b60405160016060516020526000526040600020541861025557600161026c565b604051600260605160205260005260406000205418155b815250565b6040513b1561031e57600460c0527f150b7a020000000000000000000000000000000000000000000000000000000060e05260c050602061012060c05160e060006040515af16102c6573d600060003e3d6000fd5b3d602081183d60201002186101005261010080518060805260208201805160a0525050507f150b7a02000000000000000000000000000000000000000000000000000000006020608051186105d95760a051186105d9575b565b61014051604052610180516060526103396101c0610235565b6101c05060006002610180516020526000526040600020556101a051156103d457610140511561038c57600461014051602052600052604060002080546101a0518082038281116105d957905090508155505b61016051156103d45761016051604052610180516060526103ab610271565b600461016051602052600052604060002080546101a0518082018281106105d957905090508155505b6101605160016101805160205260005260406000205561014051156104ed5760a0366101c037602061060b6000396000516364335ae061026052610180516102805260a0610260602461027c6000855af1610434573d600060003e3d6000fd5b60a03d106105d9576102605161032052610280518060401c6105d957610340526102a0518060401c6105d957610360526102c0518060401c6105d957610380526102e0518060041c6105d9576103a052610320905080516101c05260208101516101e05260408101516102005260608101516102205260808101516102405250600261024051186104c65760016104e7565b6102205160206105eb6000396000518082018281106105d957905090504210155b156105d9575b565b6103c051156105d9576103e05160405261050a61040061021d565b610400516105d957600054600181018181106105d95790506000556000610140526103c051610160526103e0516101805260016101a052610549610320565b565b60405160a0524260c05260605160e052606060805260808051602082012090508060501c6105d957815250565b600160405160205260005260406000205481525056610598610400610578565b610400516103e052600054600181038181116105d95790506000556103e051610140526000610160526103c0516101805260016101a0526105d7610320565b565b600080fda165767970657283000307000b"},"sourceId":"BondNFT.vy","sourcemap":"-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;7899:16;;7975:26;;;;;;;:10;:26;7968:33;:::-;8072:17;-1:-1;8092:1;-1:-1;;;;;;:::-;8072:21;;-1:-1;8053:40;8176:7;-1:-1;;;8185:14;-1:-1;;;;8158:42;;:::i;:::-;;8131:69;;;8205:14;8220:7;-1:-1;8205:23;;;;;;;8268:16;-1:-1;8205:137;-1:-1;8310:1;-1:-1;8205:137;-1:-1;;8333:1;-1:-1;8205:137;-1:-1;;8205:137;8359:7;-1:-1;;;8368:7;-1:-1;;;;8348:28;:::i;:::-;8390:7;-1:-1;;;8399:16;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;8462:12;;8515:10;-1:-1;;8527:3;-1:-1;;;8532:8;-1:-1;;;11022:1;-1:-1;;;8500:41;:::i;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;8571:14;;-1:-1;;;;;;:::-;8587:12;;8640:5;-1:-1;;;8647:3;-1:-1;;;8652:8;-1:-1;;;11022:1;-1:-1;;;8625:36;:::i;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;8933:16;;9017:26;;;;;;;:10;:26;9010:33;:::-;9119:14;9186:8;9119:24;;;;;;;;9097:46;-1:-1;;;;9097:46;-1:-1;;;;;9097:46;-1:-1;;;;9097:46;-1:-1;;;9168:43;-1:-1;9168:43;;:::i;:::-;;9149:62;;;9243:7;9216:34;:24;:34;-1:-1;10224:7;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;:::-;;;;13377:95::-;13451:11;13463:8;-1:-1;13451:21;;;;;;;13433:39;;;-1:-1;13426:46;;-1:-1::-;13110:154::-;13218:7;13193:32;:11;13205:8;-1:-1;13193:21;;;;;;;:32;;:71;:::-;;;:::-;:::-;13257:7;13229:35;:14;13244:8;-1:-1;13229:24;;;;;;;:35;;;13193:71::-;-1:-1;13186:78;;-1:-1::-;12535:557::-;12805:3;-1:-1;12805:15;;-1:-1;12802:290::-;-1:-1;;12891:60;-1:-1;;12891:60;;-1:-1;;;12891:60;-1:-1;;;12874:3;-1:-1;;;12852:175;:::-;-1:-1;;;;;;;12852:175::-;-1:-1;;;;;;;;;;;;12830:197;-1:-1;;;;;12830:197;-1:-1;;;;;;12830:197;;13044:15;-1:-1;13075:8;-1:-1;;13063:29;:::-;;13044:48;;13037:55;:::-;12535:557::-;-1:-1::-;10936:1464::-;11057:5;-1:-1;;;11064:8;-1:-1;;;;11030:43;;:::i;:::-;;-1:-1;;11119:14;11134:8;-1:-1;11119:24;;;;;;;-1:-1;11336:11;:16;;11333:360;:::-;11365:5;:23;;11362:75;:::-;11402:13;11416:5;-1:-1;11402:20;;;;;;;-1:-1;;11426:11;-1:-1;;;;;;;;:::-;;;11402:35;;-1:-1;;11402:35;11362:75::-;11513:3;:21;;11333:360;11510:183::-;11579:3;-1:-1;;;11584:8;-1:-1;;;;11548:45;:::i;:::-;11660:13;11674:3;-1:-1;11660:18;;;;;;;-1:-1;;11682:11;-1:-1;;;;;;;;:::-;;;11660:33;;-1:-1;;11660:33;11333:360::-;11780:3;-1:-1;11756:11;11768:8;-1:-1;11756:21;;;;;;;-1:-1;11961:5;:23;;-1:-1;11958:442::-;11995:27;;;;12223:50;;;;;;;-1:-1;;;12264:8;-1:-1;;;;;;;;12223:50;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;;;;;:::-;;;;;;;;;:::-;;;;;;;;;:::-;;;;;;;;;:::-;;;;12223:50;;12191:82;-1:-1;12192:1;-1:-1;;12191:82;-1:-1;;12195:2;-1:-1;;12191:82;-1:-1;;12199:3;-1:-1;;12191:82;-1:-1;;12204:7;-1:-1;;12191:82;-1:-1;;12213:6;-1:-1;12191:82;12300:18;12290:6;:28;;:110;:::-;;;:::-;:::-;12341:25;-1:-1;;;;;;;;;;;;;;;:::-;;;12341:59;;12322:15;-1:-1;;12290:110::-;12283:117;;:::-;10936:1464::-;-1:-1::-;10256:277::-;10310:3;:21;;10303:28;:::-;10408:8;-1:-1;;10390:27;-1:-1;10390:27;;:::i;:::-;;10386:31;10379:38;:::-;10461:17;-1:-1;10482:1;-1:-1;;;;;;:::-;10461:22;;:17;-1:-1;;;;10519:3;-1:-1;;;10524:8;-1:-1;;;11022:1;-1:-1;;;10488:45;:::i;10256:277::-;-1:-1::-;8713:183::-;8834:8;-1:-1;;;8844:15;-1:-1;;8861:14;-1:-1;;;;;8822:54;;8812:65;-1:-1;;8812:65;-1:-1;8812:65;;;8796:100;-1:-1;;;:::-;;8789:107;;-1:-1::-;13282:77::-;13338:11;13350:8;-1:-1;13338:21;;;;;;;-1:-1;;13331:28;;-1:-1::-;;10767:24;;:::i;:::-;;10750:41;;;10797:17;-1:-1;10818:1;-1:-1;;;;;;:::-;10797:22;;:17;-1:-1;10839:5;-1:-1;;;;;;10862:8;-1:-1;;;11022:1;-1:-1;;;10824:47;:::i;10593:278::-;-1:-1::-;:::-;;;","userdoc":{}},"BondToken":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_owner","type":"address"},{"indexed":true,"name":"_spender","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"Approval","type":"event"},{"inputs":[{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_decimals","type":"uint256"},{"name":"manager_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_target","type":"address"},{"name":"_value","type":"uint256"}],"name":"mint","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_target","type":"address"},{"name":"_value","type":"uint256"}],"name":"burn","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"contractName":"BondToken","deploymentBytecode":{"bytecode":"0x602061050a600039600051604060208261050a01600039600051116105055760208161050a016000396000518060405260208201818161050a01606039505050602061052a600039600051602060208261050a01600039600051116105055760208161050a016000396000518060a0526020820160208161050a0160003960005160c052505050602061056a6000396000518060a01c6105055760e052346105055760e0516104a852604051806103e852600081601f0160051c600281116105055780156100e857905b8060051b606001518160051b6020016103e801526001018181186100c9575b50505060a051806104485260c0516104685250602061054a600039600051610488526103e861011c610000396104c8610000f36003361161000c5761034b565b60003560e01c346103d6576318160ddd811861003657600436106103d65760025460405260206040f35b63dd62ed3e811861009057604436106103d6576004358060a01c6103d6576040526024358060a01c6103d6576060526001604051602052600052604060002080606051602052600052604060002090505460805260206080f35b63a9059cbb81186100d157604436106103d6576004358060a01c6103d65760c05260203360405260c0516060526024356080526100cd60e0610351565b60e0f35b6323b872dd81186101e957606436106103d6576004358060a01c6103d65760c0526024358060a01c6103d65760e052600160c05160205260005260406000208060e0516020526000526040600020905054610100527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010051146101c557610100516044358082038281116103d657905090506101005261010051600160c05160205260005260406000208060e051602052600052604060002090505560e05160c0517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561010051610120526020610120a35b602060c05160405260e0516060526044356080526101e4610120610351565b610120f35b63095ea7b3811861026857604436106103d6576004358060a01c6103d6576040526024356001336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6340c10f1981186102bb57604436106103d6576004358060a01c6103d65760c05260206104a860003960005133186103d6576020600060405260c0516060526024356080526102b760e0610351565b60e0f35b639dc29fac811861030e57604436106103d6576004358060a01c6103d65760c05260206104a860003960005133186103d657602060c051604052600060605260243560805261030a60e0610351565b60e0f35b6370a08231811861034957602436106103d6576004358060a01c6103d657604052600060405160205260005260406000205460605260206060f35b505b60006000fd5b6000604051602052600052604060002080546080518082038281116103d657905090508155506000606051602052600052604060002080546080518082018281106103d657905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a36001815250565b600080fda165767970657283000307000b005b600080fd"},"dev_messages":{},"devdoc":{},"pcmap":{"101":[41,32,41,50],"102":[42,11,42,26],"104":[42,27,42,33],"107":[42,11,42,34],"109":[42,11,42,34],"110":[42,11,42,34],"112":[42,11,42,34],"113":[42,11,42,34],"115":[42,11,42,34],"117":[42,11,42,34],"119":[42,35,42,43],"133":[42,11,42,44],"134":[42,11,42,44],"175":[53,13,53,26],"177":[53,13,53,26],"180":[54,26,54,36],"184":[54,38,54,41],"190":[54,43,54,49],"199":[54,11,54,50],"201":[54,11,54,50],"204":[54,11,54,50],"205":[54,11,54,50],"206":[54,11,54,50],"240":[58,17,58,32],"242":[58,17,58,32],"254":[58,34,58,47],"256":[58,34,58,47],"257":[59,25,59,40],"259":[59,41,59,46],"262":[59,25,59,47],"264":[59,25,59,47],"265":[59,25,59,47],"267":[59,25,59,47],"268":[59,25,59,47],"270":[59,25,59,47],"272":[59,25,59,47],"274":[59,48,59,51],"288":[59,25,59,52],"289":[59,25,59,52],"294":[59,4,59,52],"295":[61,20,61,38],"328":[61,8,61,17],"331":[61,8,61,38],"333":[61,4,65,43],"336":[61,4,65,43],"337":[62,20,62,29],"340":[62,20,62,38],"341":[67,38,67,44],"345":[62,20,62,38],"347":[62,20,62,38],"354":[62,20,62,38],"355":[62,20,62,38],"356":[62,20,62,38],"357":[62,20,62,38],"358":[62,8,62,17],"361":[62,8,62,38],"362":[63,38,63,47],"366":[63,8,63,23],"368":[63,24,63,29],"371":[63,8,63,30],"373":[63,8,63,30],"374":[63,8,63,30],"376":[63,8,63,30],"377":[63,8,63,30],"379":[63,8,63,30],"381":[63,8,63,30],"383":[63,31,63,34],"397":[63,8,63,35],"398":[63,8,63,35],"400":[65,28,65,31],"402":[65,8,65,43],"403":[65,21,65,26],"405":[65,8,65,43],"406":[65,8,65,43],"43":[36,11,36,28],"439":[65,33,65,42],"449":[65,8,65,43],"452":[65,8,65,43],"453":[61,4,65,43],"456":[67,26,67,31],"462":[67,33,67,36],"468":[67,38,67,44],"477":[67,11,67,45],"480":[67,11,67,45],"483":[67,11,67,45],"484":[67,11,67,45],"485":[67,11,67,45],"520":[70,12,70,30],"522":[70,12,70,30],"523":[72,39,72,45],"526":[71,4,71,19],"528":[71,20,71,30],"529":[71,4,71,31],"531":[71,4,71,31],"532":[71,4,71,31],"534":[71,4,71,31],"535":[71,4,71,31],"537":[71,4,71,31],"539":[71,4,71,31],"541":[71,32,71,40],"555":[71,4,71,41],"556":[71,4,71,41],"557":[71,4,71,50],"558":[72,29,72,37],"560":[72,4,72,46],"561":[72,17,72,27],"562":[72,4,72,46],"595":[72,39,72,45],"603":[72,4,72,46],"605":[72,4,72,46],"606":[73,11,73,15],"647":[77,9,77,25],"649":[77,9,77,25],"650":[78,11,78,32],"651":[78,11,78,32],"652":[78,11,78,32],"655":[78,11,78,32],"657":[78,11,78,32],"658":[78,11,78,32],"660":[78,11,78,32],"661":[78,11,78,21],"662":[78,11,78,32],"663":[78,4,78,32],"666":[78,4,78,32],"674":[79,42,79,49],"680":[79,51,79,57],"689":[79,11,79,58],"691":[79,11,79,58],"694":[79,11,79,58],"695":[79,11,79,58],"696":[79,11,79,58],"730":[82,9,82,25],"732":[82,9,82,25],"733":[83,11,83,32],"734":[83,11,83,32],"735":[83,11,83,32],"738":[83,11,83,32],"740":[83,11,83,32],"741":[83,11,83,32],"743":[83,11,83,32],"744":[83,11,83,21],"745":[83,11,83,32],"746":[83,4,83,32],"749":[83,4,83,32],"752":[84,26,84,33],"763":[84,51,84,57],"772":[84,11,84,58],"774":[84,11,84,58],"777":[84,11,84,58],"778":[84,11,84,58],"779":[84,11,84,58],"849":[46,0,50,15],"85":[41,14,41,30],"850":[47,4,47,18],"852":[47,19,47,24],"855":[47,4,47,25],"857":[47,4,47,25],"858":[47,4,47,25],"860":[47,4,47,25],"861":[47,4,47,25],"863":[47,4,47,25],"865":[47,4,47,25],"868":[47,29,47,35],"87":[41,14,41,30],"883":[47,4,47,35],"884":[47,4,47,35],"887":[47,4,47,35],"888":[48,4,48,18],"890":[48,19,48,22],"893":[48,4,48,23],"895":[48,4,48,23],"896":[48,4,48,23],"898":[48,4,48,23],"899":[48,4,48,23],"901":[48,4,48,23],"903":[48,4,48,23],"906":[48,27,48,33],"921":[48,4,48,33],"922":[48,4,48,33],"925":[48,4,48,33],"926":[49,24,49,27],"928":[49,4,49,36],"929":[49,17,49,22],"931":[49,4,49,36],"932":[49,4,49,36],"965":[49,29,49,35],"973":[49,4,49,36],"975":[49,4,49,36],"976":[50,11,50,15],"979":[50,4,50,15],"980":[50,4,50,15],"99":[41,32,41,50]},"runtimeBytecode":{"bytecode":"0x6003361161000c5761034b565b60003560e01c346103d6576318160ddd811861003657600436106103d65760025460405260206040f35b63dd62ed3e811861009057604436106103d6576004358060a01c6103d6576040526024358060a01c6103d6576060526001604051602052600052604060002080606051602052600052604060002090505460805260206080f35b63a9059cbb81186100d157604436106103d6576004358060a01c6103d65760c05260203360405260c0516060526024356080526100cd60e0610351565b60e0f35b6323b872dd81186101e957606436106103d6576004358060a01c6103d65760c0526024358060a01c6103d65760e052600160c05160205260005260406000208060e0516020526000526040600020905054610100527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010051146101c557610100516044358082038281116103d657905090506101005261010051600160c05160205260005260406000208060e051602052600052604060002090505560e05160c0517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561010051610120526020610120a35b602060c05160405260e0516060526044356080526101e4610120610351565b610120f35b63095ea7b3811861026857604436106103d6576004358060a01c6103d6576040526024356001336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6340c10f1981186102bb57604436106103d6576004358060a01c6103d65760c05260206104a860003960005133186103d6576020600060405260c0516060526024356080526102b760e0610351565b60e0f35b639dc29fac811861030e57604436106103d6576004358060a01c6103d65760c05260206104a860003960005133186103d657602060c051604052600060605260243560805261030a60e0610351565b60e0f35b6370a08231811861034957602436106103d6576004358060a01c6103d657604052600060405160205260005260406000205460605260206060f35b505b60006000fd5b6000604051602052600052604060002080546080518082038281116103d657905090508155506000606051602052600052604060002080546080518082018281106103d657905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a36001815250565b600080fda165767970657283000307000b"},"sourceId":"BondToken.vy","sourcemap":"-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;;:::-;;;;;:::-;805:17;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;855:16;;-1:-1;;;;;;:::-;873:18;;916:15;932:6;-1:-1;916:23;;;;;;;-1:-1;940:8;-1:-1;;;;;;;;916:33;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1181:13;;-1:-1;1249:10;-1:-1;;1261:3;-1:-1;;;1266:6;-1:-1;;;;1234:39;;:::i;:::-;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1303:15;;-1:-1;;;;;;:::-;1320:13;;1387:15;1403:5;-1:-1;1387:22;;;;;;;-1:-1;1410:3;-1:-1;;;;;;;;1387:27;;-1:-1;;1366:48;1484:18;1472:9;:30;-1:-1;1468:249;:::-;1525:9;:18;1757:6;-1:-1;;1525:18;-1:-1;1525:18;-1:-1;;;:::-;1525:18;;;;1513:9;:30;1582:9;-1:-1;1552:15;1568:5;-1:-1;1552:22;;;;;;;-1:-1;1575:3;-1:-1;;;;;;;;1552:27;;-1:-1;1702:3;1682:35;1695:5;1682:35;;1707:9;-1:-1;;;;1682:35;;1468:249::-;-1:-1;1745:5;-1:-1;;;1752:3;-1:-1;;;1757:6;-1:-1;;;;1730:34;;:::i;:::-;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1788:18;;1925:6;-1:-1;1839:15;1855:10;1839:27;;;;;;;-1:-1;1867:8;-1:-1;;;;;;;;1839:37;;:46;1915:8;1890:42;1903:10;1890:42;1925:6;-1:-1;;;;1890:42;;1944:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1970:16;;2025:21;;;;;;;:10;:21;2018:28;:::-;-1:-1;;;;2089:7;-1:-1;;;2098:6;-1:-1;;;;2058:47;;:::i;:::-;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;2126:16;;2181:21;;;;;;;:10;:21;2174:28;:::-;-1:-1;2229:7;-1:-1;;;;;;2254:6;-1:-1;;;;2214:47;;:::i;:::-;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;;;;;;;;;;;;;;;;:::-;;:::-;;;;962:194::-;1038:14;1053:5;-1:-1;1038:21;;;;;;;-1:-1;;1063:6;-1:-1;;;;;;;;:::-;;;1038:31;;-1:-1;;1038:31;1074:14;1089:3;-1:-1;1074:19;;;;;;;-1:-1;;1097:6;-1:-1;;;;;;;;:::-;;;1074:29;;-1:-1;;1074:29;1128:3;1108:32;1121:5;1108:32;;1133:6;-1:-1;;;;1108:32;;1152:4;-1:-1;1145:11;;-1:-1::-;:::-;;;","userdoc":{}},"PoolDelegate":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"shares","type":"uint256"},{"indexed":true,"name":"owner","type":"address"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"assets","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"shares","type":"uint256"},{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"sender","type":"address"},{"indexed":false,"name":"assets","type":"uint256"}],"name":"Withdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"pre_op_price","type":"uint256"},{"indexed":false,"name":"post_op_price","type":"uint256"},{"indexed":false,"name":"trans_change","type":"int256"}],"name":"TrackSharePrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"id","type":"bytes32"},{"indexed":true,"name":"recovered","type":"uint256"},{"indexed":true,"name":"lost","type":"uint256"},{"indexed":false,"name":"old_apr","type":"int256"},{"indexed":false,"name":"new_apr","type":"int256"},{"indexed":false,"name":"share_price","type":"uint256"},{"indexed":false,"name":"fees_burned","type":"uint256"}],"name":"Impair","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"vault","type":"address"},{"indexed":true,"name":"assets","type":"uint256"},{"indexed":true,"name":"shares","type":"uint256"}],"name":"Invest4626","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"vault","type":"address"},{"indexed":true,"name":"assets","type":"uint256"},{"indexed":true,"name":"shares","type":"uint256"}],"name":"Divest4626","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"fee_bps","type":"uint16"},{"indexed":true,"name":"fee_type","type":"uint256"}],"name":"UpdateFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newRecipient","type":"address"}],"name":"NewPendingFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newRecipient","type":"address"}],"name":"AcceptFeeRecipient","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"payer","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":true,"name":"fee","type":"uint256"},{"indexed":false,"name":"shares","type":"uint256"},{"indexed":false,"name":"feeType","type":"uint256"}],"name":"FeesGenerated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"recipient","type":"address"},{"indexed":true,"name":"fees","type":"uint256"}],"name":"OwnerFeeClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"pendingOwner","type":"address"}],"name":"NewPendingOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"}],"name":"UpdateOwner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"minimum","type":"uint256"}],"name":"UpdateMinDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"maximum","type":"uint256"}],"name":"UpdateMaxAssets","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"token","type":"address"},{"indexed":true,"name":"amount","type":"uint256"}],"name":"Sweep","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"degredation","type":"uint256"}],"name":"UpdateProfitDegredation","type":"event"},{"inputs":[{"name":"_delegate","type":"address"},{"name":"_asset","type":"address"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"components":[{"name":"performance","type":"uint16"},{"name":"deposit","type":"uint16"},{"name":"withdraw","type":"uint16"},{"name":"flash","type":"uint16"},{"name":"collector","type":"uint16"},{"name":"referral","type":"uint16"}],"name":"_fees","type":"tuple"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"name":"line","type":"address"},{"name":"drate","type":"uint128"},{"name":"frate","type":"uint128"},{"name":"amount","type":"uint256"}],"name":"add_credit","outputs":[{"name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"line","type":"address"},{"name":"id","type":"bytes32"},{"name":"amount","type":"uint256"}],"name":"increase_credit","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"line","type":"address"},{"name":"id","type":"bytes32"},{"name":"drate","type":"uint128"},{"name":"frate","type":"uint128"}],"name":"set_rates","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"line","type":"address"},{"name":"id","type":"bytes32"}],"name":"collect_interest","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"line","type":"address"},{"name":"id","type":"bytes32"},{"name":"amount","type":"uint256"}],"name":"reduce_credit","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"line","type":"address"},{"name":"repay","type":"uint256"},{"name":"withdraw","type":"uint256"}],"name":"use_and_repay","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"line","type":"address"},{"name":"id","type":"bytes32"}],"name":"impair","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"vault","type":"address"},{"name":"amount","type":"uint256"}],"name":"invest_4626","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"vault","type":"address"},{"name":"amount","type":"uint256"}],"name":"divest_4626","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"token","type":"address"}],"name":"sweep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"token","type":"address"},{"name":"amount","type":"uint256"}],"name":"sweep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"new_owner","type":"address"}],"name":"update_owner","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"accept_owner","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"new_min","type":"uint256"}],"name":"update_min_deposit","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"new_max","type":"uint256"}],"name":"update_max_assets","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"fee","type":"uint16"}],"name":"update_performance_fee","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"fee","type":"uint16"}],"name":"update_flash_fee","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"fee","type":"uint16"}],"name":"update_collector_fee","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"fee","type":"uint16"}],"name":"update_deposit_fee","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"fee","type":"uint16"}],"name":"update_withdraw_fee","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"new_recipient","type":"address"}],"name":"update_fee_recipient","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"newRecipient","type":"address"}],"name":"accept_fee_recipient","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"amount","type":"uint256"}],"name":"claim_fees","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"degradation","type":"uint256"}],"name":"update_profit_degredation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlock_profits","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"assets","type":"uint256"},{"name":"receiver","type":"address"}],"name":"deposit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"assets","type":"uint256"},{"name":"receiver","type":"address"},{"name":"referrer","type":"address"}],"name":"depositWithReferral","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"shares","type":"uint256"},{"name":"receiver","type":"address"}],"name":"mint","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"shares","type":"uint256"},{"name":"receiver","type":"address"},{"name":"referrer","type":"address"}],"name":"mintWithReferral","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"assets","type":"uint256"},{"name":"receiver","type":"address"},{"name":"owner","type":"address"}],"name":"withdraw","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"shares","type":"uint256"},{"name":"receiver","type":"address"},{"name":"owner","type":"address"}],"name":"redeem","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"to","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"sender","type":"address"},{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_token","type":"address"}],"name":"maxFlashLoan","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_token","type":"address"},{"name":"_amount","type":"uint256"}],"name":"flashFee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"receiver","type":"address"},{"name":"_token","type":"address"},{"name":"amount","type":"uint256"},{"name":"data","type":"bytes"}],"name":"flashLoan","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"apiVersion","outputs":[{"name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"},{"name":"amount","type":"uint256"},{"name":"deadline","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"permit","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"account","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"APR","outputs":[{"name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"price","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_assets","type":"uint256"}],"name":"convertToShares","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_receiver","type":"address"}],"name":"maxDeposit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_receiver","type":"address"}],"name":"maxMint","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_owner","type":"address"}],"name":"maxWithdraw","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_owner","type":"address"}],"name":"maxRedeem","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_shares","type":"uint256"}],"name":"previewMint","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"_shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"total_supply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"asset","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"total_assets","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"last_report","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"locked_profit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"locked_profit_degradation","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"address"}],"name":"nonces","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CACHED_CHAIN_ID","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CACHED_COMAIN_SEPARATOR","outputs":[{"name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pending_owner","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee_recipient","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pending_fee_recipient","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"min_deposit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"max_assets","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"total_deployed","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accrued_fees","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fees","outputs":[{"components":[{"name":"performance","type":"uint16"},{"name":"deposit","type":"uint16"},{"name":"withdraw","type":"uint16"},{"name":"flash","type":"uint16"},{"name":"collector","type":"uint16"},{"name":"referral","type":"uint16"}],"name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"contractName":"PoolDelegate","deploymentBytecode":{"bytecode":"0x6020613a6f6000396000518060a01c613a6a57610180526020613a8f6000396000518060a01c613a6a576101a0526020613aaf6000396000516022602082613a6f0160003960005111613a6a57602081613a6f01600039600051806101c052602082018181613a6f016101e0395050506020613acf600039600051600f602082613a6f0160003960005111613a6a57602081613a6f01600039600051806102205260208201602081613a6f01600039600051610240525050506020613aef6000396000518060101c613a6a57610260526020613b0f6000396000518060101c613a6a57610280526020613b2f6000396000518060101c613a6a576102a0526020613b4f6000396000518060101c613a6a576102c0526020613b6f6000396000518060101c613a6a576102e0526020613b8f6000396000518060101c613a6a576103005234613a6a57336009556101805115613a6a5761026051604052600160605261016b6103206137c3565b6103205115613a6a576102e051604052601060605261018b610320613a24565b6103205115613a6a576102c05160405260086060526101ab610320613a24565b6103205115613a6a576103005160405260206060526101cb610320613a24565b6103205115613a6a576102805160405260026060526101eb610320613a24565b6103205115613a6a576102a051604052600460605261020b610320613a24565b6103205115613a6a576101805160095561026051601155610280516012556102a0516013556102c0516014556102e051601555610300516016556101c05180604052806060826101e060045afa505061026561032061380a565b61032080518061345b5260208201600082601f0160051c60028111613a6a5780156102aa57905b8060051b8301518160051b60200161345b015260010181811861028c575b5050505050610220518060405261024051606052506102ca6103206139ad565b6103208051806134bb526020820180516134db525050506101a05163313ce567610320526020610320600461033c845afa61030a573d600060003e3d6000fd5b60203d10613a6a57610320518060081c613a6a57610360526103609050516134fb526101a05161351b526529d635a8e0006007554661353b5261034e6103206138d3565b6103205161355b5261345b6103686100003961357b610000f36003361161000c576124e1565b60003560e01c346134495763d0a96dfd81186100ec5760843610613449576004358060a01c613449576060526024358060801c613449576080526044358060801c6134495760a05260005460021461344957600260005560643560405261007161264e565b600f546064358082018281106134495790509050600f55602060605163cb83620960c05260805160e05260a0516101005260643561012052602061351b600039600051610140523061016052602060c060a460dc6000855af16100d9573d600060003e3d6000fd5b60203d106134495760c090506003600055f35b63f17a028f81186101925760643610613449576004358060a01c6134495760605260005460021461344957600260005560443560405261012a61264e565b600f546044358082018281106134495790509050600f55602060605163c36515746080526040602460a037602060806044609c6000855af1610171573d600060003e3d6000fd5b60203d10613449576080518060011c6134495760e05260e090506003600055f35b635b868ff781186102325760843610613449576004358060a01c613449576040526044358060801c613449576060526064358060801c61344957608052600954331861344957602060405163ac856fac60a05260243560c05260605160e05260805161010052602060a0606460bc6000855af1610214573d600060003e3d6000fd5b60203d106134495760a0518060011c61344957610120526101209050f35b63425f885481186102955760443610613449576004358060a01c61344957610440526000546002146134495760026000556020610440516103005260243561032052600061034052610285610460612cd3565b6104606020810190506003600055f35b63fc398fd881186102f65760643610613449576004358060a01c61344957610440526000546002146134495760026000556009543318613449576040610440516103005260406024610320376102ec610460612cd3565b6104606003600055f35b63db862b6681186103f45760643610613449576004358060a01c61344957610440526000546002146134495760026000556009543318613449576104405163fac333ac6104805260006104a0526020610480602461049c845afa61035f573d600060003e3d6000fd5b60203d106134495761048090505161046052610440516367828fbd610480526024356104a0526020610480602461049c6000855af16103a3573d600060003e3d6000fd5b60203d1061344957610480518060011c613449576104c0526104c09050511561344957604061044051610300526104605161032052604435610340526103ea610480612cd3565b6104806003600055f35b63e992871a811861077b5760443610613449576004358060a01c613449576102205260005460021461344957600260005560046102205163200d2ed2610240526020610240600461025c845afa610450573d600060003e3d6000fd5b60203d10613449576102409050511861344957610220516342997913610320526024356103405260e0610320602461033c845afa610493573d600060003e3d6000fd5b60e03d106134495761032051610420526103405161044052610360516104605261038051610480526103a0518060081c613449576104a0526103c0518060a01c613449576104c0526103e0518060a01c613449576104e052610420905080516102405260208101516102605260408101516102805260608101516102a05260808101516102c05260a08101516102e05260c0810151610300525061024051610260518082038281116134495790509050610320526102205163040cf0206103405260243561036052610320516102a0518082018281106134495790509050610380526020610340604461035c6000855af1610593573d600060003e3d6000fd5b60203d1061344957610340518060011c613449576103a0526103a050506105bb610360612b99565b61036051610340526105ce610380612675565b610380516103605260006103805261026051601054101561065057601054610380526001546103805180820382811161344957905090506001556102605161038051610360518082028115838383041417156134495790509050808203828111613449579050905060c052600160e052610646612bb7565b600060105561069a565b610260516103605180156134495780820490509050610380526010546103805180820382811161344957905090506010556001546103805180820382811161344957905090506001555b6102a051156106b7576102a05160c052600060e0526106b7612bb7565b61038051156106cb576009543314156106ce565b60005b1561070257306101205233610140526103805161016052610bb86101805260406101a0526106fd6103a06128da565b6103a0505b61026051610320516024357f1ac067b632f5eb544f1a44a0a527a048bae80040f82c08d06f01652e68dab626610340516103c0526107416103a0612b99565b6103a0516103e0526103605161040052610380516104205260806103c0a4610320516103a052610260516103c05260406103a06003600055f35b637c348407811861084b5760443610613449576004358060a01c613449576060526000546002146134495760026000556024356040526107b961264e565b600f546024358082018281106134495790509050600f55606051636e553f6560a05260243560c0523060e052602060a0604460bc6000855af1610801573d600060003e3d6000fd5b60203d106134495760a09050516080526080516024356060517f52c96d47a80d9b25a93e127820d4f5ab071d7200a846923b905baa2a811ea68c600060a0a4602060806003600055f35b636071d9d4811861091a5760443610613449576004358060a01c61344957604052600054600214613449576002600055600954331861344957600f546024358082018281106134495790509050600f5560405163b460af946060526024356080523060a0523060c052602060606064607c6000855af16108d0573d600060003e3d6000fd5b60203d10613449576060505060006024356040517f8c8e960392ed5042fd2125f1560d2249b90f2c0074c39d7e88fb6eb6e79cad4560006060a46001606052602060606003600055f35b6301681a6281186109575760243610613449577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61020052610972565b636ea056a98118610a96576044361061344957602435610200525b6004358060a01c613449576101e052600954331861344957610200516102205261022051196109dc576101e0516370a082316102405230610260526020610240602461025c845afa6109c9573d600060003e3d6000fd5b60203d1061344957610240905051610220525b602061351b6000396000516101e05118610a4957602061351b6000396000516370a082316102405230610260526020610240602461025c845afa610a25573d600060003e3d6000fd5b60203d10613449576102409050516004548082038281116134495790509050610220525b610220516101e0517fab2246061d7b0dd3631d037e3f6da75782ae489eeb9f6af878a4b25df9b07c776000610240a36101e05160405260095460605261022051608052610a9461269b565b005b6349e7fc2a8118610afa5760243610613449576004358060a01c61344957604052600954331861344957604051600a556040517f69737d41162474a7ca514809b07d7becaecf72eae8c23bceb071f0e09af93ffc60006060a2600160605260206060f35b63b2c1e1de8118610b50576004361061344957600a54331861344957600a54600955600a547f84022644ce39de434e8f39c4398a3628815893104188274c37205d41c2d5096760006040a2600160405260206040f35b63131b09f98118610ba6576024361061344957600954331861344957600435600d556004357fbc4b9b4fa5f3e34af4236a368b445c3845cf5247dd7c971534685fa80c1cb0d960006040a2600160405260206040f35b63a4a2fc878118610bfc576024361061344957600954331861344957600435600e556004357fcf2ffd83574e0bfcf18326b0092428a3f861af95312abab81bfeb22d93abee5160006040a2600160405260206040f35b6308e5d8018118610c525760243610613449576004358060101c6134495760805260005460021461344957600260005560805160115560206080516040526001606052610c4960a06124e7565b60a06003600055f35b63a78feacb8118610ca85760243610613449576004358060101c6134495760805260005460021461344957600260005560805160145560206080516040526008606052610c9f60a0612608565b60a06003600055f35b63e5030fd98118610cfe5760243610613449576004358060101c6134495760805260005460021461344957600260005560805160155560206080516040526010606052610cf560a0612608565b60a06003600055f35b6371626c678118610d545760243610613449576004358060101c6134495760805260005460021461344957600260005560805160155560206080516040526002606052610d4b60a0612608565b60a06003600055f35b635ae51ece8118610daa5760243610613449576004358060101c6134495760805260005460021461344957600260005560805160155560206080516040526004606052610da160a0612608565b60a06003600055f35b63aa862d458118610e115760243610613449576004358060a01c61344957604052600b54331861344957604051600c557f653c99046badd5824122a6927580b9bc3ba7814333d63e6105783bb2779e483a60405160605260206060a1600160605260206060f35b63e2cfadde8118610e745760243610613449576004358060a01c61344957604052600c5433186134495733600b557f6718bb71e4ad7e4e26b5b5e86e95d178e12d42f6d0b4dee3af5a0ff1a6873e423360605260206060a1600160605260206060f35b63829ba1f18118610f92576024361061344957600054600214613449576002600055600b54331861344957610ea960e0612b99565b60e05160c052600160c051126134495760043560e05260043519610ece5760105460e0525b60105460e0518082038281116134495790509050601055306040523360605260e051608052610efe6101006127c9565b6101005060e051600b547fb12a1d5f04d39b4b9a6c36fe3af0083fde89e96eeb4b11b771cbf2afc20a0be96000610100a3610f3a610120612675565b61012051610100527f948baf513f1cc4cf9907b75a396d0b9d9515d2d4d7e8793fd32ef72e74dff3956101005161012052610100516101405260c051610160526060610120a160016101205260206101206003600055f35b6312432dd78118611004576024361061344957600054600214613449576002600055600954331861344957670de0b6b3a764000060043511613449576004356007556004357ffd8a95def6639b459281108310d09bc3f0e381e74eb762ec5e59e12d9c15dced60006040a26003600055005b63b489e834811861103b576004361061344957600054600214613449576002600055602061103260c0612ba0565b60c06003600055f35b636e553f6581186110985760443610613449576024358060a01c6134495761036052600054600214613449576002600055602060043561022052610360516102405260006102605261108e610380612e65565b6103806003600055f35b63d48fbb9581186111065760643610613449576024358060a01c61344957610360526044358060a01c6134495761038052600054600214613449576002600055602060043561022052610360516102405261038051610260526110fc6103a0612e65565b6103a06003600055f35b6394bf804d81186111ae5760443610613449576024358060a01c61344957610360526000546002146134495760026000556111426103a0612675565b6103a051610380526004356103805180820281158383830414171561344957905090506102205261036051610240526000610260526111826103a0612e65565b6103a0516103805180820281158383830414171561344957905090506103c05260206103c06003600055f35b63227a798581186112675760643610613449576024358060a01c61344957610360526044358060a01c61344957610380526000546002146134495760026000556111f96103c0612675565b6103c0516103a0526004356103a0518082028115838383041417156134495790509050610220526103605161024052610380516102605261123b6103c0612e65565b6103c0516103a05180820281158383830414171561344957905090506103e05260206103e06003600055f35b63b460af9481186112d55760643610613449576024358060a01c61344957610320526044358060a01c613449576103405260005460021461344957600260005560206004356101e052610340516102005261032051610220526112cb61036061319a565b6103606003600055f35b63ba087652811861138e5760643610613449576024358060a01c61344957610320526044358060a01c6134495761034052600054600214613449576002600055611320610380612675565b61038051610360526004356103605180820281158383830414171561344957905090506101e0526103405161020052610320516102205261136261038061319a565b610380516103605180820281158383830414171561344957905090506103a05260206103a06003600055f35b63a9059cbb81186113e35760443610613449576004358060a01c6134495760c05260005460021461344957600260005560203360405260c0516060526024356080526113da60e06127c9565b60e06003600055f35b6323b872dd811861146a5760643610613449576004358060a01c6134495760c0526024358060a01c6134495760e05260005460021461344957600260005560c0516040526044356060526114386101006130ba565b610100511561344957602060c05160405260e0516060526044356080526114606101006127c9565b6101006003600055f35b63095ea7b381186114e95760443610613449576004358060a01c613449576040526024356003336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6339509351811861159c5760443610613449576004358060a01c61344957604052600333602052600052604060002080604051602052600052604060002090505460243580820182811061344957905090506060526060516003336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560605160805260206080a3600160805260206080f35b63613255ab81186115f35760243610613449576004358060a01c61344957604052602061351b600039600051604051146115e2576000606052602060606115f1566115f1565b60206115ee6060613181565b60605bf35b63d9d98ce481186116485760443610613449576004358060a01c6134495761014052602061351b60003960005161014051186134495760206101405160805260243560a0526116436101606133eb565b610160f35b635cffe9de811861189b5760a43610613449576004358060a01c613449576101e0526024358060a01c61344957610200526064356004016161a88135116134495780358061022052602082018181610240375050506000546002146134495760026000556116b7616400613181565b616400516044351161344957602061351b600039600051604052336060526044356080526116e361269b565b6102005160805260443560a0526116fb6164206133eb565b61642051616400527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd96101e0516323e30c8b6164205260a03361644052610200516164605260443561648052616400516164a052806164c0528061644001610220518082526020820181818361024060045afa5050508051806020830101601f82600003163682375050601f19601f82516020010116905081015050602061642061628461643c6000855af16117b6573d600060003e3d6000fd5b60203d10613449576164209050511861344957602061351b6000396000516323b872dd6164205233616440523061646052604435616400518082018281106134495790509050616480526020616420606461643c6000855af161181e573d600060003e3d6000fd5b60203d1061344957616420518060011c613449576164a0526164a050506164005160c052600060e05261184f612bb7565b6164005130337fbc4d39efeb1b275027eea2b2a7b698f03ed7a3696b942049218abb6c32ea52bd604435616420526008616440526040616420a460016164205260206164206003600055f35b6325829410811861192357600436106134495760208060805260076040527f302e302e3030310000000000000000000000000000000000000000000000000060605260408160800181518082526020830160208301815181525050508051806020830101601f82600003163682375050601f19601f8251602001011690509050810190506080f35b633644e5158118611977576004361061344957602061353b600039600051461861196457602061355b60003960005161018052602061018061197556611975565b602061197161018061252e565b6101805bf35b639fd5a6cf8118611c605760c43610613449576004358060a01c61344957610180526024358060a01c613449576101a0526084356004016041813511613449578035806101c0526020820181816101e0375050506101805115613449574260643510613449576008610180516020526000526040600020546102405260006002610280527f19010000000000000000000000000000000000000000000000000000000000006102a052610280805160208201836103e00181518152505080830192505050611a466102c061252e565b6102c051816103e0015260208101905060007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9816103000152602081019050610180518161030001526020810190506101a05181610300015260208101905060443581610300015260208101905061024051816103000152602081019050606435816103000152602081019050806102e0526102e09050805160208201209050816103e00152602081019050806103c0526103c09050805160208201209050610260526101c051602011613449576101e0516102c05260206102a0526102a06020810151815160200360031b1c9050610280526101c05160401161344957610200516102e05260206102c0526102c06020810151815160200360031b1c90506102a0526101c05160411161344957610220516103005260016102e0526102e06020810151815160200360031b1c90506102c05261018051610260516102e0526102c0516103005261028051610320526102a051610340526020600060806102e060015afa5060005118613449576044356003610180516020526000526040600020806101a051602052600052604060002090505561024051600181018181106134495790506008610180516020526000526040600020556101a051610180517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256044356102e05260206102e0a360016102e05260206102e0f35b6370a082318118611c9b5760243610613449576004358060a01c61344957604052600260405160205260005260406000205460605260206060f35b63dd62ed3e8118611cf55760443610613449576004358060a01c613449576040526024358060a01c613449576060526003604051602052600052604060002080606051602052600052604060002090505460805260206080f35b6301e1d1148118611d1457600436106134495760045460405260206040f35b6318160ddd8118611d3357600436106134495760015460405260206040f35b63bd30558e8118611d565760043610613449576020611d526040612b99565b6040f35b63a035b1fe8118611d795760043610613449576020611d756060612675565b6060f35b63c6e6f5928118611dbf57602436106134495760043560045460015480156134495780820490509050808202811583838304141715613449579050905060405260206040f35b6307a2d13a8118611e0557602436106134495760043560015460045480156134495780820490509050808202811583838304141715613449579050905060405260206040f35b63402d267d8118611e365760243610613449576004358060a01c613449576040526004548019905060605260206060f35b63c63d75b68118611e815760243610613449576004358060a01c6134495760605260045480199050611e686080612675565b6080518015613449578082049050905060a052602060a0f35b63ce96cb778118611eb25760243610613449576004358060a01c613449576040526020611eae6060613181565b6060f35b63d905777e8118611f035760243610613449576004358060a01c61344957606052611edd6080613181565b608051611eea60a0612675565b60a0518015613449578082049050905060c052602060c0f35b63ef8b30f78118611f93576024361061344957611f2060a0612675565b60a05160805260045480199050600435808281188284100218905090506080518015613449578082049050905060a05260a05160043560805180156134495780820490509050604052601254606052611f7960c061289e565b60c051808203828111613449579050905060e052602060e0f35b63b3d7f6b98118612031576024361061344957611fb060a0612675565b60a0516080526004548019905060043560805180820281158383830414171561344957905090508082811882841002189050905060a05260a05160a05160405260125460605261200060c061289e565b60c0518082038281116134495790509050608051808202811583838304141715613449579050905060e052602060e0f35b630a28a47781186120cb57602436106134495761204e60a0612675565b60a05160805261205e60c0613181565b60c05160043580199050808281188284100218905090506080518015613449578082049050905060a05260a051600435608051801561344957808204905090506040526013546060526120b160c061289e565b60c051808203828111613449579050905060e052602060e0f35b634cdad506811861216f5760243610613449576120e860a0612675565b60a0516080526120f860c0613181565b60c05160043560805180820281158383830414171561344957905090508082811882841002189050905060a05260a05160a05160405260135460605261213e60c061289e565b60c0518082038281116134495790509050608051808202811583838304141715613449579050905060e052602060e0f35b6306fdde0381186121d057600436106134495760208060405280604001602061345b600039600051808252602082018161347b823950508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b4181186122385760043610613449576020806040528060400160206134bb6000396000518082526020820160206134db600039600051815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63313ce567811861225f57600436106134495760206134fb60003960005160405260206040f35b633940e9ee811861227e57600436106134495760015460405260206040f35b6338d52e0f81186122a5576004361061344957602061351b60003960005160405260206040f35b630b3d047081186122c457600436106134495760045460405260206040f35b63a653a93e81186122e357600436106134495760055460405260206040f35b637d0a490d811861230257600436106134495760065460405260206040f35b63a952807d811861232157600436106134495760075460405260206040f35b637ecebe00811861235c5760243610613449576004358060a01c61344957604052600860405160205260005260406000205460605260206060f35b63c8ee24e08118612383576004361061344957602061353b60003960005160405260206040f35b634eb9c3b381186123aa576004361061344957602061355b60003960005160405260206040f35b638da5cb5b81186123c957600436106134495760095460405260206040f35b637f4ec4c381186123e8576004361061344957600a5460405260206040f35b63758f969a8118612407576004361061344957600b5460405260206040f35b63b8e269808118612426576004361061344957600c5460405260206040f35b634d5f811e8118612445576004361061344957600d5460405260206040f35b63926e1cfc8118612464576004361061344957600e5460405260206040f35b63531890218118612483576004361061344957600f5460405260206040f35b638c0482e181186124a257600436106134495760105460405260206040f35b639af1d35a81186124df57600436106134495760115460405260125460605260135460805260145460a05260155460c05260165460e05260c06040f35b505b60006000fd5b60095433186134495761271060405113613449576060516040517f7081f575009d8afada7e5caf0f289d637e3448a92fd3d68a73dde4a5c00c8fb860006080a36001815250565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8160e00152602081019050600d6040527f446562742044414f20506f6f6c0000000000000000000000000000000000000060605260408051602082012090508160e0015260208101905060076080527f302e302e3030310000000000000000000000000000000000000000000000000060a05260808051602082012090508160e00152602081019050468160e00152602081019050308160e001526020810190508060c05260c09050805160208201209050815250565b60095433186134495760c860405113613449576060516040517f7081f575009d8afada7e5caf0f289d637e3448a92fd3d68a73dde4a5c00c8fb860006080a36001815250565b600954331861344957604051600454600f5480820382811161344957905090501061344957565b600454600154801561344957808204905090506040526040511561344957604051815250565b6000600460e0527fa9059cbb000000000000000000000000000000000000000000000000000000006101005260e08051602082018361014001815181525050808301925050506060518161014001526020810190506080518161014001526020810190508061012052610120505060206101c06101205161014060006040515af161272b573d600060003e3d6000fd5b3d602081183d60201002186101a0526101a080518060a05260208201805160c05250505060a051156127c75760c05160a05160200360031b1c6127c757601060e0527f5472616e73666572206661696c656421000000000000000000000000000000006101005260e05060e0518061010001601f826000031636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b565b604051156127f85760026040516020526000526040600020805460805180820382811161344957905090508155505b606051156128275760026060516020526000526040600020805460805180820182811061344957905090508155505b6060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a36001815250565b60015460e0518082018281106134495790509050600155600060405260c05160605260e0516080526128936101006127c9565b610100506001815250565b6060516128b35760008152506128d8566128d8565b6040516060518082028115838383041417156134495790509050612710810490508152505b565b61016051604052610180516060526128f36101e061289e565b6101e0516101c0526101c0511561296f57600954610140511861294c573060c0526101c05160e0526129266101e0612860565b6101e05115613449576010546101c051808201828110613449579050905060105561296f565b6101405160c0526101c05160e0526129656101e0612860565b6101e05115613449575b6101c05161014051610120517fbc4d39efeb1b275027eea2b2a7b698f03ed7a3696b942049218abb6c32ea52bd610160516101e0526101a0516102005260406101e0a46101c051815250565b6129c6610260612675565b6102605161024052610220516129dd610280612675565b61028051801561344957808204905090506102605230610120526009546101405261026051610160526011546101805260016101a052612a1e6102a06128da565b6102a0516102805261026051604052601554606052612a3e6102c061289e565b6102c0516102a0526102a05115612a5a57600954331415612a5d565b60005b15612aee576102a05133307fbc4d39efeb1b275027eea2b2a7b698f03ed7a3696b942049218abb6c32ea52bd610260516102c05260106102e05260406102c0a46004546102a0516102405180820281158383830414171561344957905090508082038281116134495790509050600455602061351b600039600051604052336060526102a051608052612aee61269b565b610280516102a0518082018281106134495790509050815250565b4260055480820382811161344957905090506007548082028115838383041417156134495790509050604052670de0b6b3a763ffff6040511115612b55576000815250612b9756612b97565b6006546060526060516040516060518082028115838383041417156134495790509050670de0b6b3a76400008104905080820382811161344957905090508152505b565b6000815250565b612baa60a0612b09565b60a0516080526000815250565b612bc2610120612675565b610120516101005260e051612c1357612bdc610120612ba0565b6101205060045460c051808201828110613449579050905060045560065460c0518082018281106134495790509050600655612c7c565b612c1e610140612b09565b610140516101205260045460c051808203828111613449579050905060045560c0516101205111612c53576000600655612c6c565b6101205160c05180820382811161344957905090506006555b612c77610140612ba0565b610140505b7f948baf513f1cc4cf9907b75a396d0b9d9515d2d4d7e8793fd32ef72e74dff3956101005161016052612cb0610120612675565b6101205161018052612cc3610140612b99565b610140516101a0526060610160a1565b61034051610360526040366103803761030051636932854f6103c052610320516103e05260406103c060246103dc845afa612d13573d600060003e3d6000fd5b60403d10613449576103c0905080516103a0526020810151610380525061034051612d45576103805161036052612d69565b6103405119612d69576103a051610380518082018281106134495790509050610360525b610380516103605110612dad57610360516103805180820382811161344957905090506103a052600f546103a0518082038281116134495790509050600f55612dbc565b610360516103805260006103a0525b6103005163040cf0206103c052610320516103e052610360516104005260206103c060446103dc6000855af1612df7573d600060003e3d6000fd5b60203d10613449576103c0518060011c613449576104205261042090505115613449576103805115612e53576103805160c052600060e052612e37612bb7565b6103805161022052612e4a6103e06129bb565b6103e0516103c0525b6103a051815261038051602082015250565b600d54610220511061344957600e546004546102205180820182811061344957905090501161344957612e996102a0612675565b6102a051610280526102205161028051801561344957808204905090506102a05260125415612ef6576102405161012052600954610140526102a051610160526012546101805260026101a052612ef16102c06128da565b6102c0505b6102605115612f09576016541515612f0c565b60005b15612f4657610240516101205261026051610140526102a051610160526016546101805260206101a052612f416102c06128da565b6102c0505b6004546102205180820182811061344957905090506004556102405160c0526102a05160e052612f776102c0612860565b6102c050602061351b6000396000516323b872dd6102c052336102e0523061030052610220516103205260206102c060646102dc6000855af1612fbf573d600060003e3d6000fd5b60203d10613449576102c0518060011c61344957610340526103409050511561344957610240516102a0517f2c0f148b435140de488c1b34647f1511c646f7077e87007bacf22ef9977a16d8336102c052610220516102e05260406102c0a37f948baf513f1cc4cf9907b75a396d0b9d9515d2d4d7e8793fd32ef72e74dff39561028051610300526130526102c0612675565b6102c051610320526130656102e0612b99565b6102e051610340526060610300a16102a051815250565b60015460e051808203828111613449579050905060015560c051604052600060605260e0516080526130af6101006127c9565b610100506001815250565b604051331461317a5760036040516020526000526040600020803360205260005260406000209050546080527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6080511461317a5760805160605180820382811161344957905090506080526080516003604051602052600052604060002080336020526000526040600020905055336040517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560805160a052602060a0a35b6001815250565b600454600f548082038281116134495790509050815250565b6131a5610240613181565b610240516101e0511161344957610200516040526101e0516060526131cb6102406130ba565b6102405115613449576131df610260612675565b61026051610240526101e051610240518015613449578082049050905061026052610260516040526013546060526132186102a061289e565b6102a05161028052601354156132695761028051600954610220517fbc4d39efeb1b275027eea2b2a7b698f03ed7a3696b942049218abb6c32ea52bd610260516102a05260046102c05260406102a0a45b6004546101e05180820382811161344957905090506004556102205160c0526102605161028051808201828110613449579050905060e0526132ac6102a061307c565b6102a050602061351b600039600051604052610220516060526101e0516080526132d461269b565b6102205161020051610260517f14fb18a6159cb964441ea40f176151c2d2a3db8c8152e81e410e2524288736e4336102a0526101e0516102c05260406102a0a47f948baf513f1cc4cf9907b75a396d0b9d9515d2d4d7e8793fd32ef72e74dff395610240516102c052610240516102e0526133506102a0612b99565b6102a0516103005260606102c0a161026051815250566133706080612b09565b60805180820382811161344957905090508152505661338f6080612b09565b60805180820382811161344957905090506133aa60a0612675565b60a05180156134495780820490509050815250566133d05760128152506133e9566133e9565b60a05160805160200360031b1c8060081c613449578152505b565b60145461340057600081525061344756613447565b60a05161340d60c0613181565b60c051808281188284100218905090506101005260145461012052610100516040526101205160605261344060e061289e565b60e0518152505b565b600080fda165767970657283000307000b5b6009543318613a6a5761271060405113613a6a576060516040517f7081f575009d8afada7e5caf0f289d637e3448a92fd3d68a73dde4a5c00c8fb860006080a36001815250565b6000600d60a0527f446562742044414f20506f6f6c0000000000000000000000000000000000000060c05260a0805160208201836101400181518152505080830192505050600360e0527f202d2000000000000000000000000000000000000000000000000000000000006101005260e08051602082018361014001815181525050808301925050506040518161014001818183606060045afa505080820191505080610120526101209050805180835260208201602084018281848460045afa505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8160e00152602081019050600d6040527f446562742044414f20506f6f6c0000000000000000000000000000000000000060605260408051602082012090508160e0015260208101905060076080527f302e302e3030310000000000000000000000000000000000000000000000000060a05260808051602082012090508160e00152602081019050468160e00152602081019050308160e001526020810190508060c05260c09050805160208201209050815250565b600060036080527f646470000000000000000000000000000000000000000000000000000000000060a05260808051602082018360e001815181525050808301925050506040518160e0016060518152508082019150508060c05260c0905080518083526020820160208401815181525050505050565b6009543318613a6a5760c860405113613a6a576060516040517f7081f575009d8afada7e5caf0f289d637e3448a92fd3d68a73dde4a5c00c8fb860006080a36001815250565b600080fd"},"dev_messages":{"795":"dev: FUCK PLEBS","796":"dev: Pool max reached","814":"dev: asset.transferFrom() failed on deposit","828":"dev: insufficient liquidity","829":"dev: insufficient allowance","1127":"dev: invalid owner","1128":"dev: permit expired","1151":"dev: invalid signature"},"devdoc":{"methods":{"__init__(address,address,string,string,(uint16,uint16,uint16,uint16,uint16,uint16))":{"details":"configure data for contract owners and initial revenue contracts. Owner/operator/treasury can all be the same address","params":{"_asset":"ERC20 token to deposit and lend. Must verify asset is supported by oracle on Lines you want to invest in.","_delegate":"who will own and control the pool","_fees":"fees to charge on pool","_name":"custom pool name. first 0-13 chars are templated \"Debt DAO Pool - {_name}\"","_symbol":"custom pool symbol. first 5 chars are templated \"dd{token.symbol}-{_symbol}\""}},"apiVersion()":{"details":"All strategies must have an `apiVersion()` that matches the Vault's `API_VERSION`.","returns":{"_0":"API_VERSION which holds the current version of this contract."}},"deposit(uint256,address)":{"returns":{"_0":"- shares"}},"depositWithReferral(uint256,address,address)":{"returns":{"_0":"- shares"}},"impair(address,bytes32)":{"params":{"id":"- credit position on line controlled by this pool","line":"- line of credit contract to call"}},"mint(uint256,address)":{"returns":{"_0":"- assets"}},"mintWithReferral(uint256,address,address)":{"returns":{"_0":"- assets"}},"permit(address,address,uint256,uint256,bytes)":{"params":{"amount":"The amount of tokens to be spent.","deadline":"The timestamp after which the Permit is no longer valid.","owner":"The address which is a source of funds and has signed the Permit.","signature":"A valid secp256k1 signature of Permit by owner encoded as r, s, v.","spender":"The address which is allowed to spend the funds."},"returns":{"_0":"True, if transaction completes successfully"}},"previewDeposit(uint256)":{"details":"INCLUSIVE of deposit fees (should be same as without deposit fees bc of mintflation)","returns":{"_0":"shares returned when minting _assets"}},"previewMint(uint256)":{"details":"INCLUSIVE of deposit fees (should be same as without deposit fees bc of mintflation)","returns":{"_0":"assets required to mint _shares"}},"redeem(uint256,address,address)":{"returns":{"_0":"- assets"}},"sweep(address)":{"params":{"amount":"The quantity or tokenId to transfer out.","token":"The token to transfer out of this vault."}},"sweep(address,uint256)":{"params":{"amount":"The quantity or tokenId to transfer out.","token":"The token to transfer out of this vault."}},"update_profit_degredation(uint256)":{"params":{"degradation":"The rate of degradation in percent per second scaled to 1e18."}},"withdraw(uint256,address,address)":{"returns":{"_0":"- shares"}}}},"pcmap":{"100":[234,51,234,57],"10008":[648,8,648,14],"1001":[275,8,275,47],"10013":[647,26,656,5],"10016":[647,26,656,5],"1002":[275,8,275,47],"10027":[647,26,656,5],"1003":[275,8,275,47],"10046":[647,4,656,5],"10054":[647,4,656,5],"10062":[647,4,656,5],"10063":[647,4,656,5],"10064":[657,11,657,19],"10066":[657,7,657,20],"10067":[657,7,657,24],"10071":[657,4,658,58],"10075":[658,23,658,31],"10088":[658,8,658,58],"10093":[658,40,658,58],"10130":[658,40,658,58],"10131":[658,40,658,58],"10133":[658,8,658,58],"10183":[644,0,658,58],"10185":[616,0,628,12],"10186":[617,4,617,10],"10188":[617,4,617,28],"10189":[617,4,617,28],"10190":[617,1,619,33],"10193":[617,1,619,33],"10194":[619,2,619,15],"10196":[619,16,619,22],"10199":[619,2,619,23],"10201":[619,2,619,23],"10202":[619,2,619,23],"10204":[619,2,619,23],"10205":[619,2,619,23],"10207":[619,2,619,23],"10209":[619,2,619,23],"10212":[619,27,619,33],"10227":[619,2,619,33],"10228":[619,2,619,33],"10231":[619,2,619,33],"10232":[617,1,619,33],"10233":[621,4,621,12],"10235":[621,4,621,30],"10236":[621,4,621,30],"10237":[621,1,624,35],"10240":[621,1,624,35],"10241":[624,2,624,15],"10243":[624,16,624,24],"10246":[624,2,624,25],"10248":[624,2,624,25],"10249":[624,2,624,25],"10251":[624,2,624,25],"10252":[624,2,624,25],"10254":[624,2,624,25],"10256":[624,2,624,25],"10259":[624,29,624,35],"10274":[624,2,624,35],"10275":[624,2,624,35],"10278":[624,2,624,35],"10279":[621,1,624,35],"10280":[627,22,627,30],"10282":[627,1,627,39],"10283":[627,14,627,20],"10285":[627,1,627,39],"10286":[627,1,627,39],"10319":[627,32,627,38],"10327":[627,1,627,39],"10329":[627,1,627,39],"10330":[628,8,628,12],"10333":[628,1,628,12],"10334":[628,1,628,12],"10336":[667,0,672,12],"10337":[670,1,670,18],"10340":[670,22,670,28],"10355":[670,1,670,28],"10356":[670,1,670,28],"10357":[670,1,670,18],"10365":[671,32,671,34],"10371":[671,36,671,42],"10380":[671,1,671,43],"10383":[671,1,671,43],"10386":[671,1,671,43],"10387":[671,1,671,43],"10388":[671,1,671,43],"10392":[672,8,672,12],"10395":[672,1,672,12],"10396":[672,1,672,12],"10398":[710,0,717,77],"10399":[714,4,714,7],"10401":[714,4,714,12],"10402":[714,1,717,77],"10405":[714,1,717,77],"10406":[715,9,715,10],"10409":[715,2,715,10],"10410":[715,2,715,10],"10411":[715,2,715,10],"10414":[715,2,715,10],"10415":[710,0,717,77],"10418":[714,1,717,77],"10419":[714,1,717,77],"10420":[717,10,717,16],"10423":[717,19,717,40],"1043":[279,11,279,24],"10444":[717,10,717,40],"10445":[717,10,717,40],"10446":[717,44,717,77],"10449":[717,9,717,77],"10451":[717,9,717,77],"10452":[717,9,717,77],"10454":[717,2,717,77],"10455":[717,2,717,77],"10456":[710,0,717,77],"10458":[683,0,705,12],"10459":[694,32,694,38],"1046":[279,11,279,24],"10466":[694,40,694,43],"10476":[694,17,694,44],"10479":[694,17,694,44],"10482":[694,17,694,44],"10483":[694,17,694,44],"10484":[694,17,694,44],"10487":[694,1,694,44],"10488":[694,1,694,44],"10491":[694,1,694,44],"10492":[695,4,695,8],"10495":[695,4,695,13],"10496":[695,4,695,13],"10497":[695,1,702,30],"105":[229,1,229,50],"10500":[695,1,702,30],"10501":[696,11,696,21],"10503":[696,5,696,21],"10504":[696,5,696,7],"10507":[696,5,696,21],"10508":[696,5,696,21],"10509":[696,2,702,30],"10512":[696,2,702,30],"10513":[698,21,698,25],"10517":[698,27,698,31],"10527":[698,10,698,32],"10530":[698,10,698,32],"10533":[698,10,698,32],"10534":[698,10,698,32],"10535":[698,10,698,32],"10538":[698,3,698,32],"10539":[698,3,698,32],"10540":[698,3,698,32],"10543":[698,3,698,32],"10544":[699,3,699,20],"10547":[699,24,699,28],"10563":[699,3,699,28],"10564":[699,3,699,28],"10565":[699,3,699,20],"10568":[695,1,702,30],"10571":[696,2,702,30],"10572":[696,2,702,30],"10573":[702,21,702,23],"10580":[702,25,702,29],"10590":[702,10,702,30],"10593":[702,10,702,30],"10596":[702,10,702,30],"10597":[702,10,702,30],"10598":[702,10,702,30],"10601":[702,3,702,30],"10602":[702,3,702,30],"10603":[702,3,702,30],"10606":[702,3,702,30],"10607":[695,1,702,30],"10608":[704,30,704,34],"10611":[704,1,704,52],"10612":[704,28,704,29],"10615":[704,1,704,52],"10616":[704,19,704,24],"10619":[704,1,704,52],"1062":[286,39,286,55],"10620":[704,1,704,52],"1064":[286,8,286,26],"10653":[704,36,704,42],"10661":[704,44,704,51],"1067":[286,8,286,35],"10671":[704,1,704,52],"10674":[704,1,704,52],"10675":[705,8,705,12],"10680":[705,1,705,12],"10681":[705,1,705,12],"10683":[763,0,782,39],"10687":[770,24,770,47],"10690":[770,24,770,47],"10693":[770,24,770,47],"10694":[770,24,770,47],"10695":[770,24,770,47],"10698":[770,1,770,47],"10699":[770,1,770,47],"10702":[770,1,770,47],"10703":[771,26,771,41],"10706":[771,26,771,67],"10710":[771,44,771,67],"10713":[771,44,771,67],"10716":[771,44,771,67],"10717":[771,44,771,67],"10718":[771,44,771,67],"10729":[771,26,771,67],"10731":[771,26,771,67],"10732":[771,26,771,67],"10733":[771,26,771,67],"10734":[771,26,771,67],"10735":[771,1,771,67],"10738":[771,1,771,67],"10739":[773,52,773,56],"10744":[773,58,773,68],"10751":[773,70,773,83],"10759":[773,85,773,106],"10766":[773,108,773,129],"10775":[773,28,773,130],"10778":[773,28,773,130],"10781":[773,28,773,130],"10782":[773,28,773,130],"10783":[773,28,773,130],"10786":[773,1,773,130],"10787":[773,1,773,130],"10790":[773,1,773,130],"10791":[775,41,775,54],"10798":[775,56,775,75],"10807":[775,26,775,76],"10810":[775,26,775,76],"10813":[775,26,775,76],"10814":[775,26,775,76],"10815":[775,26,775,76],"10818":[775,1,775,76],"10819":[775,1,775,76],"10822":[775,1,775,76],"10823":[776,5,776,18],"10826":[776,5,776,23],"10827":[776,5,776,23],"10828":[776,5,776,52],"10831":[776,5,776,52],"10832":[776,42,776,52],"10835":[776,28,776,38],"10838":[776,5,776,52],"10841":[776,5,776,52],"10842":[776,5,776,52],"10843":[776,5,776,52],"10845":[776,5,776,52],"10846":[776,1,780,61],"10847":[776,1,780,61],"10850":[776,1,780,61],"10851":[778,38,778,51],"10854":[778,2,778,88],"10855":[778,26,778,36],"10856":[778,20,778,24],"10857":[778,2,778,88],"1087":[286,8,286,35],"10890":[778,53,778,66],"10898":[778,68,778,87],"109":[229,1,229,50],"10906":[778,2,778,88],"10909":[778,2,778,88],"10910":[779,2,779,19],"10913":[779,23,779,36],"10917":[779,39,779,50],"10939":[779,23,779,50],"10940":[779,23,779,50],"10953":[779,2,779,50],"10954":[779,2,779,50],"10955":[779,2,779,19],"10972":[780,35,780,45],"10976":[780,47,780,60],"10983":[776,1,780,61],"10986":[780,2,780,61],"10989":[780,2,780,61],"10990":[776,1,780,61],"10991":[782,8,782,23],"10995":[782,26,782,39],"11011":[782,8,782,39],"11012":[782,8,782,39],"11014":[782,1,782,39],"11015":[782,1,782,39],"11017":[912,0,923,16],"11018":[913,34,913,49],"11019":[913,52,913,68],"11034":[913,34,913,68],"11035":[913,34,913,68],"11036":[913,72,913,102],"11057":[913,33,913,102],"11058":[913,33,913,102],"11061":[913,4,913,102],"11062":[915,7,915,50],"11071":[915,7,915,24],"11073":[915,7,915,50],"11075":[915,4,923,16],"11076":[915,4,923,16],"11079":[915,4,923,16],"11080":[923,15,923,16],"11083":[923,8,923,16],"11084":[923,8,923,16],"11085":[923,8,923,16],"11088":[923,8,923,16],"11089":[912,0,923,16],"11092":[915,4,923,16],"11093":[915,4,923,16],"11094":[916,33,916,51],"11099":[916,8,916,51],"11100":[917,15,917,28],"11102":[917,15,921,13],"11103":[918,16,918,33],"11106":[919,18,919,31],"11127":[918,16,919,31],"11128":[918,16,919,31],"11129":[920,18,920,41],"11138":[918,16,920,41],"11140":[918,16,920,41],"11141":[918,16,920,41],"11143":[917,15,921,13],"11145":[917,15,921,13],"11152":[917,15,921,13],"11153":[917,15,921,13],"11154":[917,15,921,13],"11155":[917,15,921,13],"11157":[917,8,921,13],"11158":[917,8,921,13],"11159":[912,0,923,16],"1116":[286,8,286,35],"11161":[946,0,949,9],"11162":[949,8,949,9],"11165":[949,1,949,9],"11166":[949,1,949,9],"11168":[927,0,932,9],"1117":[286,8,286,35],"11172":[928,20,928,46],"11174":[928,20,928,46],"11177":[928,20,928,46],"11178":[928,20,928,46],"11179":[928,20,928,46],"1118":[286,8,286,55],"11181":[928,1,928,46],"11182":[928,1,928,46],"11184":[928,1,928,46],"11185":[932,8,932,9],"11188":[932,1,932,9],"11189":[932,1,932,9],"1119":[286,8,286,55],"11191":[856,0,886,81],"11195":[857,24,857,47],"11198":[857,24,857,47],"112":[229,1,229,50],"1120":[286,1,286,55],"11201":[857,24,857,47],"11202":[857,24,857,47],"11203":[857,24,857,47],"11206":[857,1,857,47],"11207":[857,1,857,47],"11210":[857,1,857,47],"11211":[859,4,859,10],"11214":[859,1,881,30],"11217":[859,1,881,30],"11221":[878,2,878,24],"11224":[878,2,878,24],"11227":[878,2,878,24],"11228":[878,2,878,24],"11229":[878,2,878,24],"1123":[286,1,286,55],"11232":[859,1,881,30],"11233":[880,2,880,19],"11236":[880,23,880,29],"1124":[288,22,288,40],"11251":[880,2,880,29],"11252":[880,2,880,29],"11253":[880,2,880,19],"11256":[881,2,881,20],"11259":[881,24,881,30],"1127":[288,22,288,52],"11274":[881,2,881,30],"11275":[881,2,881,30],"11276":[881,2,881,20],"11279":[859,1,881,30],"11282":[859,1,881,30],"11283":[859,1,881,30],"11287":[862,39,862,65],"11290":[862,39,862,65],"11293":[862,39,862,65],"11294":[862,39,862,65],"11295":[862,39,862,65],"11298":[862,2,862,65],"11299":[862,2,862,65],"113":[229,1,229,50],"11302":[862,2,862,65],"11303":[865,2,865,19],"11306":[865,23,865,29],"11321":[865,2,865,29],"11322":[865,2,865,29],"11323":[865,2,865,19],"11326":[866,33,866,39],"11329":[866,5,866,30],"11333":[866,5,866,39],"11334":[866,2,869,28],"11337":[866,2,869,28],"11338":[869,27,869,28],"11340":[869,6,869,24],"11343":[866,2,869,28],"11346":[866,2,869,28],"11347":[866,2,869,28],"11348":[867,27,867,52],"11352":[867,55,867,61],"11367":[867,27,867,61],"11368":[867,27,867,61],"11369":[867,6,867,24],"1137":[324,14,324,15],"11372":[866,2,869,28],"11376":[872,2,872,24],"11379":[872,2,872,24],"11382":[872,2,872,24],"11383":[872,2,872,24],"11384":[872,2,872,24],"11387":[859,1,881,30],"11388":[859,1,881,30],"11389":[886,1,886,81],"114":[231,1,231,20],"11422":[886,21,886,32],"11433":[886,34,886,57],"11436":[886,34,886,57],"11439":[886,34,886,57],"11440":[886,34,886,57],"11441":[886,34,886,57],"11452":[886,59,886,80],"11455":[886,59,886,80],"11458":[886,59,886,80],"11459":[886,59,886,80],"11460":[886,59,886,80],"11470":[886,1,886,81],"11473":[886,1,886,81],"11475":[720,0,760,27],"11476":[725,25,725,31],"11483":[725,1,725,31],"11484":[726,1,726,22],"11486":[726,1,726,22],"11487":[726,1,726,22],"11490":[726,1,726,22],"11491":[728,23,728,41],"11494":[728,23,728,55],"11504":[728,52,728,54],"11522":[728,23,728,55],"1154":[288,22,288,52],"11551":[728,23,728,55],"11552":[728,23,728,55],"11553":[728,1,728,55],"11555":[728,2,728,9],"11561":[728,1,728,55],"11564":[728,11,728,19],"11568":[728,1,728,55],"11569":[730,4,730,10],"11572":[730,4,730,15],"11573":[730,1,735,35],"11576":[730,1,735,35],"11577":[732,17,732,25],"11581":[732,2,732,14],"11584":[732,2,732,25],"11585":[730,1,735,35],"11588":[730,1,735,35],"11589":[730,1,735,35],"11590":[733,6,733,12],"11593":[733,6,733,34],"11594":[733,6,733,34],"11595":[730,1,735,35],"11598":[733,1,735,35],"11599":[735,17,735,24],"116":[231,1,231,30],"11603":[735,27,735,35],"11619":[735,17,735,35],"11620":[735,17,735,35],"11621":[735,2,735,14],"11624":[735,2,735,35],"11625":[730,1,735,35],"11626":[739,19,739,27],"11630":[739,4,739,16],"11634":[739,4,739,27],"11635":[739,1,747,32],"11638":[739,1,747,32],"11639":[745,12,745,24],"11643":[745,27,745,35],"11659":[745,12,745,35],"11660":[745,12,745,35],"11661":[745,2,745,9],"11664":[745,2,745,35],"11665":[747,2,747,21],"11668":[747,25,747,32],"11684":[747,2,747,32],"11685":[747,2,747,32],"11686":[747,2,747,21],"11689":[739,1,747,32],"11692":[739,1,747,32],"11693":[739,1,747,32],"11694":[741,13,741,25],"11698":[741,2,741,10],"117":[234,51,234,57],"11701":[741,2,741,25],"11702":[742,12,742,13],"11704":[742,2,742,9],"11707":[742,2,742,13],"11708":[739,1,747,32],"11709":[750,8,750,26],"11712":[750,8,750,53],"11722":[750,36,750,38],"11730":[750,40,750,52],"11750":[750,8,750,53],"11795":[750,8,750,53],"11796":[750,8,750,53],"11797":[750,1,750,53],"11798":[750,1,750,53],"11799":[750,1,750,53],"11802":[750,1,750,53],"11803":[752,4,752,12],"11806":[752,4,752,17],"11807":[752,4,752,17],"11808":[752,1,758,54],"11811":[752,1,758,54],"11812":[754,22,754,30],"11819":[754,32,754,37],"11827":[754,2,754,38],"11830":[754,2,754,38],"11831":[754,2,754,38],"11832":[758,45,758,53],"11839":[758,18,758,54],"11843":[758,18,758,54],"11846":[758,18,758,54],"11849":[758,18,758,54],"11850":[758,18,758,54],"11851":[758,18,758,54],"11854":[758,2,758,54],"11855":[758,2,758,54],"11858":[758,2,758,54],"11859":[752,1,758,54],"11860":[760,9,760,16],"11866":[760,18,760,26],"11875":[760,1,760,27],"11877":[786,0,820,14],"11878":[795,18,795,34],"11881":[795,8,795,14],"11886":[795,1,795,34],"11889":[795,1,795,34],"11890":[796,38,796,53],"11893":[796,8,796,25],"11896":[796,28,796,34],"11912":[796,8,796,34],"11913":[796,8,796,34],"11915":[796,1,796,53],"11918":[796,1,796,53],"11922":[798,24,798,47],"11925":[798,24,798,47],"11928":[798,24,798,47],"11929":[798,24,798,47],"11930":[798,24,798,47],"11933":[798,1,798,47],"11934":[798,1,798,47],"11937":[798,1,798,47],"11938":[799,19,799,25],"11941":[799,19,799,39],"11942":[799,28,799,39],"11953":[799,19,799,39],"11955":[799,19,799,39],"11956":[799,19,799,39],"11957":[799,19,799,39],"11958":[799,19,799,39],"11959":[799,1,799,39],"11962":[799,1,799,39],"11963":[801,4,801,21],"11965":[801,4,801,26],"11966":[801,4,801,26],"11967":[801,1,802,93],"11970":[801,1,802,93],"11971":[802,26,802,34],"11979":[802,36,802,46],"11986":[802,48,802,54],"11994":[802,56,802,73],"12001":[802,75,802,92],"12010":[802,2,802,93],"12013":[802,2,802,93],"12016":[802,2,802,93],"12017":[802,2,802,93],"12018":[802,2,802,93],"12021":[801,1,802,93],"12022":[801,1,802,93],"12023":[804,4,804,12],"12026":[804,4,804,30],"12027":[804,4,804,30],"12028":[804,4,804,58],"12031":[804,4,804,58],"12032":[804,35,804,53],"12034":[804,35,804,58],"12035":[804,35,804,58],"12036":[804,35,804,58],"12037":[804,4,804,58],"12040":[804,4,804,58],"12041":[804,4,804,58],"12042":[804,4,804,58],"12044":[804,4,804,58],"12045":[804,1,805,93],"12046":[804,1,805,93],"12049":[804,1,805,93],"12050":[805,26,805,34],"12058":[805,36,805,44],"12066":[805,46,805,52],"12074":[805,54,805,72],"12081":[805,74,805,92],"12090":[805,2,805,93],"12093":[805,2,805,93],"12096":[805,2,805,93],"12097":[805,2,805,93],"12098":[805,2,805,93],"121":[231,1,231,30],"12101":[804,1,805,93],"12102":[804,1,805,93],"12103":[811,1,811,18],"12106":[811,22,811,28],"12122":[811,1,811,28],"12123":[811,1,811,28],"12124":[811,1,811,18],"12127":[812,12,812,20],"12134":[812,22,812,28],"12144":[812,1,812,29],"12147":[812,1,812,29],"12150":[812,1,812,29],"12151":[812,1,812,29],"12152":[812,1,812,29],"12156":[814,8,814,60],"12157":[814,8,814,60],"12158":[814,8,814,60],"12161":[814,8,814,60],"12163":[814,8,814,60],"12164":[814,8,814,60],"12166":[814,8,814,60],"12176":[814,35,814,45],"12181":[814,47,814,51],"12186":[814,53,814,59],"12206":[814,8,814,60],"12251":[814,8,814,60],"12252":[814,8,814,60],"12253":[814,1,814,60],"12254":[814,1,814,60],"12255":[814,1,814,60],"12258":[814,1,814,60],"12259":[816,21,816,29],"12262":[816,1,816,50],"12263":[816,13,816,19],"12266":[816,1,816,50],"12267":[816,1,816,50],"123":[231,1,231,30],"12300":[816,31,816,41],"12305":[816,43,816,49],"12315":[816,1,816,50],"12318":[816,1,816,50],"12319":[818,1,818,81],"12352":[818,21,818,32],"12363":[818,34,818,57],"12366":[818,34,818,57],"12369":[818,34,818,57],"12370":[818,34,818,57],"12371":[818,34,818,57],"12382":[818,59,818,80],"12385":[818,59,818,80],"12388":[818,59,818,80],"12389":[818,59,818,80],"12390":[818,59,818,80],"12400":[818,1,818,81],"12403":[818,1,818,81],"12404":[820,8,820,14],"12409":[820,1,820,14],"12410":[820,1,820,14],"12412":[675,0,680,12],"12413":[678,1,678,18],"12416":[678,22,678,28],"12431":[678,1,678,28],"12432":[678,1,678,28],"12433":[678,1,678,18],"12436":[679,16,679,21],"12447":[679,39,679,45],"12456":[679,1,679,46],"12459":[679,1,679,46],"12462":[679,1,679,46],"12463":[679,1,679,46],"12464":[679,1,679,46],"12468":[680,8,680,12],"12471":[680,1,680,12],"12472":[680,1,680,12],"12474":[631,0,641,12],"12475":[632,18,632,24],"12478":[632,4,632,14],"12480":[632,1,639,46],"12483":[632,1,639,46],"12484":[633,23,633,38],"12486":[633,39,633,45],"12489":[633,23,633,46],"12491":[633,23,633,46],"12492":[633,23,633,46],"12494":[633,23,633,46],"12495":[633,23,633,46],"12497":[633,23,633,46],"12499":[633,23,633,46],"12501":[633,47,633,57],"12513":[633,23,633,58],"12514":[633,23,633,58],"12518":[633,2,633,58],"12519":[635,18,635,36],"12552":[635,6,635,15],"12554":[635,6,635,36],"12556":[632,1,639,46],"12559":[635,2,639,46],"12560":[636,15,636,24],"12563":[636,27,636,34],"12578":[636,15,636,34],"12579":[636,15,636,34],"12580":[636,3,636,12],"12582":[636,3,636,34],"12583":[637,41,637,50],"12586":[637,3,637,18],"12588":[637,19,637,25],"12591":[637,3,637,26],"12593":[637,3,637,26],"12594":[637,3,637,26],"12596":[637,3,637,26],"12597":[637,3,637,26],"12599":[637,3,637,26],"12601":[637,3,637,26],"12603":[637,27,637,37],"12615":[637,3,637,38],"12616":[637,3,637,38],"12618":[639,24,639,34],"12619":[639,16,639,22],"12621":[639,3,639,46],"12622":[639,3,639,46],"1263":[288,22,288,52],"1264":[288,22,288,52],"1265":[288,1,288,52],"12655":[639,36,639,45],"12663":[639,3,639,46],"12665":[639,3,639,46],"12666":[632,1,639,46],"12667":[641,8,641,12],"12670":[641,1,641,12],"12671":[641,1,641,12],"12673":[953,0,955,47],"12674":[955,8,955,25],"12677":[955,28,955,47],"12692":[955,8,955,47],"12693":[955,8,955,47],"12695":[955,1,955,47],"12696":[955,1,955,47],"12698":[823,0,852,14],"12702":[828,18,828,47],"12705":[828,18,828,47],"12708":[828,18,828,47],"12709":[828,18,828,47],"12710":[828,18,828,47],"12713":[828,8,828,47],"12714":[828,8,828,14],"12717":[828,8,828,47],"12719":[828,1,828,47],"12722":[828,1,828,47],"12723":[829,34,829,39],"1273":[288,1,288,52],"12730":[829,41,829,47],"12740":[829,8,829,48],"12743":[829,8,829,48],"12746":[829,8,829,48],"12747":[829,8,829,48],"12748":[829,8,829,48],"12751":[829,1,829,48],"12752":[829,1,829,48],"12753":[829,1,829,48],"12756":[829,1,829,48],"12760":[831,24,831,47],"12763":[831,24,831,47],"12766":[831,24,831,47],"12767":[831,24,831,47],"12768":[831,24,831,47],"12771":[831,1,831,47],"12772":[831,1,831,47],"12775":[831,1,831,47],"12776":[832,19,832,25],"12779":[832,19,832,39],"12780":[832,28,832,39],"12791":[832,19,832,39],"12793":[832,19,832,39],"12794":[832,19,832,39],"12795":[832,19,832,39],"12796":[832,19,832,39],"12797":[832,1,832,39],"12800":[832,1,832,39],"12801":[838,40,838,46],"12808":[838,48,838,66],"12817":[838,25,838,67],"1282":[288,1,288,52],"12820":[838,25,838,67],"12823":[838,25,838,67],"12824":[838,25,838,67],"12825":[838,25,838,67],"12828":[838,1,838,67],"12829":[838,1,838,67],"12832":[838,1,838,67],"12833":[839,4,839,22],"12835":[839,4,839,27],"12836":[839,4,839,27],"12837":[839,1,840,84],"12840":[839,1,840,84],"12841":[840,42,840,54],"12844":[840,2,840,84],"12845":[840,30,840,40],"12847":[840,2,840,84],"12848":[840,20,840,28],"12851":[840,2,840,84],"12852":[840,2,840,84],"12885":[840,56,840,62],"12893":[840,65,840,83],"12901":[840,2,840,84],"12904":[840,2,840,84],"12905":[839,1,840,84],"12906":[843,1,843,18],"12909":[843,22,843,28],"1291":[288,1,288,52],"12925":[843,1,843,28],"12926":[843,1,843,28],"12927":[843,1,843,18],"12930":[844,12,844,20],"12937":[844,22,844,28],"12941":[844,31,844,43],"12957":[844,22,844,43],"12958":[844,22,844,43],"12965":[844,1,844,44],"12968":[844,1,844,44],"12971":[844,1,844,44],"12972":[844,1,844,44],"12973":[844,1,844,44],"12991":[847,34,847,42],"12998":[847,44,847,50],"130":[231,1,231,30],"1300":[288,1,288,52],"13008":[847,1,847,51],"13011":[847,1,847,51],"13012":[847,1,847,51],"13013":[849,29,849,37],"13016":[849,1,849,58],"13017":[849,22,849,27],"13020":[849,1,849,58],"13021":[849,14,849,20],"13024":[849,1,849,58],"13025":[849,1,849,58],"13058":[849,39,849,49],"13063":[849,51,849,57],"13073":[849,1,849,58],"13076":[849,1,849,58],"13077":[850,1,850,69],"1309":[288,1,288,52],"131":[231,1,231,30],"13110":[850,21,850,32],"13118":[850,34,850,45],"13129":[850,47,850,68],"13132":[850,47,850,68],"13135":[850,47,850,68],"13136":[850,47,850,68],"13137":[850,47,850,68],"13147":[850,1,850,69],"13150":[850,1,850,69],"13151":[852,8,852,14],"13156":[852,1,852,14],"13157":[852,1,852,14],"13162":[892,31,892,57],"13164":[892,31,892,57],"13167":[892,31,892,57],"13168":[892,31,892,57],"13169":[892,31,892,57],"13173":[892,11,892,57],"13175":[892,11,892,57],"1318":[288,1,288,52],"13182":[892,11,892,57],"13183":[892,11,892,57],"13184":[892,11,892,57],"13185":[892,11,892,57],"13187":[892,4,892,57],"13188":[892,4,892,57],"13193":[898,32,898,58],"13195":[898,32,898,58],"13198":[898,32,898,58],"13199":[898,32,898,58],"132":[231,1,231,30],"13200":[898,32,898,58],"13204":[898,12,898,58],"13206":[898,12,898,58],"13213":[898,12,898,58],"13214":[898,12,898,58],"13215":[898,12,898,58],"13216":[898,12,898,58],"13220":[898,62,898,85],"13222":[898,62,898,85],"13225":[898,62,898,85],"13226":[898,62,898,85],"13227":[898,62,898,85],"13237":[898,11,898,85],"13239":[898,11,898,85],"13240":[898,11,898,85],"13241":[898,11,898,85],"13242":[898,11,898,85],"13244":[898,4,898,85],"13245":[898,4,898,85],"13247":[980,1,983,11],"1325":[288,1,288,52],"13250":[980,1,983,11],"13251":[983,9,983,11],"13254":[983,2,983,11],"13255":[983,2,983,11],"13256":[983,2,983,11],"13259":[983,2,983,11],"1326":[290,24,290,40],"13260":[965,0,983,11],"13263":[980,1,983,11],"13264":[980,1,983,11],"13268":[981,17,981,31],"13277":[981,9,981,39],"13278":[981,9,981,39],"13287":[981,2,981,39],"13288":[981,2,981,39],"13289":[965,0,983,11],"1329":[290,24,290,61],"13291":[1033,0,1037,85],"13292":[1034,4,1034,19],"13294":[1034,4,1034,24],"13295":[1034,1,1037,85],"13298":[1034,1,1037,85],"13299":[1035,9,1035,10],"133":[231,1,231,30],"1330":[290,43,290,61],"13302":[1035,2,1035,10],"13303":[1035,2,1035,10],"13304":[1035,2,1035,10],"13307":[1035,2,1035,10],"13308":[1033,0,1037,85],"13311":[1034,1,1037,85],"13312":[1034,1,1037,85],"13313":[1037,28,1037,35],"13315":[1037,24,1037,67],"13319":[1037,37,1037,66],"13321":[1037,37,1037,66],"13324":[1037,37,1037,66],"13325":[1037,37,1037,66],"13326":[1037,37,1037,66],"13330":[1037,24,1037,67],"13334":[1037,24,1037,67],"13338":[1037,24,1037,67],"13339":[1037,24,1037,67],"13340":[1037,24,1037,67],"13341":[1037,24,1037,67],"13346":[1037,69,1037,84],"1335":[290,24,290,61],"1337":[290,24,290,61],"13370":[1037,9,1037,85],"13372":[1037,9,1037,85],"13375":[1037,9,1037,85],"13376":[1037,9,1037,85],"13377":[1037,9,1037,85],"13381":[1037,2,1037,85],"13382":[1037,2,1037,85],"13383":[1033,0,1037,85],"134":[231,1,231,20],"1344":[290,24,290,61],"1345":[290,24,290,61],"1346":[290,24,290,61],"1347":[290,24,290,61],"1348":[290,1,290,61],"1351":[290,1,290,61],"1352":[292,1,292,19],"1355":[292,1,292,71],"136":[231,1,231,30],"1365":[324,14,324,15],"1372":[292,33,292,44],"1375":[292,33,292,70],"1376":[292,47,292,70],"1381":[292,33,292,70],"1383":[292,33,292,70],"139":[234,8,234,26],"1390":[292,33,292,70],"1391":[292,33,292,70],"1392":[292,33,292,70],"1393":[292,33,292,70],"141":[234,8,234,71],"1410":[292,1,292,71],"1455":[292,1,292,71],"1460":[295,19,295,40],"1463":[295,19,295,40],"1466":[295,19,295,40],"1467":[295,19,295,40],"1468":[295,19,295,40],"1471":[295,1,295,40],"1472":[295,1,295,40],"1475":[295,1,295,40],"1479":[296,24,296,47],"1482":[296,24,296,47],"1485":[296,24,296,47],"1486":[296,24,296,47],"1487":[296,24,296,47],"1490":[296,1,296,47],"1491":[296,1,296,47],"1494":[296,1,296,47],"1495":[297,24,297,25],"150":[234,37,234,42],"1500":[297,1,297,25],"1501":[301,25,301,43],"1504":[301,4,301,43],"1505":[301,4,301,21],"1507":[301,4,301,43],"1509":[301,1,313,23],"1510":[301,1,313,23],"1513":[301,1,313,23],"1514":[310,16,310,33],"1517":[310,2,310,13],"1520":[310,2,310,33],"1521":[311,2,311,19],"1524":[311,23,311,34],"1540":[311,2,311,34],"1541":[311,2,311,34],"1542":[311,2,311,19],"1545":[312,22,312,40],"1548":[312,22,312,70],"1549":[312,44,312,55],"1553":[312,58,312,69],"156":[234,44,234,49],"1575":[312,44,312,69],"1576":[312,44,312,69],"1578":[312,22,312,70],"1580":[312,22,312,70],"1587":[312,22,312,70],"1588":[312,22,312,70],"1589":[312,22,312,70],"1590":[312,22,312,70],"1594":[312,72,312,76],"1602":[312,2,312,77],"1605":[312,2,312,77],"1606":[312,2,312,77],"1607":[313,22,313,23],"1609":[313,2,313,19],"1612":[301,1,313,23],"1615":[301,1,313,23],"1616":[301,1,313,23],"1617":[302,16,302,34],"1620":[302,16,302,48],"1621":[302,37,302,48],"163":[234,51,234,57],"1632":[302,16,302,48],"1634":[302,16,302,48],"1635":[302,16,302,48],"1636":[302,16,302,48],"1637":[302,16,302,48],"1638":[302,2,302,13],"1641":[302,2,302,48],"1642":[305,2,305,19],"1645":[305,23,305,34],"1661":[305,2,305,34],"1662":[305,2,305,34],"1663":[305,2,305,19],"1666":[306,2,306,19],"1669":[306,23,306,34],"1685":[306,2,306,34],"1686":[306,2,306,34],"1687":[306,2,306,19],"1690":[301,1,313,23],"1691":[317,4,317,27],"1694":[317,4,317,32],"1695":[317,4,317,32],"1696":[317,1,318,46],"1699":[317,1,318,46],"1700":[318,22,318,45],"1707":[856,51,856,56],"1712":[317,1,318,46],"1715":[318,2,318,46],"1718":[318,2,318,46],"1719":[317,1,318,46],"1720":[321,4,321,15],"1723":[321,4,321,20],"1724":[321,4,321,20],"1725":[321,4,321,49],"1728":[321,4,321,49],"1729":[321,39,321,49],"1732":[321,25,321,35],"1735":[321,4,321,49],"1738":[321,4,321,49],"1739":[321,4,321,49],"1740":[321,4,321,49],"1742":[321,4,321,49],"1743":[321,1,322,86],"1744":[321,1,322,86],"1747":[321,1,322,86],"1748":[322,26,322,30],"1753":[322,32,322,42],"1758":[322,44,322,55],"1766":[322,57,322,67],"1773":[322,69,322,85],"1782":[322,2,322,86],"1785":[322,2,322,86],"1788":[322,2,322,86],"1789":[322,2,322,86],"1790":[322,2,322,86],"1793":[321,1,322,86],"1794":[321,1,322,86],"1795":[324,29,324,47],"1798":[324,1,324,106],"1799":[324,16,324,27],"1802":[324,1,324,106],"1803":[324,14,324,15],"1805":[324,1,324,106],"1806":[324,1,324,106],"1839":[324,49,324,56],"185":[234,66,234,70],"1850":[324,58,324,79],"1853":[324,58,324,79],"1856":[324,58,324,79],"1857":[324,58,324,79],"1858":[324,58,324,79],"1866":[324,81,324,92],"1874":[324,94,324,105],"1884":[324,1,324,106],"1887":[324,1,324,106],"1888":[326,9,326,20],"1896":[326,22,326,40],"1946":[332,16,332,30],"1948":[332,16,332,30],"1964":[341,23,341,29],"1969":[333,1,333,50],"1973":[333,1,333,50],"1976":[333,1,333,50],"1977":[333,1,333,50],"1978":[335,1,335,20],"1980":[335,1,335,30],"1981":[341,23,341,29],"1985":[335,1,335,30],"1987":[335,1,335,30],"1994":[335,1,335,30],"1995":[335,1,335,30],"1996":[335,1,335,30],"1997":[335,1,335,30],"1998":[335,1,335,20],"200":[234,8,234,71],"2000":[335,1,335,30],"2001":[339,19,339,34],"2003":[339,19,339,56],"2012":[341,23,341,29],"2018":[339,51,339,55],"2032":[339,19,339,56],"2060":[339,19,339,56],"2061":[339,19,339,56],"2062":[339,1,339,56],"2063":[339,1,339,56],"2065":[339,1,339,56],"2066":[341,31,341,37],"2068":[341,1,341,38],"2069":[341,23,341,29],"2071":[341,1,341,38],"2072":[341,16,341,21],"2074":[341,1,341,38],"2075":[341,1,341,38],"2108":[341,1,341,38],"2110":[341,1,341,38],"2112":[341,1,341,38],"2115":[342,8,342,14],"2154":[347,16,347,30],"2156":[347,16,347,30],"2172":[348,22,348,32],"2174":[348,8,348,32],"2175":[348,8,348,18],"2176":[348,8,348,32],"2177":[348,1,348,32],"2180":[348,1,348,32],"2181":[349,1,349,20],"2183":[349,1,349,30],"2184":[356,23,356,29],"2188":[349,1,349,30],"2190":[349,1,349,30],"2197":[349,1,349,30],"2198":[349,1,349,30],"2199":[349,1,349,30],"2200":[349,1,349,30],"2201":[349,1,349,20],"2203":[349,1,349,30],"2204":[352,1,352,16],"2206":[352,1,352,45],"2215":[356,23,356,29],"2221":[352,34,352,38],"2225":[352,40,352,44],"2239":[352,1,352,45],"2267":[352,1,352,45],"2269":[356,33,356,33],"2271":[356,23,356,29],"2273":[356,1,356,33],"2274":[356,16,356,21],"2276":[356,1,356,33],"2277":[356,1,356,33],"228":[234,8,234,71],"229":[234,8,234,71],"2310":[356,1,356,33],"2312":[356,1,356,33],"2314":[356,1,356,33],"2315":[361,8,361,12],"2338":[365,0,390,55],"2341":[365,0,390,55],"2350":[365,44,365,62],"2383":[365,26,365,41],"2386":[365,26,365,41],"2391":[365,0,390,55],"2399":[365,0,390,55],"2402":[365,0,390,55],"2413":[365,26,365,41],"2414":[365,26,365,41],"2417":[365,26,365,41],"2430":[365,10,365,24],"2433":[365,10,365,24],"2434":[378,25,378,35],"2436":[378,11,378,35],"2437":[378,11,378,21],"2438":[378,11,378,35],"2439":[378,4,378,35],"2442":[378,4,378,35],"2443":[380,21,380,27],"2450":[380,4,380,27],"2451":[381,7,381,12],"2454":[381,7,381,34],"2455":[381,7,381,34],"2456":[381,4,382,45],"2459":[381,4,382,45],"2460":[382,16,382,29],"2463":[382,16,382,45],"2473":[382,40,382,44],"2488":[382,16,382,45],"2517":[382,16,382,45],"2518":[382,16,382,45],"2519":[382,8,382,45],"2520":[382,8,382,13],"2523":[382,8,382,45],"2524":[381,4,382,45],"2525":[384,7,384,21],"2526":[384,7,384,21],"2527":[384,7,384,21],"2530":[384,7,384,21],"2532":[384,7,384,21],"2533":[384,7,384,21],"2535":[384,7,384,21],"2536":[384,7,384,12],"2539":[384,7,384,21],"2540":[384,7,384,21],"2541":[384,4,387,65],"2544":[384,4,387,65],"2545":[387,16,387,45],"2546":[387,16,387,45],"2547":[387,16,387,45],"2550":[387,16,387,45],"2552":[387,16,387,45],"2553":[387,16,387,45],"2555":[387,16,387,45],"2565":[387,40,387,44],"2580":[387,16,387,45],"2609":[387,16,387,45],"2610":[387,16,387,45],"2611":[387,16,387,65],"2612":[387,48,387,65],"2616":[387,16,387,65],"2618":[387,16,387,65],"2625":[387,16,387,65],"2626":[387,16,387,65],"2627":[387,16,387,65],"2628":[387,16,387,65],"2629":[387,8,387,13],"2632":[387,8,387,65],"2633":[384,4,387,65],"2634":[389,21,389,26],"2637":[389,4,389,27],"2638":[389,14,389,19],"2641":[389,4,389,27],"2642":[389,4,389,27],"267":[238,20,238,33],"2675":[389,4,389,27],"2677":[389,4,389,27],"2680":[389,4,389,27],"2681":[390,30,390,35],"2688":[390,37,390,47],"269":[238,20,238,33],"2694":[390,49,390,54],"2704":[390,4,390,55],"2707":[390,4,390,55],"2710":[365,0,390,55],"2741":[396,17,396,35],"2743":[396,17,396,35],"2744":[397,22,397,32],"2746":[397,8,397,32],"2747":[397,8,397,18],"2748":[397,8,397,32],"2749":[397,1,397,32],"2752":[397,1,397,32],"2753":[398,22,398,31],"2756":[398,1,398,19],"2759":[399,21,399,30],"2761":[399,1,399,31],"2762":[399,1,399,31],"2795":[399,1,399,31],"2797":[399,1,399,31],"2799":[399,1,399,31],"2800":[400,8,400,12],"2830":[404,22,404,40],"2832":[404,8,404,40],"2833":[404,8,404,18],"2834":[404,8,404,40],"2835":[404,1,404,40],"2838":[404,1,404,40],"2839":[405,14,405,32],"2842":[405,1,405,11],"2845":[406,17,406,35],"2847":[406,1,406,36],"2848":[406,1,406,36],"285":[244,46,244,52],"2881":[406,1,406,36],"2883":[406,1,406,36],"2885":[406,1,406,36],"2886":[407,8,407,12],"290":[239,1,239,50],"2916":[411,22,411,32],"2918":[411,8,411,32],"2919":[411,8,411,18],"2920":[411,8,411,32],"2921":[411,1,411,32],"2924":[411,1,411,32],"2925":[413,22,413,29],"2928":[412,1,412,17],"2930":[412,1,412,27],"2931":[413,22,413,29],"2933":[413,1,413,30],"2934":[413,1,413,30],"294":[239,1,239,50],"2967":[413,1,413,30],"2969":[413,1,413,30],"297":[239,1,239,50],"2971":[413,1,413,30],"2972":[414,8,414,12],"298":[239,1,239,50],"299":[241,1,241,20],"3002":[418,22,418,32],"3004":[418,8,418,32],"3005":[418,8,418,18],"3006":[418,8,418,32],"3007":[418,1,418,32],"301":[241,1,241,30],"3010":[418,1,418,32],"3011":[420,21,420,28],"3014":[419,1,419,16],"3016":[419,1,419,26],"3017":[420,21,420,28],"3019":[420,1,420,29],"302":[244,46,244,52],"3020":[420,1,420,29],"3053":[420,1,420,29],"3055":[420,1,420,29],"3057":[420,1,420,29],"3058":[421,8,421,12],"306":[241,1,241,30],"308":[241,1,241,30],"3099":[435,27,435,38],"3101":[435,27,435,38],"3117":[436,26,436,29],"3120":[436,2,436,23],"3122":[436,2,436,29],"3125":[437,30,437,33],"3131":[437,35,437,56],"3139":[437,9,437,57],"3141":[437,9,437,57],"3144":[437,9,437,57],"3145":[437,9,437,57],"3146":[437,9,437,57],"315":[241,1,241,30],"316":[241,1,241,30],"317":[241,1,241,30],"318":[241,1,241,30],"3185":[448,21,448,32],"3187":[448,21,448,32],"319":[241,1,241,20],"3203":[449,19,449,22],"3206":[449,1,449,16],"3208":[449,1,449,22],"321":[241,1,241,30],"3211":[450,34,450,37],"3217":[450,39,450,54],"3225":[450,8,450,55],"3227":[450,8,450,55],"3230":[450,8,450,55],"3231":[450,8,450,55],"3232":[450,8,450,55],"324":[244,8,244,26],"326":[244,8,244,53],"3271":[454,25,454,36],"3273":[454,25,454,36],"3289":[455,23,455,26],"3292":[455,1,455,20],"3294":[455,1,455,26],"3297":[456,34,456,37],"3303":[456,39,456,58],"3311":[456,8,456,59],"3313":[456,8,456,59],"3316":[456,8,456,59],"3317":[456,8,456,59],"3318":[456,8,456,59],"3357":[460,23,460,34],"3359":[460,23,460,34],"3375":[461,23,461,26],"3378":[461,1,461,20],"3380":[461,1,461,26],"3383":[462,34,462,37],"3389":[462,39,462,56],"3397":[462,8,462,57],"3399":[462,8,462,57],"3402":[462,8,462,57],"3403":[462,8,462,57],"3404":[462,8,462,57],"3443":[466,24,466,35],"3445":[466,24,466,35],"3461":[467,23,467,26],"3464":[467,1,467,20],"3466":[467,1,467,26],"3469":[468,34,468,37],"3475":[468,39,468,57],"3483":[468,8,468,58],"3485":[468,8,468,58],"3488":[468,8,468,58],"3489":[468,8,468,58],"3490":[468,8,468,58],"352":[244,8,244,53],"3529":[471,25,471,47],"3531":[471,25,471,47],"3532":[472,23,472,41],"3534":[472,9,472,41],"3535":[472,9,472,19],"3536":[472,9,472,41],"3537":[472,2,472,41],"3540":[472,2,472,41],"3541":[473,31,473,44],"3544":[473,2,473,28],"3547":[474,2,474,43],"3580":[474,29,474,42],"3588":[474,2,474,43],"3590":[474,2,474,43],"3591":[475,9,475,13],"3632":[478,25,478,46],"3634":[478,25,478,46],"3635":[479,23,479,49],"3637":[479,9,479,49],"3638":[479,9,479,19],"3639":[479,9,479,49],"3640":[479,2,479,49],"3643":[479,2,479,49],"3644":[480,23,480,33],"3645":[480,2,480,20],"3648":[481,2,481,36],"3681":[481,25,481,35],"3687":[481,2,481,36],"3689":[481,2,481,36],"3690":[482,9,482,13],"3735":[487,22,487,40],"3737":[487,8,487,40],"3738":[487,8,487,18],"3739":[487,8,487,40],"3740":[487,1,487,40],"3743":[487,1,487,40],"3747":[489,15,489,36],"3749":[489,15,489,36],"3752":[489,15,489,36],"3753":[489,15,489,36],"3754":[489,15,489,36],"3756":[489,1,489,36],"3757":[489,1,489,36],"3759":[489,1,489,36],"3760":[490,8,490,15],"3762":[490,8,490,11],"3764":[490,8,490,15],"3766":[490,1,490,15],"3769":[490,1,490,15],"3770":[494,4,494,10],"3772":[493,1,493,26],"3773":[493,1,493,26],"3775":[493,1,493,26],"3776":[494,4,494,10],"3778":[494,4,494,32],"3779":[494,4,494,32],"3780":[494,1,495,29],"3783":[494,1,495,29],"3784":[495,12,495,29],"3787":[495,2,495,9],"3789":[495,2,495,29],"3790":[494,1,495,29],"3791":[498,1,498,18],"3794":[498,22,498,29],"3809":[498,1,498,29],"3810":[498,1,498,29],"3811":[498,1,498,18],"3814":[499,16,499,20],"3818":[499,22,499,32],"3822":[499,34,499,41],"3831":[499,1,499,42],"3834":[499,1,499,42],"3837":[499,1,499,42],"3838":[499,1,499,42],"3839":[499,1,499,42],"3843":[501,41,501,48],"3845":[501,1,501,49],"3846":[501,21,501,39],"3848":[501,1,501,49],"3849":[501,1,501,49],"3882":[501,1,501,49],"3884":[501,1,501,49],"3887":[501,1,501,49],"3891":[502,18,502,41],"3894":[502,18,502,41],"3897":[502,18,502,41],"3898":[502,18,502,41],"3899":[502,18,502,41],"3902":[502,1,502,41],"3903":[502,1,502,41],"3906":[502,1,502,41],"3907":[503,1,503,39],"394":[244,8,244,53],"3940":[503,21,503,26],"3948":[503,28,503,33],"395":[244,8,244,53],"3956":[503,35,503,38],"3965":[503,1,503,39],"3968":[503,1,503,39],"3969":[505,8,505,12],"4021":[515,25,515,35],"4023":[515,11,515,35],"4024":[515,11,515,21],"4025":[515,11,515,35],"4026":[515,4,515,35],"4029":[515,4,515,35],"4030":[517,26,517,49],"4039":[519,32,519,43],"4041":[517,11,517,49],"4043":[517,4,517,49],"4046":[517,4,517,49],"4047":[519,32,519,43],"4050":[518,4,518,34],"4052":[518,4,518,48],"4053":[519,32,519,43],"4055":[519,4,519,44],"4056":[519,4,519,44],"4089":[519,4,519,44],"4091":[519,4,519,44],"4093":[519,4,519,44],"4140":[527,8,527,30],"4142":[527,8,527,30],"4145":[527,8,527,30],"4146":[527,8,527,30],"4147":[527,8,527,30],"4186":[531,29,531,46],"4189":[531,29,531,46],"4207":[535,22,535,28],"4214":[535,30,535,38],"4231":[535,8,535,39],"4234":[535,8,535,39],"4237":[535,8,535,39],"4238":[535,8,535,39],"4239":[535,8,535,39],"4279":[539,41,539,58],"4282":[539,41,539,58],"4294":[539,60,539,77],"4297":[539,60,539,77],"4315":[543,22,543,28],"4322":[543,30,543,38],"433":[247,14,247,27],"4330":[543,40,543,48],"4341":[543,8,543,49],"4344":[543,8,543,49],"4347":[543,8,543,49],"4348":[543,8,543,49],"4349":[543,8,543,49],"435":[247,14,247,27],"4389":[547,26,547,43],"4392":[547,26,547,43],"4411":[551,24,551,47],"4414":[551,24,551,47],"4417":[551,24,551,47],"4418":[551,24,551,47],"4419":[551,24,551,47],"4422":[551,1,551,47],"4423":[551,1,551,47],"4426":[551,1,551,47],"4427":[552,22,552,28],"4429":[552,22,552,42],"4430":[552,31,552,42],"4435":[552,22,552,42],"4439":[552,22,552,42],"4450":[552,22,552,42],"4451":[552,22,552,42],"4452":[552,22,552,42],"4453":[552,22,552,42],"4458":[552,44,552,52],"447":[247,42,247,56],"4475":[552,8,552,53],"4478":[552,8,552,53],"4481":[552,8,552,53],"4482":[552,8,552,53],"4483":[552,8,552,53],"4486":[552,8,552,67],"4487":[552,56,552,67],"449":[247,42,247,56],"4492":[552,8,552,67],"4496":[552,8,552,67],"4507":[552,8,552,67],"4508":[552,8,552,67],"4509":[552,8,552,67],"4510":[552,8,552,67],"4557":[556,38,556,55],"4560":[556,38,556,55],"4572":[556,57,556,74],"4575":[556,57,556,74],"4594":[560,24,560,47],"4597":[560,24,560,47],"4600":[560,24,560,47],"4601":[560,24,560,47],"4602":[560,24,560,47],"4605":[560,1,560,47],"4606":[560,1,560,47],"4609":[560,1,560,47],"461":[247,58,247,72],"4610":[561,22,561,28],"4612":[561,22,561,42],"4613":[561,31,561,42],"4618":[561,22,561,42],"4622":[561,22,561,42],"463":[247,58,247,72],"4633":[561,22,561,42],"4634":[561,22,561,42],"4635":[561,22,561,42],"4636":[561,22,561,42],"464":[248,22,248,32],"4641":[561,44,561,52],"4649":[561,54,561,62],"466":[248,8,248,32],"4660":[561,8,561,63],"4663":[561,8,561,63],"4666":[561,8,561,63],"4667":[561,8,561,63],"4668":[561,8,561,63],"467":[248,8,248,18],"4671":[561,8,561,77],"4672":[561,66,561,77],"4677":[561,8,561,77],"468":[248,8,248,32],"4681":[561,8,561,77],"469":[248,1,248,32],"4692":[561,8,561,77],"4693":[561,8,561,77],"4694":[561,8,561,77],"4695":[561,8,561,77],"472":[248,1,248,32],"4742":[567,1,567,18],"4745":[567,1,567,18],"475":[250,8,250,26],"4757":[568,1,568,15],"4760":[568,1,568,15],"477":[250,8,250,53],"4778":[573,23,573,29],"4785":[573,31,573,36],"4793":[573,38,573,46],"4804":[573,8,573,47],"4807":[573,8,573,47],"4810":[573,8,573,47],"4811":[573,8,573,47],"4812":[573,8,573,47],"4852":[577,28,577,45],"4855":[577,28,577,45],"486":[250,36,250,38],"4867":[577,47,577,61],"4870":[577,47,577,61],"4889":[581,24,581,47],"4892":[581,24,581,47],"4895":[581,24,581,47],"4896":[581,24,581,47],"4897":[581,24,581,47],"4900":[581,1,581,47],"4901":[581,1,581,47],"4904":[581,1,581,47],"4905":[582,23,582,29],"4907":[582,23,582,43],"4908":[582,32,582,43],"4913":[582,23,582,43],"4917":[582,23,582,43],"492":[250,40,250,45],"4928":[582,23,582,43],"4929":[582,23,582,43],"4930":[582,23,582,43],"4931":[582,23,582,43],"4936":[582,45,582,50],"4944":[582,52,582,60],"4955":[582,8,582,61],"4958":[582,8,582,61],"4961":[582,8,582,61],"4962":[582,8,582,61],"4963":[582,8,582,61],"4966":[582,8,582,75],"4967":[582,64,582,75],"4972":[582,8,582,75],"4976":[582,8,582,75],"498":[250,47,250,52],"4987":[582,8,582,75],"4988":[582,8,582,75],"4989":[582,8,582,75],"4990":[582,8,582,75],"5037":[588,13,588,24],"5039":[588,13,588,24],"5057":[589,24,589,34],"5061":[589,36,589,38],"5067":[589,40,589,46],"5076":[589,9,589,47],"5078":[589,9,589,47],"5081":[589,9,589,47],"5082":[589,9,589,47],"5083":[589,9,589,47],"5122":[593,17,593,32],"5124":[593,17,593,32],"5136":[593,34,593,51],"5138":[593,34,593,51],"515":[250,8,250,53],"5154":[594,34,594,40],"5160":[595,41,595,47],"5169":[594,8,594,49],"5172":[594,8,594,49],"5175":[594,8,594,49],"5176":[594,8,594,49],"5177":[594,8,594,49],"5180":[594,1,594,49],"5181":[594,1,594,49],"5182":[594,1,594,49],"5185":[594,1,594,49],"5188":[595,23,595,29],"5194":[595,31,595,39],"5200":[595,41,595,47],"5209":[595,8,595,48],"5212":[595,8,595,48],"5215":[595,8,595,48],"5216":[595,8,595,48],"5217":[595,8,595,48],"5257":[599,12,599,28],"5259":[599,12,599,28],"5260":[601,35,601,41],"5263":[600,1,600,16],"5265":[600,17,600,27],"5266":[600,1,600,28],"5268":[600,1,600,28],"5269":[600,1,600,28],"5271":[600,1,600,28],"5272":[600,1,600,28],"5274":[600,1,600,28],"5276":[600,1,600,28],"5278":[600,29,600,36],"5292":[600,1,600,37],"5293":[600,1,600,37],"5294":[600,1,600,46],"5295":[601,26,601,33],"5297":[601,1,601,42],"5298":[601,14,601,24],"5299":[601,1,601,42],"5332":[601,35,601,41],"5340":[601,1,601,42],"5342":[601,1,601,42],"5343":[602,8,602,12],"5384":[605,22,605,38],"5386":[605,22,605,38],"5387":[606,24,606,39],"5389":[606,40,606,50],"5390":[606,24,606,51],"5392":[606,24,606,51],"5393":[606,24,606,51],"5395":[606,24,606,51],"5396":[606,24,606,51],"5398":[606,24,606,51],"54":[228,15,228,28],"5400":[606,24,606,51],"5402":[606,52,606,59],"5416":[606,24,606,60],"5417":[606,24,606,60],"5418":[606,24,606,69],"5419":[606,63,606,69],"5423":[606,24,606,69],"5425":[606,24,606,69],"5432":[606,24,606,69],"5433":[606,24,606,69],"5434":[606,24,606,69],"5435":[606,24,606,69],"5436":[606,1,606,69],"5438":[606,1,606,69],"5439":[607,40,607,51],"5442":[607,1,607,16],"5444":[607,17,607,27],"5445":[607,1,607,28],"5447":[607,1,607,28],"5448":[607,1,607,28],"5450":[607,1,607,28],"5451":[607,1,607,28],"5453":[607,1,607,28],"5455":[607,1,607,28],"5457":[607,29,607,36],"5471":[607,1,607,37],"5472":[607,1,607,37],"5474":[608,26,608,33],"5476":[608,1,608,47],"5477":[608,14,608,24],"5478":[608,1,608,47],"5511":[608,35,608,46],"5519":[608,1,608,47],"5521":[608,1,608,47],"5522":[609,8,609,12],"5563":[1025,17,1025,32],"5565":[1025,17,1025,32],"5577":[1026,4,1026,10],"5581":[1026,1,1029,38],"5584":[1026,1,1029,38],"5585":[1027,9,1027,10],"559":[250,8,250,53],"56":[228,15,228,28],"560":[250,8,250,53],"5601":[1026,1,1029,38],"5602":[1026,1,1029,38],"5608":[1029,9,1029,38],"5610":[1029,9,1029,38],"5613":[1029,9,1029,38],"5614":[1029,9,1029,38],"5615":[1029,9,1029,38],"5650":[1041,13,1041,28],"5653":[1041,13,1041,28],"5654":[1042,8,1042,23],"5655":[1042,8,1042,23],"5656":[1042,8,1042,23],"5659":[1042,8,1042,23],"5661":[1042,8,1042,23],"5662":[1042,8,1042,23],"5664":[1042,8,1042,23],"5665":[1042,8,1042,14],"5668":[1042,8,1042,23],"5669":[1042,8,1042,23],"5670":[1042,1,1042,23],"5673":[1042,1,1042,23],"5676":[1043,26,1043,32],"5683":[1043,34,1043,41],"5692":[1043,8,1043,42],"5695":[1043,8,1043,42],"5698":[1043,8,1043,42],"5699":[1043,8,1043,42],"5700":[1043,8,1043,42],"5735":[1048,1,1048,18],"5738":[1048,1,1048,18],"5750":[1049,1,1049,16],"5753":[1049,1,1049,16],"5759":[1051,1,1051,19],"5763":[1051,1,1051,19],"5770":[1051,1,1051,19],"5779":[1051,1,1051,19],"5789":[1051,1,1051,19],"5808":[1053,18,1053,47],"5811":[1053,18,1053,47],"5814":[1053,18,1053,47],"5815":[1053,18,1053,47],"5816":[1053,18,1053,47],"5819":[1053,8,1053,47],"5820":[1069,42,1069,48],"5822":[1053,8,1053,47],"5824":[1053,1,1053,47],"5827":[1053,1,1053,47],"5842":[1056,34,1056,44],"5846":[1069,42,1069,48],"5855":[1056,1,1056,53],"5858":[1056,1,1056,53],"5859":[1056,1,1056,53],"5860":[1058,34,1058,40],"5867":[1069,42,1069,48],"5876":[1058,16,1058,49],"5879":[1058,16,1058,49],"5882":[1058,16,1058,49],"5883":[1058,16,1058,49],"5884":[1058,16,1058,49],"5887":[1058,1,1058,49],"5888":[1058,1,1058,49],"5891":[1058,1,1058,49],"5892":[1062,94,1062,139],"5925":[1062,8,1062,39],"5928":[1062,8,1062,90],"593":[254,21,254,34],"5940":[1062,52,1062,62],"5945":[1062,64,1062,70],"5953":[1069,42,1069,48],"596":[254,21,254,34],"5960":[1062,80,1062,83],"5978":[1062,85,1062,89],"6053":[1062,8,1062,90],"6082":[1062,8,1062,90],"6083":[1062,8,1062,90],"6084":[1062,8,1062,139],"6085":[1062,8,1062,139],"6086":[1062,1,1062,139],"6089":[1062,1,1062,139],"6090":[1065,1,1065,59],"6091":[1065,1,1065,59],"6092":[1065,1,1065,59],"6095":[1065,1,1065,59],"6097":[1065,1,1065,59],"6098":[1065,1,1065,59],"6100":[1065,1,1065,59],"6110":[1065,28,1065,38],"6115":[1065,40,1065,44],"6120":[1069,42,1069,48],"6122":[1065,46,1065,58],"6123":[1065,55,1065,58],"6128":[1065,46,1065,58],"6130":[1065,46,1065,58],"6137":[1065,46,1065,58],"6138":[1065,46,1065,58],"6139":[1065,46,1065,58],"614":[255,29,255,33],"6140":[1065,46,1065,58],"6157":[1065,1,1065,59],"6202":[1065,1,1065,59],"6204":[1067,21,1067,24],"6211":[856,51,856,56],"6219":[1067,1,1067,25],"622":[255,35,255,37],"6222":[1067,1,1067,25],"6223":[1067,1,1067,25],"6224":[1069,37,1069,40],"6227":[1069,1,1069,66],"6228":[1069,31,1069,35],"6229":[1069,19,1069,29],"6230":[1069,1,1069,66],"6263":[1069,42,1069,48],"6270":[1069,50,1069,65],"6278":[1069,1,1069,66],"6281":[1069,1,1069,66],"6282":[1071,8,1071,12],"629":[255,39,255,40],"6329":[1088,8,1088,19],"6365":[1088,8,1088,19],"6366":[1088,8,1088,19],"638":[255,9,255,41],"641":[255,9,255,41],"644":[255,9,255,41],"645":[255,9,255,41],"6455":[1106,4,1106,31],"6456":[1106,4,1106,31],"6457":[1106,4,1106,31],"646":[255,9,255,41],"6460":[1106,4,1106,31],"6462":[1106,4,1106,31],"6463":[1106,4,1106,31],"6465":[1106,4,1106,31],"6466":[1106,4,1106,12],"6467":[1106,4,1106,31],"6468":[1106,1,1109,32],"6471":[1106,1,1109,32],"6499":[1106,1,1109,32],"6500":[1106,1,1109,32],"6506":[1109,9,1109,32],"6509":[1109,9,1109,32],"651":[255,9,255,44],"6512":[1109,9,1109,32],"6513":[1109,9,1109,32],"6514":[1109,9,1109,32],"652":[255,9,255,44],"653":[255,9,255,44],"654":[255,9,255,44],"6550":[1113,11,1113,25],"6553":[1113,11,1113,25],"6565":[1113,27,1113,43],"6568":[1113,27,1113,43],"6574":[1113,81,1113,101],"6577":[1113,81,1113,101],"6584":[1113,81,1113,101],"6593":[1113,81,1113,101],"6603":[1113,81,1113,101],"6604":[1127,8,1127,13],"6607":[1127,8,1127,31],"6608":[1127,8,1127,31],"6609":[1127,1,1127,31],"6612":[1127,1,1127,31],"6613":[1128,20,1128,35],"6614":[1142,13,1142,21],"6616":[1128,8,1128,35],"6618":[1128,1,1128,35],"6621":[1128,1,1128,35],"6622":[1130,18,1130,29],"6624":[1130,30,1130,35],"6628":[1130,18,1130,36],"6630":[1130,18,1130,36],"6631":[1130,18,1130,36],"6633":[1130,18,1130,36],"6634":[1130,18,1130,36],"6636":[1130,18,1130,36],"6638":[1130,18,1130,36],"6643":[1130,1,1130,36],"6644":[1132,2,1145,3],"6651":[1133,3,1133,14],"6688":[1133,3,1133,14],"6689":[1133,3,1133,14],"6719":[1134,3,1134,26],"6722":[1134,3,1134,26],"6725":[1134,3,1134,26],"6726":[1134,3,1134,26],"6727":[1134,3,1134,26],"6743":[1136,4,1143,5],"6745":[1137,5,1137,21],"6790":[1138,13,1138,18],"6793":[1138,5,1138,28],"68":[228,30,228,44],"6806":[1139,13,1139,20],"6809":[1139,5,1139,30],"6822":[1154,30,1154,36],"6824":[1140,5,1140,29],"6837":[1141,13,1141,18],"6840":[1141,5,1141,28],"6853":[1142,13,1142,21],"6855":[1142,5,1142,31],"6876":[1136,4,1143,5],"6877":[1136,4,1143,5],"6878":[1135,3,1144,4],"6882":[1135,3,1144,4],"6884":[1135,3,1144,4],"6885":[1135,3,1144,4],"6886":[1135,3,1144,4],"6907":[1132,2,1145,3],"6908":[1132,2,1145,3],"6909":[1131,19,1146,2],"6913":[1131,19,1146,2],"6915":[1131,19,1146,2],"6916":[1131,19,1146,2],"6917":[1131,19,1146,2],"6918":[1131,1,1146,2],"692":[259,18,259,31],"6921":[1131,1,1146,2],"6922":[1148,28,1148,37],"6929":[1148,22,1148,45],"6932":[1148,22,1148,45],"6940":[1148,22,1148,45],"6941":[1148,42,1148,44],"6943":[1148,22,1148,45],"6946":[1148,22,1148,45],"6947":[1148,22,1148,45],"695":[259,18,259,31],"6952":[1148,14,1148,55],"6955":[1148,14,1148,55],"6963":[1148,14,1148,55],"6964":[1148,14,1148,55],"6965":[1148,14,1148,55],"6966":[1148,1,1148,55],"6969":[1148,1,1148,55],"6970":[1149,28,1149,37],"6977":[1149,22,1149,46],"6980":[1149,22,1149,46],"6988":[1149,22,1149,46],"6989":[1149,43,1149,45],"6991":[1149,22,1149,46],"6994":[1149,22,1149,46],"6995":[1149,22,1149,46],"70":[228,30,228,44],"7000":[1149,14,1149,56],"7003":[1149,14,1149,56],"7011":[1149,14,1149,56],"7012":[1149,14,1149,56],"7013":[1149,14,1149,56],"7014":[1149,1,1149,56],"7017":[1149,1,1149,56],"7018":[1150,28,1150,37],"7025":[1150,22,1150,45],"7028":[1150,22,1150,45],"7036":[1150,22,1150,45],"7037":[1150,43,1150,44],"7039":[1150,22,1150,45],"7042":[1150,22,1150,45],"7043":[1150,22,1150,45],"7048":[1150,14,1150,55],"7051":[1150,14,1150,55],"7059":[1150,14,1150,55],"7060":[1150,14,1150,55],"7061":[1150,14,1150,55],"7062":[1150,1,1150,55],"7065":[1150,1,1150,55],"7066":[1151,38,1151,43],"7069":[1151,8,1151,43],"7070":[1151,18,1151,24],"7077":[1151,8,1151,34],"7078":[1151,26,1151,27],"7085":[1151,8,1151,34],"7086":[1151,29,1151,30],"7093":[1151,8,1151,34],"7094":[1151,32,1151,33],"7101":[1151,8,1151,34],"711":[260,22,260,32],"7115":[1151,8,1151,34],"7118":[1151,8,1151,34],"7119":[1151,8,1151,43],"7120":[1151,1,1151,43],"7123":[1151,1,1151,43],"7124":[1154,30,1154,36],"7127":[1152,1,1152,16],"7129":[1152,17,1152,22],"713":[260,8,260,32],"7133":[1152,1,1152,23],"7135":[1152,1,1152,23],"7136":[1152,1,1152,23],"7138":[1152,1,1152,23],"7139":[1152,1,1152,23],"714":[260,8,260,18],"7141":[1152,1,1152,23],"7143":[1152,1,1152,23],"7145":[1152,24,1152,31],"715":[260,8,260,32],"716":[260,1,260,32],"7160":[1152,1,1152,32],"7161":[1152,1,1152,32],"7162":[1152,1,1152,41],"7163":[1153,22,1153,27],"7167":[1153,30,1153,31],"7178":[1153,22,1153,31],"7179":[1153,22,1153,31],"7180":[1153,1,1153,12],"7182":[1153,13,1153,18],"7186":[1153,1,1153,19],"7188":[1153,1,1153,19],"7189":[1153,1,1153,19],"719":[260,1,260,32],"7191":[1153,1,1153,19],"7192":[1153,1,1153,19],"7194":[1153,1,1153,19],"7196":[1153,1,1153,19],"7198":[1154,21,1154,28],"7201":[1154,1,1154,37],"7202":[1154,14,1154,19],"7205":[1154,1,1154,37],"7206":[1154,1,1154,37],"722":[261,28,261,32],"7239":[1154,30,1154,36],"7248":[1154,1,1154,37],"7251":[1154,1,1154,37],"7252":[1155,8,1155,12],"7295":[1162,14,1162,30],"7297":[1162,14,1162,30],"7298":[1163,8,1163,21],"7300":[1163,22,1163,29],"7303":[1163,8,1163,30],"7305":[1163,8,1163,30],"7306":[1163,8,1163,30],"7308":[1163,8,1163,30],"7309":[1163,8,1163,30],"7311":[1163,8,1163,30],"7313":[1163,8,1163,30],"7354":[1167,14,1167,28],"7356":[1167,14,1167,28],"7368":[1167,30,1167,46],"7370":[1167,30,1167,46],"7371":[1168,8,1168,23],"7373":[1168,24,1168,29],"7376":[1168,8,1168,30],"7378":[1168,8,1168,30],"7379":[1168,8,1168,30],"7381":[1168,8,1168,30],"7382":[1168,8,1168,30],"7384":[1168,8,1168,30],"7386":[1168,8,1168,30],"7388":[1168,31,1168,38],"7402":[1168,8,1168,39],"7403":[1168,8,1168,39],"741":[261,8,261,45],"7433":[1175,8,1175,25],"744":[261,8,261,45],"7464":[1180,8,1180,25],"747":[261,8,261,45],"748":[261,8,261,45],"749":[261,8,261,45],"7500":[1185,8,1185,29],"7502":[1185,8,1185,29],"7505":[1185,8,1185,29],"7506":[1185,8,1185,29],"7507":[1185,8,1185,29],"7535":[1190,8,1190,31],"7537":[1190,8,1190,31],"7540":[1190,8,1190,31],"7541":[1190,8,1190,31],"7542":[1190,8,1190,31],"7565":[1196,8,1196,15],"7567":[1196,8,1196,57],"7568":[1196,19,1196,36],"7570":[1196,19,1196,56],"7571":[1196,39,1196,56],"7581":[1196,19,1196,56],"7583":[1196,19,1196,56],"7584":[1196,19,1196,56],"7585":[1196,19,1196,56],"7586":[1196,19,1196,56],"7588":[1196,8,1196,57],"7592":[1196,8,1196,57],"7603":[1196,8,1196,57],"7604":[1196,8,1196,57],"7605":[1196,8,1196,57],"7606":[1196,8,1196,57],"7635":[1202,8,1202,15],"7637":[1202,8,1202,57],"7638":[1202,19,1202,36],"7640":[1202,19,1202,56],"7641":[1202,39,1202,56],"7651":[1202,19,1202,56],"7653":[1202,19,1202,56],"7654":[1202,19,1202,56],"7655":[1202,19,1202,56],"7656":[1202,19,1202,56],"7658":[1202,8,1202,57],"7662":[1202,8,1202,57],"7673":[1202,8,1202,57],"7674":[1202,8,1202,57],"7675":[1202,8,1202,57],"7676":[1202,8,1202,57],"7716":[1207,15,1207,33],"7718":[1207,15,1207,33],"7719":[1211,29,1211,46],"7721":[1211,8,1211,46],"7722":[1211,8,1211,46],"7724":[1211,8,1211,46],"7725":[1211,8,1211,46],"7765":[1215,12,1215,30],"7767":[1215,12,1215,30],"7768":[1216,30,1216,47],"7770":[1216,9,1216,47],"7771":[1216,9,1216,47],"7773":[1216,9,1216,47],"7774":[1216,9,1216,47],"7778":[1216,51,1216,74],"7780":[1216,51,1216,74],"7783":[1216,51,1216,74],"7784":[1216,51,1216,74],"7785":[1216,51,1216,74],"7795":[1216,8,1216,74],"7797":[1216,8,1216,74],"7798":[1216,8,1216,74],"7799":[1216,8,1216,74],"7800":[1216,8,1216,74],"7840":[1220,16,1220,31],"7842":[1220,16,1220,31],"7848":[1224,8,1224,37],"7850":[1224,8,1224,37],"7853":[1224,8,1224,37],"7854":[1224,8,1224,37],"7855":[1224,8,1224,37],"7889":[1229,14,1229,29],"789":[265,18,265,31],"7891":[1229,14,1229,29],"7895":[1233,8,1233,37],"7897":[1233,8,1233,37],"7900":[1233,8,1233,37],"7901":[1233,8,1233,37],"7902":[1233,8,1233,37],"7904":[1233,8,1233,63],"7908":[1233,40,1233,63],"7910":[1233,40,1233,63],"7913":[1233,40,1233,63],"7914":[1233,40,1233,63],"7915":[1233,40,1233,63],"792":[265,18,265,31],"7925":[1233,8,1233,63],"7927":[1233,8,1233,63],"7928":[1233,8,1233,63],"7929":[1233,8,1233,63],"7930":[1233,8,1233,63],"7962":[1244,25,1244,48],"7964":[1244,25,1244,48],"7967":[1244,25,1244,48],"7968":[1244,25,1244,48],"7969":[1244,25,1244,48],"7971":[1244,1,1244,48],"7972":[1244,1,1244,48],"7974":[1244,1,1244,48],"7975":[1245,49,1245,66],"7977":[1245,28,1245,66],"7978":[1245,28,1245,66],"7980":[1245,28,1245,66],"7981":[1245,28,1245,66],"7982":[1247,37,1247,44],"7986":[1245,24,1245,76],"7990":[1245,24,1245,76],"7994":[1245,24,1245,76],"7995":[1245,24,1245,76],"7996":[1245,24,1245,76],"7997":[1245,24,1245,76],"7998":[1245,79,1245,90],"8008":[1245,24,1245,90],"8010":[1245,24,1245,90],"8011":[1245,24,1245,90],"8012":[1245,24,1245,90],"8013":[1245,24,1245,90],"8014":[1245,1,1245,90],"8016":[1245,1,1245,90],"8017":[1247,8,1247,19],"8019":[1247,8,1247,78],"8020":[1247,37,1247,44],"8022":[1247,37,1247,58],"8023":[1247,47,1247,58],"8033":[1247,37,1247,58],"8035":[1247,37,1247,58],"8036":[1247,37,1247,58],"8037":[1247,37,1247,58],"8038":[1247,37,1247,58],"8042":[1247,60,1247,77],"8051":[1247,22,1247,78],"8053":[1247,22,1247,78],"8056":[1247,22,1247,78],"8057":[1247,22,1247,78],"8058":[1247,22,1247,78],"8062":[1247,8,1247,78],"8064":[1247,8,1247,78],"8071":[1247,8,1247,78],"8072":[1247,8,1247,78],"8073":[1247,8,1247,78],"8074":[1247,8,1247,78],"808":[266,22,266,32],"810":[266,8,266,32],"8106":[1258,25,1258,48],"8108":[1258,25,1258,48],"811":[266,8,266,18],"8111":[1258,25,1258,48],"8112":[1258,25,1258,48],"8113":[1258,25,1258,48],"8115":[1258,1,1258,48],"8116":[1258,1,1258,48],"8118":[1258,1,1258,48],"8119":[1259,49,1259,66],"812":[266,8,266,32],"8121":[1259,28,1259,66],"8122":[1259,28,1259,66],"8124":[1259,28,1259,66],"8125":[1259,28,1259,66],"8126":[1259,68,1259,75],"8128":[1259,68,1259,89],"8129":[1259,78,1259,89],"813":[266,1,266,32],"8133":[1259,68,1259,89],"8137":[1259,68,1259,89],"8148":[1259,68,1259,89],"8149":[1259,68,1259,89],"8150":[1259,68,1259,89],"8151":[1259,68,1259,89],"8153":[1259,24,1259,90],"8157":[1259,24,1259,90],"816":[266,1,266,32],"8161":[1259,24,1259,90],"8162":[1259,24,1259,90],"8163":[1259,24,1259,90],"8164":[1259,24,1259,90],"8165":[1259,1,1259,90],"8167":[1259,1,1259,90],"8168":[1261,9,1261,20],"817":[270,15,270,33],"8170":[1261,9,1261,69],"8171":[1261,38,1261,49],"8177":[1261,51,1261,68],"8186":[1261,23,1261,69],"8188":[1261,23,1261,69],"8191":[1261,23,1261,69],"8192":[1261,23,1261,69],"8193":[1261,23,1261,69],"8197":[1261,9,1261,69],"8199":[1261,9,1261,69],"82":[228,46,228,60],"820":[270,15,270,40],"8206":[1261,9,1261,69],"8207":[1261,9,1261,69],"8208":[1261,9,1261,69],"8209":[1261,9,1261,69],"8210":[1261,73,1261,84],"8214":[1261,8,1261,84],"8218":[1261,8,1261,84],"8229":[1261,8,1261,84],"8230":[1261,8,1261,84],"8231":[1261,8,1261,84],"8232":[1261,8,1261,84],"8264":[1266,25,1266,48],"8266":[1266,25,1266,48],"8269":[1266,25,1266,48],"8270":[1266,25,1266,48],"8271":[1266,25,1266,48],"8273":[1266,1,1266,48],"8274":[1266,1,1266,48],"8276":[1266,1,1266,48],"8280":[1267,28,1267,57],"8282":[1267,28,1267,57],"8285":[1267,28,1267,57],"8286":[1267,28,1267,57],"8287":[1267,28,1267,57],"8289":[1267,24,1267,90],"8290":[1269,37,1269,44],"8292":[1267,60,1267,88],"8293":[1267,60,1267,88],"8295":[1267,60,1267,88],"8296":[1267,60,1267,88],"8298":[1267,24,1267,90],"830":[270,38,270,39],"8302":[1267,24,1267,90],"8306":[1267,24,1267,90],"8307":[1267,24,1267,90],"8308":[1267,24,1267,90],"8309":[1267,24,1267,90],"8310":[1267,93,1267,104],"8320":[1267,24,1267,104],"8322":[1267,24,1267,104],"8323":[1267,24,1267,104],"8324":[1267,24,1267,104],"8325":[1267,24,1267,104],"8326":[1267,1,1267,104],"8328":[1267,1,1267,104],"8329":[1269,8,1269,19],"8331":[1269,8,1269,79],"8332":[1269,37,1269,44],"8334":[1269,37,1269,58],"8335":[1269,47,1269,58],"8345":[1269,37,1269,58],"8347":[1269,37,1269,58],"8348":[1269,37,1269,58],"8349":[1269,37,1269,58],"8350":[1269,37,1269,58],"8354":[1269,60,1269,78],"8363":[1269,22,1269,79],"8365":[1269,22,1269,79],"8368":[1269,22,1269,79],"8369":[1269,22,1269,79],"8370":[1269,22,1269,79],"8374":[1269,8,1269,79],"8376":[1269,8,1269,79],"8383":[1269,8,1269,79],"8384":[1269,8,1269,79],"8385":[1269,8,1269,79],"8386":[1269,8,1269,79],"84":[228,46,228,60],"8418":[1274,25,1274,48],"8420":[1274,25,1274,48],"8423":[1274,25,1274,48],"8424":[1274,25,1274,48],"8425":[1274,25,1274,48],"8427":[1274,1,1274,48],"8428":[1274,1,1274,48],"8430":[1274,1,1274,48],"8434":[1275,28,1275,57],"8436":[1275,28,1275,57],"8439":[1275,28,1275,57],"8440":[1275,28,1275,57],"8441":[1275,28,1275,57],"8443":[1275,24,1275,81],"8444":[1275,59,1275,66],"8446":[1275,59,1275,80],"8447":[1275,69,1275,80],"8451":[1275,59,1275,80],"8455":[1275,59,1275,80],"846":[270,15,270,40],"8466":[1275,59,1275,80],"8467":[1275,59,1275,80],"8468":[1275,59,1275,80],"8469":[1275,59,1275,80],"8471":[1275,24,1275,81],"8475":[1275,24,1275,81],"8479":[1275,24,1275,81],"8480":[1275,24,1275,81],"8481":[1275,24,1275,81],"8482":[1275,24,1275,81],"8483":[1275,1,1275,81],"8485":[1275,1,1275,81],"8486":[1277,9,1277,20],"8488":[1277,9,1277,70],"8489":[1277,38,1277,49],"8495":[1277,51,1277,69],"8504":[1277,23,1277,70],"8506":[1277,23,1277,70],"8509":[1277,23,1277,70],"8510":[1277,23,1277,70],"8511":[1277,23,1277,70],"8515":[1277,9,1277,70],"8517":[1277,9,1277,70],"8524":[1277,9,1277,70],"8525":[1277,9,1277,70],"8526":[1277,9,1277,70],"8527":[1277,9,1277,70],"8528":[1277,74,1277,85],"8532":[1277,8,1277,85],"8536":[1277,8,1277,85],"8547":[1277,8,1277,85],"8548":[1277,8,1277,85],"8549":[1277,8,1277,85],"8550":[1277,8,1277,85],"875":[270,15,270,40],"876":[270,15,270,40],"877":[270,1,270,40],"878":[270,1,270,40],"881":[270,1,270,40],"882":[273,8,273,26],"885":[273,8,273,45],"895":[273,39,273,44],"914":[273,8,273,45],"9447":[427,0,431,13],"9448":[428,23,428,33],"9450":[428,9,428,33],"9451":[428,9,428,19],"9452":[428,9,428,33],"9453":[428,2,428,33],"9456":[428,2,428,33],"9457":[429,16,429,31],"9460":[429,9,429,12],"9464":[429,2,429,31],"9467":[429,2,429,31],"9468":[430,21,430,29],"9470":[430,2,430,30],"9471":[430,16,430,19],"9473":[430,2,430,30],"9474":[430,2,430,30],"9507":[430,2,430,30],"9509":[430,2,430,30],"9511":[430,2,430,30],"9512":[431,9,431,13],"9515":[431,2,431,13],"9516":[431,2,431,13],"9518":[1092,0,1101,2],"9519":[1094,2,1100,3],"9521":[1095,3,1095,19],"9569":[1096,21,1096,34],"959":[273,8,273,45],"960":[273,8,273,45],"9605":[1096,13,1096,46],"9606":[1096,21,1096,34],"9608":[1096,3,1096,47],"961":[273,1,273,45],"9612":[1096,3,1096,47],"9614":[1096,3,1096,47],"9615":[1096,3,1096,47],"9616":[1096,3,1096,47],"962":[273,1,273,45],"963":[273,1,273,45],"9632":[1097,21,1097,32],"966":[273,1,273,45],"9668":[1097,13,1097,44],"9669":[1097,21,1097,32],"9671":[1097,3,1097,45],"9675":[1097,3,1097,45],"9677":[1097,3,1097,45],"9678":[1097,3,1097,45],"9679":[1097,3,1097,45],"969":[275,28,275,32],"9691":[1098,11,1098,19],"9703":[1099,11,1099,15],"9721":[1094,2,1100,3],"9722":[1094,2,1100,3],"9723":[1093,8,1101,2],"9727":[1093,8,1101,2],"9729":[1093,8,1101,2],"9730":[1093,8,1101,2],"9731":[1093,8,1101,2],"9733":[1093,1,1101,2],"9734":[1093,1,1101,2],"9736":[440,0,444,12],"9737":[441,22,441,32],"9739":[441,8,441,32],"9740":[441,8,441,18],"9741":[441,8,441,32],"9742":[441,1,441,32],"9745":[441,1,441,32],"9746":[442,15,442,31],"9748":[442,8,442,11],"9752":[442,1,442,31],"9755":[442,1,442,31],"9756":[443,20,443,28],"9758":[443,1,443,29],"9759":[443,15,443,18],"9761":[443,1,443,29],"9762":[443,1,443,29],"977":[275,34,275,36],"9795":[443,1,443,29],"9797":[443,1,443,29],"9799":[443,1,443,29],"9800":[444,8,444,12],"9803":[444,1,444,12],"9804":[444,1,444,12],"9806":[222,0,224,57],"9807":[223,22,223,32],"9809":[223,8,223,32],"9810":[223,8,223,18],"9811":[223,8,223,32],"9812":[223,1,223,32],"9815":[223,1,223,32],"9816":[224,51,224,57],"9819":[224,8,224,25],"9822":[224,28,224,47],"9837":[224,8,224,47],"9838":[224,8,224,47],"9840":[224,1,224,57],"9843":[224,1,224,57],"9845":[936,0,942,13],"9846":[940,18,940,35],"9848":[940,18,940,55],"9849":[940,38,940,55],"985":[275,38,275,46],"9859":[940,18,940,55],"9861":[940,18,940,55],"9862":[940,18,940,55],"9863":[940,18,940,55],"9864":[940,18,940,55],"9865":[940,1,940,55],"9867":[940,1,940,55],"9868":[941,8,941,13],"9870":[941,8,941,18],"9871":[941,8,941,18],"9872":[941,1,941,18],"9875":[941,1,941,18],"9876":[942,8,942,13],"9880":[942,1,942,13],"9881":[942,1,942,13],"9883":[644,0,658,58],"9884":[649,8,653,9],"9890":[650,12,650,50],"9927":[650,12,650,50],"9928":[650,12,650,50],"995":[275,8,275,47],"9954":[651,20,651,28],"9956":[651,12,651,38],"9969":[652,20,652,26],"9971":[652,12,652,36],"998":[275,8,275,47],"9992":[649,8,653,9]},"runtimeBytecode":{"bytecode":"0x6003361161000c576124e1565b60003560e01c346134495763d0a96dfd81186100ec5760843610613449576004358060a01c613449576060526024358060801c613449576080526044358060801c6134495760a05260005460021461344957600260005560643560405261007161264e565b600f546064358082018281106134495790509050600f55602060605163cb83620960c05260805160e05260a0516101005260643561012052602061351b600039600051610140523061016052602060c060a460dc6000855af16100d9573d600060003e3d6000fd5b60203d106134495760c090506003600055f35b63f17a028f81186101925760643610613449576004358060a01c6134495760605260005460021461344957600260005560443560405261012a61264e565b600f546044358082018281106134495790509050600f55602060605163c36515746080526040602460a037602060806044609c6000855af1610171573d600060003e3d6000fd5b60203d10613449576080518060011c6134495760e05260e090506003600055f35b635b868ff781186102325760843610613449576004358060a01c613449576040526044358060801c613449576060526064358060801c61344957608052600954331861344957602060405163ac856fac60a05260243560c05260605160e05260805161010052602060a0606460bc6000855af1610214573d600060003e3d6000fd5b60203d106134495760a0518060011c61344957610120526101209050f35b63425f885481186102955760443610613449576004358060a01c61344957610440526000546002146134495760026000556020610440516103005260243561032052600061034052610285610460612cd3565b6104606020810190506003600055f35b63fc398fd881186102f65760643610613449576004358060a01c61344957610440526000546002146134495760026000556009543318613449576040610440516103005260406024610320376102ec610460612cd3565b6104606003600055f35b63db862b6681186103f45760643610613449576004358060a01c61344957610440526000546002146134495760026000556009543318613449576104405163fac333ac6104805260006104a0526020610480602461049c845afa61035f573d600060003e3d6000fd5b60203d106134495761048090505161046052610440516367828fbd610480526024356104a0526020610480602461049c6000855af16103a3573d600060003e3d6000fd5b60203d1061344957610480518060011c613449576104c0526104c09050511561344957604061044051610300526104605161032052604435610340526103ea610480612cd3565b6104806003600055f35b63e992871a811861077b5760443610613449576004358060a01c613449576102205260005460021461344957600260005560046102205163200d2ed2610240526020610240600461025c845afa610450573d600060003e3d6000fd5b60203d10613449576102409050511861344957610220516342997913610320526024356103405260e0610320602461033c845afa610493573d600060003e3d6000fd5b60e03d106134495761032051610420526103405161044052610360516104605261038051610480526103a0518060081c613449576104a0526103c0518060a01c613449576104c0526103e0518060a01c613449576104e052610420905080516102405260208101516102605260408101516102805260608101516102a05260808101516102c05260a08101516102e05260c0810151610300525061024051610260518082038281116134495790509050610320526102205163040cf0206103405260243561036052610320516102a0518082018281106134495790509050610380526020610340604461035c6000855af1610593573d600060003e3d6000fd5b60203d1061344957610340518060011c613449576103a0526103a050506105bb610360612b99565b61036051610340526105ce610380612675565b610380516103605260006103805261026051601054101561065057601054610380526001546103805180820382811161344957905090506001556102605161038051610360518082028115838383041417156134495790509050808203828111613449579050905060c052600160e052610646612bb7565b600060105561069a565b610260516103605180156134495780820490509050610380526010546103805180820382811161344957905090506010556001546103805180820382811161344957905090506001555b6102a051156106b7576102a05160c052600060e0526106b7612bb7565b61038051156106cb576009543314156106ce565b60005b1561070257306101205233610140526103805161016052610bb86101805260406101a0526106fd6103a06128da565b6103a0505b61026051610320516024357f1ac067b632f5eb544f1a44a0a527a048bae80040f82c08d06f01652e68dab626610340516103c0526107416103a0612b99565b6103a0516103e0526103605161040052610380516104205260806103c0a4610320516103a052610260516103c05260406103a06003600055f35b637c348407811861084b5760443610613449576004358060a01c613449576060526000546002146134495760026000556024356040526107b961264e565b600f546024358082018281106134495790509050600f55606051636e553f6560a05260243560c0523060e052602060a0604460bc6000855af1610801573d600060003e3d6000fd5b60203d106134495760a09050516080526080516024356060517f52c96d47a80d9b25a93e127820d4f5ab071d7200a846923b905baa2a811ea68c600060a0a4602060806003600055f35b636071d9d4811861091a5760443610613449576004358060a01c61344957604052600054600214613449576002600055600954331861344957600f546024358082018281106134495790509050600f5560405163b460af946060526024356080523060a0523060c052602060606064607c6000855af16108d0573d600060003e3d6000fd5b60203d10613449576060505060006024356040517f8c8e960392ed5042fd2125f1560d2249b90f2c0074c39d7e88fb6eb6e79cad4560006060a46001606052602060606003600055f35b6301681a6281186109575760243610613449577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61020052610972565b636ea056a98118610a96576044361061344957602435610200525b6004358060a01c613449576101e052600954331861344957610200516102205261022051196109dc576101e0516370a082316102405230610260526020610240602461025c845afa6109c9573d600060003e3d6000fd5b60203d1061344957610240905051610220525b602061351b6000396000516101e05118610a4957602061351b6000396000516370a082316102405230610260526020610240602461025c845afa610a25573d600060003e3d6000fd5b60203d10613449576102409050516004548082038281116134495790509050610220525b610220516101e0517fab2246061d7b0dd3631d037e3f6da75782ae489eeb9f6af878a4b25df9b07c776000610240a36101e05160405260095460605261022051608052610a9461269b565b005b6349e7fc2a8118610afa5760243610613449576004358060a01c61344957604052600954331861344957604051600a556040517f69737d41162474a7ca514809b07d7becaecf72eae8c23bceb071f0e09af93ffc60006060a2600160605260206060f35b63b2c1e1de8118610b50576004361061344957600a54331861344957600a54600955600a547f84022644ce39de434e8f39c4398a3628815893104188274c37205d41c2d5096760006040a2600160405260206040f35b63131b09f98118610ba6576024361061344957600954331861344957600435600d556004357fbc4b9b4fa5f3e34af4236a368b445c3845cf5247dd7c971534685fa80c1cb0d960006040a2600160405260206040f35b63a4a2fc878118610bfc576024361061344957600954331861344957600435600e556004357fcf2ffd83574e0bfcf18326b0092428a3f861af95312abab81bfeb22d93abee5160006040a2600160405260206040f35b6308e5d8018118610c525760243610613449576004358060101c6134495760805260005460021461344957600260005560805160115560206080516040526001606052610c4960a06124e7565b60a06003600055f35b63a78feacb8118610ca85760243610613449576004358060101c6134495760805260005460021461344957600260005560805160145560206080516040526008606052610c9f60a0612608565b60a06003600055f35b63e5030fd98118610cfe5760243610613449576004358060101c6134495760805260005460021461344957600260005560805160155560206080516040526010606052610cf560a0612608565b60a06003600055f35b6371626c678118610d545760243610613449576004358060101c6134495760805260005460021461344957600260005560805160155560206080516040526002606052610d4b60a0612608565b60a06003600055f35b635ae51ece8118610daa5760243610613449576004358060101c6134495760805260005460021461344957600260005560805160155560206080516040526004606052610da160a0612608565b60a06003600055f35b63aa862d458118610e115760243610613449576004358060a01c61344957604052600b54331861344957604051600c557f653c99046badd5824122a6927580b9bc3ba7814333d63e6105783bb2779e483a60405160605260206060a1600160605260206060f35b63e2cfadde8118610e745760243610613449576004358060a01c61344957604052600c5433186134495733600b557f6718bb71e4ad7e4e26b5b5e86e95d178e12d42f6d0b4dee3af5a0ff1a6873e423360605260206060a1600160605260206060f35b63829ba1f18118610f92576024361061344957600054600214613449576002600055600b54331861344957610ea960e0612b99565b60e05160c052600160c051126134495760043560e05260043519610ece5760105460e0525b60105460e0518082038281116134495790509050601055306040523360605260e051608052610efe6101006127c9565b6101005060e051600b547fb12a1d5f04d39b4b9a6c36fe3af0083fde89e96eeb4b11b771cbf2afc20a0be96000610100a3610f3a610120612675565b61012051610100527f948baf513f1cc4cf9907b75a396d0b9d9515d2d4d7e8793fd32ef72e74dff3956101005161012052610100516101405260c051610160526060610120a160016101205260206101206003600055f35b6312432dd78118611004576024361061344957600054600214613449576002600055600954331861344957670de0b6b3a764000060043511613449576004356007556004357ffd8a95def6639b459281108310d09bc3f0e381e74eb762ec5e59e12d9c15dced60006040a26003600055005b63b489e834811861103b576004361061344957600054600214613449576002600055602061103260c0612ba0565b60c06003600055f35b636e553f6581186110985760443610613449576024358060a01c6134495761036052600054600214613449576002600055602060043561022052610360516102405260006102605261108e610380612e65565b6103806003600055f35b63d48fbb9581186111065760643610613449576024358060a01c61344957610360526044358060a01c6134495761038052600054600214613449576002600055602060043561022052610360516102405261038051610260526110fc6103a0612e65565b6103a06003600055f35b6394bf804d81186111ae5760443610613449576024358060a01c61344957610360526000546002146134495760026000556111426103a0612675565b6103a051610380526004356103805180820281158383830414171561344957905090506102205261036051610240526000610260526111826103a0612e65565b6103a0516103805180820281158383830414171561344957905090506103c05260206103c06003600055f35b63227a798581186112675760643610613449576024358060a01c61344957610360526044358060a01c61344957610380526000546002146134495760026000556111f96103c0612675565b6103c0516103a0526004356103a0518082028115838383041417156134495790509050610220526103605161024052610380516102605261123b6103c0612e65565b6103c0516103a05180820281158383830414171561344957905090506103e05260206103e06003600055f35b63b460af9481186112d55760643610613449576024358060a01c61344957610320526044358060a01c613449576103405260005460021461344957600260005560206004356101e052610340516102005261032051610220526112cb61036061319a565b6103606003600055f35b63ba087652811861138e5760643610613449576024358060a01c61344957610320526044358060a01c6134495761034052600054600214613449576002600055611320610380612675565b61038051610360526004356103605180820281158383830414171561344957905090506101e0526103405161020052610320516102205261136261038061319a565b610380516103605180820281158383830414171561344957905090506103a05260206103a06003600055f35b63a9059cbb81186113e35760443610613449576004358060a01c6134495760c05260005460021461344957600260005560203360405260c0516060526024356080526113da60e06127c9565b60e06003600055f35b6323b872dd811861146a5760643610613449576004358060a01c6134495760c0526024358060a01c6134495760e05260005460021461344957600260005560c0516040526044356060526114386101006130ba565b610100511561344957602060c05160405260e0516060526044356080526114606101006127c9565b6101006003600055f35b63095ea7b381186114e95760443610613449576004358060a01c613449576040526024356003336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6339509351811861159c5760443610613449576004358060a01c61344957604052600333602052600052604060002080604051602052600052604060002090505460243580820182811061344957905090506060526060516003336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560605160805260206080a3600160805260206080f35b63613255ab81186115f35760243610613449576004358060a01c61344957604052602061351b600039600051604051146115e2576000606052602060606115f1566115f1565b60206115ee6060613181565b60605bf35b63d9d98ce481186116485760443610613449576004358060a01c6134495761014052602061351b60003960005161014051186134495760206101405160805260243560a0526116436101606133eb565b610160f35b635cffe9de811861189b5760a43610613449576004358060a01c613449576101e0526024358060a01c61344957610200526064356004016161a88135116134495780358061022052602082018181610240375050506000546002146134495760026000556116b7616400613181565b616400516044351161344957602061351b600039600051604052336060526044356080526116e361269b565b6102005160805260443560a0526116fb6164206133eb565b61642051616400527f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd96101e0516323e30c8b6164205260a03361644052610200516164605260443561648052616400516164a052806164c0528061644001610220518082526020820181818361024060045afa5050508051806020830101601f82600003163682375050601f19601f82516020010116905081015050602061642061628461643c6000855af16117b6573d600060003e3d6000fd5b60203d10613449576164209050511861344957602061351b6000396000516323b872dd6164205233616440523061646052604435616400518082018281106134495790509050616480526020616420606461643c6000855af161181e573d600060003e3d6000fd5b60203d1061344957616420518060011c613449576164a0526164a050506164005160c052600060e05261184f612bb7565b6164005130337fbc4d39efeb1b275027eea2b2a7b698f03ed7a3696b942049218abb6c32ea52bd604435616420526008616440526040616420a460016164205260206164206003600055f35b6325829410811861192357600436106134495760208060805260076040527f302e302e3030310000000000000000000000000000000000000000000000000060605260408160800181518082526020830160208301815181525050508051806020830101601f82600003163682375050601f19601f8251602001011690509050810190506080f35b633644e5158118611977576004361061344957602061353b600039600051461861196457602061355b60003960005161018052602061018061197556611975565b602061197161018061252e565b6101805bf35b639fd5a6cf8118611c605760c43610613449576004358060a01c61344957610180526024358060a01c613449576101a0526084356004016041813511613449578035806101c0526020820181816101e0375050506101805115613449574260643510613449576008610180516020526000526040600020546102405260006002610280527f19010000000000000000000000000000000000000000000000000000000000006102a052610280805160208201836103e00181518152505080830192505050611a466102c061252e565b6102c051816103e0015260208101905060007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9816103000152602081019050610180518161030001526020810190506101a05181610300015260208101905060443581610300015260208101905061024051816103000152602081019050606435816103000152602081019050806102e0526102e09050805160208201209050816103e00152602081019050806103c0526103c09050805160208201209050610260526101c051602011613449576101e0516102c05260206102a0526102a06020810151815160200360031b1c9050610280526101c05160401161344957610200516102e05260206102c0526102c06020810151815160200360031b1c90506102a0526101c05160411161344957610220516103005260016102e0526102e06020810151815160200360031b1c90506102c05261018051610260516102e0526102c0516103005261028051610320526102a051610340526020600060806102e060015afa5060005118613449576044356003610180516020526000526040600020806101a051602052600052604060002090505561024051600181018181106134495790506008610180516020526000526040600020556101a051610180517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256044356102e05260206102e0a360016102e05260206102e0f35b6370a082318118611c9b5760243610613449576004358060a01c61344957604052600260405160205260005260406000205460605260206060f35b63dd62ed3e8118611cf55760443610613449576004358060a01c613449576040526024358060a01c613449576060526003604051602052600052604060002080606051602052600052604060002090505460805260206080f35b6301e1d1148118611d1457600436106134495760045460405260206040f35b6318160ddd8118611d3357600436106134495760015460405260206040f35b63bd30558e8118611d565760043610613449576020611d526040612b99565b6040f35b63a035b1fe8118611d795760043610613449576020611d756060612675565b6060f35b63c6e6f5928118611dbf57602436106134495760043560045460015480156134495780820490509050808202811583838304141715613449579050905060405260206040f35b6307a2d13a8118611e0557602436106134495760043560015460045480156134495780820490509050808202811583838304141715613449579050905060405260206040f35b63402d267d8118611e365760243610613449576004358060a01c613449576040526004548019905060605260206060f35b63c63d75b68118611e815760243610613449576004358060a01c6134495760605260045480199050611e686080612675565b6080518015613449578082049050905060a052602060a0f35b63ce96cb778118611eb25760243610613449576004358060a01c613449576040526020611eae6060613181565b6060f35b63d905777e8118611f035760243610613449576004358060a01c61344957606052611edd6080613181565b608051611eea60a0612675565b60a0518015613449578082049050905060c052602060c0f35b63ef8b30f78118611f93576024361061344957611f2060a0612675565b60a05160805260045480199050600435808281188284100218905090506080518015613449578082049050905060a05260a05160043560805180156134495780820490509050604052601254606052611f7960c061289e565b60c051808203828111613449579050905060e052602060e0f35b63b3d7f6b98118612031576024361061344957611fb060a0612675565b60a0516080526004548019905060043560805180820281158383830414171561344957905090508082811882841002189050905060a05260a05160a05160405260125460605261200060c061289e565b60c0518082038281116134495790509050608051808202811583838304141715613449579050905060e052602060e0f35b630a28a47781186120cb57602436106134495761204e60a0612675565b60a05160805261205e60c0613181565b60c05160043580199050808281188284100218905090506080518015613449578082049050905060a05260a051600435608051801561344957808204905090506040526013546060526120b160c061289e565b60c051808203828111613449579050905060e052602060e0f35b634cdad506811861216f5760243610613449576120e860a0612675565b60a0516080526120f860c0613181565b60c05160043560805180820281158383830414171561344957905090508082811882841002189050905060a05260a05160a05160405260135460605261213e60c061289e565b60c0518082038281116134495790509050608051808202811583838304141715613449579050905060e052602060e0f35b6306fdde0381186121d057600436106134495760208060405280604001602061345b600039600051808252602082018161347b823950508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b4181186122385760043610613449576020806040528060400160206134bb6000396000518082526020820160206134db600039600051815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63313ce567811861225f57600436106134495760206134fb60003960005160405260206040f35b633940e9ee811861227e57600436106134495760015460405260206040f35b6338d52e0f81186122a5576004361061344957602061351b60003960005160405260206040f35b630b3d047081186122c457600436106134495760045460405260206040f35b63a653a93e81186122e357600436106134495760055460405260206040f35b637d0a490d811861230257600436106134495760065460405260206040f35b63a952807d811861232157600436106134495760075460405260206040f35b637ecebe00811861235c5760243610613449576004358060a01c61344957604052600860405160205260005260406000205460605260206060f35b63c8ee24e08118612383576004361061344957602061353b60003960005160405260206040f35b634eb9c3b381186123aa576004361061344957602061355b60003960005160405260206040f35b638da5cb5b81186123c957600436106134495760095460405260206040f35b637f4ec4c381186123e8576004361061344957600a5460405260206040f35b63758f969a8118612407576004361061344957600b5460405260206040f35b63b8e269808118612426576004361061344957600c5460405260206040f35b634d5f811e8118612445576004361061344957600d5460405260206040f35b63926e1cfc8118612464576004361061344957600e5460405260206040f35b63531890218118612483576004361061344957600f5460405260206040f35b638c0482e181186124a257600436106134495760105460405260206040f35b639af1d35a81186124df57600436106134495760115460405260125460605260135460805260145460a05260155460c05260165460e05260c06040f35b505b60006000fd5b60095433186134495761271060405113613449576060516040517f7081f575009d8afada7e5caf0f289d637e3448a92fd3d68a73dde4a5c00c8fb860006080a36001815250565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8160e00152602081019050600d6040527f446562742044414f20506f6f6c0000000000000000000000000000000000000060605260408051602082012090508160e0015260208101905060076080527f302e302e3030310000000000000000000000000000000000000000000000000060a05260808051602082012090508160e00152602081019050468160e00152602081019050308160e001526020810190508060c05260c09050805160208201209050815250565b60095433186134495760c860405113613449576060516040517f7081f575009d8afada7e5caf0f289d637e3448a92fd3d68a73dde4a5c00c8fb860006080a36001815250565b600954331861344957604051600454600f5480820382811161344957905090501061344957565b600454600154801561344957808204905090506040526040511561344957604051815250565b6000600460e0527fa9059cbb000000000000000000000000000000000000000000000000000000006101005260e08051602082018361014001815181525050808301925050506060518161014001526020810190506080518161014001526020810190508061012052610120505060206101c06101205161014060006040515af161272b573d600060003e3d6000fd5b3d602081183d60201002186101a0526101a080518060a05260208201805160c05250505060a051156127c75760c05160a05160200360031b1c6127c757601060e0527f5472616e73666572206661696c656421000000000000000000000000000000006101005260e05060e0518061010001601f826000031636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b565b604051156127f85760026040516020526000526040600020805460805180820382811161344957905090508155505b606051156128275760026060516020526000526040600020805460805180820182811061344957905090508155505b6060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a36001815250565b60015460e0518082018281106134495790509050600155600060405260c05160605260e0516080526128936101006127c9565b610100506001815250565b6060516128b35760008152506128d8566128d8565b6040516060518082028115838383041417156134495790509050612710810490508152505b565b61016051604052610180516060526128f36101e061289e565b6101e0516101c0526101c0511561296f57600954610140511861294c573060c0526101c05160e0526129266101e0612860565b6101e05115613449576010546101c051808201828110613449579050905060105561296f565b6101405160c0526101c05160e0526129656101e0612860565b6101e05115613449575b6101c05161014051610120517fbc4d39efeb1b275027eea2b2a7b698f03ed7a3696b942049218abb6c32ea52bd610160516101e0526101a0516102005260406101e0a46101c051815250565b6129c6610260612675565b6102605161024052610220516129dd610280612675565b61028051801561344957808204905090506102605230610120526009546101405261026051610160526011546101805260016101a052612a1e6102a06128da565b6102a0516102805261026051604052601554606052612a3e6102c061289e565b6102c0516102a0526102a05115612a5a57600954331415612a5d565b60005b15612aee576102a05133307fbc4d39efeb1b275027eea2b2a7b698f03ed7a3696b942049218abb6c32ea52bd610260516102c05260106102e05260406102c0a46004546102a0516102405180820281158383830414171561344957905090508082038281116134495790509050600455602061351b600039600051604052336060526102a051608052612aee61269b565b610280516102a0518082018281106134495790509050815250565b4260055480820382811161344957905090506007548082028115838383041417156134495790509050604052670de0b6b3a763ffff6040511115612b55576000815250612b9756612b97565b6006546060526060516040516060518082028115838383041417156134495790509050670de0b6b3a76400008104905080820382811161344957905090508152505b565b6000815250565b612baa60a0612b09565b60a0516080526000815250565b612bc2610120612675565b610120516101005260e051612c1357612bdc610120612ba0565b6101205060045460c051808201828110613449579050905060045560065460c0518082018281106134495790509050600655612c7c565b612c1e610140612b09565b610140516101205260045460c051808203828111613449579050905060045560c0516101205111612c53576000600655612c6c565b6101205160c05180820382811161344957905090506006555b612c77610140612ba0565b610140505b7f948baf513f1cc4cf9907b75a396d0b9d9515d2d4d7e8793fd32ef72e74dff3956101005161016052612cb0610120612675565b6101205161018052612cc3610140612b99565b610140516101a0526060610160a1565b61034051610360526040366103803761030051636932854f6103c052610320516103e05260406103c060246103dc845afa612d13573d600060003e3d6000fd5b60403d10613449576103c0905080516103a0526020810151610380525061034051612d45576103805161036052612d69565b6103405119612d69576103a051610380518082018281106134495790509050610360525b610380516103605110612dad57610360516103805180820382811161344957905090506103a052600f546103a0518082038281116134495790509050600f55612dbc565b610360516103805260006103a0525b6103005163040cf0206103c052610320516103e052610360516104005260206103c060446103dc6000855af1612df7573d600060003e3d6000fd5b60203d10613449576103c0518060011c613449576104205261042090505115613449576103805115612e53576103805160c052600060e052612e37612bb7565b6103805161022052612e4a6103e06129bb565b6103e0516103c0525b6103a051815261038051602082015250565b600d54610220511061344957600e546004546102205180820182811061344957905090501161344957612e996102a0612675565b6102a051610280526102205161028051801561344957808204905090506102a05260125415612ef6576102405161012052600954610140526102a051610160526012546101805260026101a052612ef16102c06128da565b6102c0505b6102605115612f09576016541515612f0c565b60005b15612f4657610240516101205261026051610140526102a051610160526016546101805260206101a052612f416102c06128da565b6102c0505b6004546102205180820182811061344957905090506004556102405160c0526102a05160e052612f776102c0612860565b6102c050602061351b6000396000516323b872dd6102c052336102e0523061030052610220516103205260206102c060646102dc6000855af1612fbf573d600060003e3d6000fd5b60203d10613449576102c0518060011c61344957610340526103409050511561344957610240516102a0517f2c0f148b435140de488c1b34647f1511c646f7077e87007bacf22ef9977a16d8336102c052610220516102e05260406102c0a37f948baf513f1cc4cf9907b75a396d0b9d9515d2d4d7e8793fd32ef72e74dff39561028051610300526130526102c0612675565b6102c051610320526130656102e0612b99565b6102e051610340526060610300a16102a051815250565b60015460e051808203828111613449579050905060015560c051604052600060605260e0516080526130af6101006127c9565b610100506001815250565b604051331461317a5760036040516020526000526040600020803360205260005260406000209050546080527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6080511461317a5760805160605180820382811161344957905090506080526080516003604051602052600052604060002080336020526000526040600020905055336040517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560805160a052602060a0a35b6001815250565b600454600f548082038281116134495790509050815250565b6131a5610240613181565b610240516101e0511161344957610200516040526101e0516060526131cb6102406130ba565b6102405115613449576131df610260612675565b61026051610240526101e051610240518015613449578082049050905061026052610260516040526013546060526132186102a061289e565b6102a05161028052601354156132695761028051600954610220517fbc4d39efeb1b275027eea2b2a7b698f03ed7a3696b942049218abb6c32ea52bd610260516102a05260046102c05260406102a0a45b6004546101e05180820382811161344957905090506004556102205160c0526102605161028051808201828110613449579050905060e0526132ac6102a061307c565b6102a050602061351b600039600051604052610220516060526101e0516080526132d461269b565b6102205161020051610260517f14fb18a6159cb964441ea40f176151c2d2a3db8c8152e81e410e2524288736e4336102a0526101e0516102c05260406102a0a47f948baf513f1cc4cf9907b75a396d0b9d9515d2d4d7e8793fd32ef72e74dff395610240516102c052610240516102e0526133506102a0612b99565b6102a0516103005260606102c0a161026051815250566133706080612b09565b60805180820382811161344957905090508152505661338f6080612b09565b60805180820382811161344957905090506133aa60a0612675565b60a05180156134495780820490509050815250566133d05760128152506133e9566133e9565b60a05160805160200360031b1c8060081c613449578152505b565b60145461340057600081525061344756613447565b60a05161340d60c0613181565b60c051808281188284100218905090506101005260145461012052610100516040526101205160605261344060e061289e565b60e0518152505b565b600080fda165767970657283000307000b"},"sourceId":"PoolDelegate.vy","sourcemap":"-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;8807:13;;-1:-1;;;;;;:::-;8822:14;;-1:-1;;;;;;:::-;8838:14;;-1:-1;;;;;:::-;;;;9065:6;-1:-1;;8884:49;-1:-1;8884:49;:::i;:::-;8937:19;:29;9065:6;-1:-1;;8937:29;-1:-1;8937:29;-1:-1;;;:::-;8937:29;;;;:19;:29;-1:-1;9022:18;:63;-1:-1;;;9051:5;-1:-1;;;9058:5;-1:-1;;;9065:6;-1:-1;;;;;;;;;;;;9080:4;-1:-1;;;;;;;9022:63;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;9022:63;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;9139:13;;-1:-1;;;;;:::-;;;;9369:6;-1:-1;;9194:49;-1:-1;9194:49;:::i;:::-;9246:19;:29;9369:6;-1:-1;;9246:29;-1:-1;9246:29;-1:-1;;;:::-;9246:29;;;;:19;:29;-1:-1;9331:18;:45;-1:-1;;;;;;;;;;;;9331:45;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;9331:45;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;9402:13;;-1:-1;;;;;;:::-;9430:14;;-1:-1;;;;;;:::-;9446:14;;9493:10;9479:24;:10;:24;9472:31;:::-;-1:-1;9557:18;:45;-1:-1;;;9585:2;-1:-1;;;9589:5;-1:-1;;;9596:5;-1:-1;;;;;;;;9557:45;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;9557:45;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;9657:13;;-1:-1;;;;;:::-;;;;;9726:4;-1:-1;;;9732:2;-1:-1;;;9736:1;-1:-1;;;9706:32;;:::i;:::-;;-1:-1;9706:35;;;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;9793:13;;-1:-1;;;;;:::-;;;;9883:10;9869:24;:10;:24;9862:31;:::-;-1:-1;9922:4;-1:-1;;;;;;;;9902:37;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;9991:13;;-1:-1;;;;;:::-;;;;10086:10;10072:24;:10;:24;10065:31;:::-;10212:18;:25;-1:-1;;;10235:1;-1:-1;;;;;;10212:25;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;10212:25;;10198:39;;;10292:18;:37;-1:-1;;;10323:5;-1:-1;;;;;;;;10292:37;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;10292:37;;10285:44;;;:::-;-1:-1;10359:4;-1:-1;;;10365:2;-1:-1;;;10369:8;-1:-1;;;;10339:39;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;10423:13;;-1:-1;;;;;:::-;;;;10801:16;10770:18;:27;-1:-1;;;;;;;10770:27;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;10770:27;;:47;;10763:54;:::-;10841:18;:30;-1:-1;;;12229:1;-1:-1;;;;;;;10841:30;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;;;;;;;;:::-;;;;10841:30;;10820:51;-1:-1;;;;10820:51;-1:-1;;;;;10820:51;-1:-1;;;;;10820:51;-1:-1;;;;;10820:51;-1:-1;;;;;10820:51;-1:-1;;;;;10820:51;-1:-1;;;;10820:51;10897:16;:37;10916:18;-1:-1;;10897:37;-1:-1;10897:37;-1:-1;;;:::-;10897:37;;;;10874:60;;10937:18;:70;-1:-1;;;12229:1;-1:-1;;;10969:11;:37;10983:23;-1:-1;;10969:37;-1:-1;10969:37;-1:-1;;;:::-;10969:37;;;;-1:-1;;;;;;;10937:70;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;10937:70;-1:-1;;11104:21;;:::i;:::-;;11086:39;;;-1:-1;11150:23;;:::i;:::-;;11127:46;;;11198:1;-1:-1;11175:24;11410:18;11389:39;:17;:39;-1:-1;11386:528;;:::-;11736:17;-1:-1;11722:11;:31;11756:17;-1:-1;11777:11;-1:-1;;;;;;;;:::-;;;11756:32;;:17;-1:-1;11835:18;:48;11857:11;-1:-1;11871:11;-1:-1;;;;;;;;;;;;;;:::-;;;11857:25;;-1:-1;11835:48;-1:-1;11835:48;-1:-1;;;:::-;11835:48;;;;-1:-1;;11885:4;-1:-1;;;11815:75;:::i;:::-;11913:1;11893:17;-1:-1;11386:528;:::-;:::-;11446:18;:32;11467:11;-1:-1;;;;:::-;;11446:32;-1:-1;11446:32;;;;11432:11;:46;11513:17;-1:-1;11534:11;-1:-1;;;;;;;;:::-;;;11513:32;;:17;-1:-1;11548:17;-1:-1;11569:11;-1:-1;;;;;;;;:::-;;;11548:32;;:17;-1:-1;11386:528::-;11973:23;:28;;11970:79;:::-;12025:23;-1:-1;;;28501:5;-1:-1;;11970:79;12005:44;:::i;11970:79::-;12080:11;:16;;:45;:::-;12115:10;-1:-1;12101:10;-1:-1;;12080:45;:::-;:::-;;:::-;12077:136;;:::-;12153:4;-1:-1;;12159:10;-1:-1;;12171:11;-1:-1;;;12184:10;-1:-1;;12196:16;-1:-1;;;12129:84;;:::i;:::-;;12077:136;:::-;12244:18;12216:105;12231:11;12216:105;12229:1;12216:105;;12264:7;-1:-1;;;;12273:21;;:::i;:::-;;-1:-1;;;12296:11;-1:-1;;;12309:11;-1:-1;;;;12216:105;;12332:11;-1:-1;;;12345:18;-1:-1;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;12449:14;;-1:-1;;;;;:::-;;;;12767:6;-1:-1;;12495:49;-1:-1;12495:49;:::i;:::-;12547:19;:29;12767:6;-1:-1;;12547:29;-1:-1;12547:29;-1:-1;;;:::-;12547:29;;;;:19;:29;12705:15;:37;-1:-1;;;12767:6;-1:-1;;;12737:4;-1:-1;;;;;;;12705:37;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;12705:37;;12687:55;;;12775:6;12745:37;12767:6;12745:37;12760:5;12745:37;;;;;-1:-1;12806:6;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;12863:14;;-1:-1;;;;;:::-;;;;12927:10;12913:24;:10;:24;12906:31;:::-;12939:19;:29;13363:6;-1:-1;;12939:29;-1:-1;12939:29;-1:-1;;;:::-;12939:29;;;;:19;:29;13042:15;:44;-1:-1;;;13363:6;-1:-1;;;13075:4;-1:-1;;13081:4;-1:-1;;;;;;;13042:44;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;13042:44;-1:-1;13373:0;13363:6;13341:32;13356:5;13341:32;;;;;13612:4;-1:-1;;;;;;;;:::-;;;;13629:1020;:::-;-1:-1;;;;:::-;13673:18;13655:15;;-1:-1;:::-;13629:1020::-;-1:-1;;;13629:1020;:::-;-1:-1;;;;:::-;;13655:15;;;-1:-1::-;;;;;;;:::-;13639:14;;14251:10;14237:24;:10;:24;14230:31;:::-;14288:6;-1:-1;;14271:23;14302:5;:27;;14299:77;:::-;14347:13;:29;-1:-1;;;14371:4;-1:-1;;;;;;14347:29;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;14347:29;;14339:37;:5;:37;14299:77::-;14385:14;;;;;;;:5;:14;;14382:182;:::-;14515:29;;;;;;;-1:-1;;;14539:4;-1:-1;;;;;;14515:29;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;14515:29;;:49;14547:17;-1:-1;;14515:49;-1:-1;14515:49;-1:-1;;;:::-;14515:49;;;;14507:5;:57;14382:182::-;14587:5;14570:23;14580:5;14570:23;;;;;14624:5;-1:-1;;;14631:10;-1:-1;;;14643:5;-1:-1;;;;14598:51;:::i;-1:-1::-;;13629:1020::-;-1:-1;;;;:::-;;;;;:::-;;;;;;;:::-;14695:18;;14746:10;14732:24;:10;:24;14725:31;:::-;14779:9;-1:-1;14758:18;-1:-1;14810:9;14790:30;;;;;14829:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;14895:18;14881:32;:10;:32;14874:39;:::-;14928:18;-1:-1;14915:10;-1:-1;14964:18;14948:35;;;;;14992:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;15081:10;15067:24;:10;:24;15060:31;:::-;15142:7;-1:-1;15093:16;:26;15142:7;15121:29;;;;;15159:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;15247:10;15233:24;:10;:24;15226:31;:::-;15306:7;-1:-1;15259:15;:25;15306:7;15286:28;;;;;15323:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;15623:11;;-1:-1;;;;;:::-;;;;15671:3;-1:-1;15647:21;:27;-1:-1;15705:3;-1:-1;;;15710:21;-1:-1;;;15684:48;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;15974:11;;-1:-1;;;;;:::-;;;;16015:3;-1:-1;15997:15;:21;-1:-1;16053:3;-1:-1;;;16058:15;-1:-1;;;16027:47;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;16133:11;;-1:-1;;;;;:::-;;;;16178:3;-1:-1;16156:19;:25;-1:-1;16216:3;-1:-1;;;16221:19;-1:-1;;;16190:51;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;16298:11;;-1:-1;;;;;:::-;;;;16343:3;-1:-1;16321:19;:25;-1:-1;16381:3;-1:-1;;;16386:17;-1:-1;;;16355:49;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;16462:11;;-1:-1;;;;;:::-;;;;16507:3;-1:-1;16485:19;:25;-1:-1;16545:3;-1:-1;;;16550:18;-1:-1;;;16519:50;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;16606:22;;16662:18;16648:32;:10;:32;16641:39;:::-;16712:13;-1:-1;16683:26;-1:-1;16728:41;16755:13;-1:-1;;;;16728:41;;16779:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;16820:21;;16875:26;16861:40;:10;:40;16854:47;:::-;16925:10;16904:18;-1:-1;16938:34;16961:10;-1:-1;;;16938:34;;16982:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;:::-;;;;17083:18;17069:32;:10;:32;17062:39;:::-;-1:-1;17119:21;;:::i;:::-;;17105:35;;;17149:7;:3;:7;-1:-1;17142:14;:::-;17275:6;17245:25;;;17275:6;:28;;17272:62;:::-;17317:17;-1:-1;17307:7;:27;17272:62::-;17416:17;-1:-1;17437:7;-1:-1;;;;;;;;:::-;;;17416:28;;:17;-1:-1;17461:4;-1:-1;;17467:10;-1:-1;;17479:7;-1:-1;;;;17446:41;;:::i;:::-;;-1:-1;17530:7;17490:48;17510:18;17490:48;;;;;-1:-1;17557:23;;:::i;:::-;;17540:40;;;17582:38;17602:5;-1:-1;;;17609:5;-1:-1;;;17616:3;-1:-1;;;;17582:38;;17630:4;-1:-1;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;:::-;;;;17906:10;17892:24;:10;:24;17885:31;:::-;18019:23;18124:11;18004:38;-1:-1;17997:45;:::-;18124:11;-1:-1;18047:30;:44;18124:11;18096:40;;;;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;:::-;;;;;;18236:22;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;18321:17;;-1:-1;;;;;:::-;;;;;18403:6;-1:-1;;;18411:8;-1:-1;;;;;;;18389:31;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;18495:17;;-1:-1;;;;;;:::-;18514:17;;-1:-1;;;;;:::-;;;;;18596:6;-1:-1;;;18604:8;-1:-1;;;18614:8;-1:-1;;;;18582:41;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;18683:17;;-1:-1;;;;;:::-;;;;;18767:23;;:::i;:::-;;18744:46;;;18813:6;:20;18822:11;-1:-1;;18813:20;-1:-1;;;18813:20;-1:-1;;;;;;;:::-;18813:20;;;;-1:-1;;18835:8;-1:-1;;;;;;;18799:45;;:::i;:::-;;:59;18847:11;-1:-1;;18799:59;-1:-1;;;18799:59;-1:-1;;;;;;;:::-;18799:59;;;;-1:-1;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;18930:17;;-1:-1;;;;;;:::-;18949:17;;-1:-1;;;;;:::-;;;;;19033:23;;:::i;:::-;;19010:46;;;19079:6;:20;19088:11;-1:-1;;19079:20;-1:-1;;;19079:20;-1:-1;;;;;;;:::-;19079:20;;;;-1:-1;;19101:8;-1:-1;;;19111:8;-1:-1;;;;19065:55;;:::i;:::-;;:69;19123:11;-1:-1;;19065:69;-1:-1;;;19065:69;-1:-1;;;;;;;:::-;19065:69;;;;-1:-1;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;19201:17;;-1:-1;;;;;;:::-;19221:14;;-1:-1;;;;;:::-;;;;;19302:6;-1:-1;;;19310:5;-1:-1;;;19317:8;-1:-1;;;;19287:39;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;19388:17;;-1:-1;;;;;;:::-;19407:14;;-1:-1;;;;;:::-;;;;;19488:23;;:::i;:::-;;19465:46;;;19535:6;:20;19544:11;-1:-1;;19535:20;-1:-1;;;19535:20;-1:-1;;;;;;;:::-;19535:20;;;;-1:-1;;19557:5;-1:-1;;;19564:8;-1:-1;;;;19520:53;;:::i;:::-;;:67;19576:11;-1:-1;;19520:67;-1:-1;;;19520:67;-1:-1;;;;;;;:::-;19520:67;;;;-1:-1;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;19655:11;;-1:-1;;;;;:::-;;;;;19718:10;-1:-1;;19730:2;-1:-1;;;19734:6;-1:-1;;;;19703:38;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;19792:15;;-1:-1;;;;;;:::-;19809:17;;-1:-1;;;;;:::-;;;;19888:6;-1:-1;;;19945:6;-1:-1;;;;19862:41;;:::i;:::-;;19855:48;;;:::-;-1:-1;19927:6;-1:-1;;;19935:8;-1:-1;;;19945:6;-1:-1;;;;19912:40;;:::i;:::-;;-1:-1;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;19977:16;;20103:6;-1:-1;20022:15;20038:10;20022:27;;;;;;;-1:-1;20050:7;-1:-1;;;;;;;;20022:36;;:45;20094:7;20069:41;20082:10;20069:41;20103:6;-1:-1;;;;20069:41;;20119:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;20157:16;;20225:15;20241:10;20225:27;;;;;;;-1:-1;20253:7;-1:-1;;;;;;;;20225:36;;:45;20264:6;-1:-1;;20225:45;-1:-1;20225:45;-1:-1;;;:::-;20225:45;;;;20202:68;;20311:11;-1:-1;20272:15;20288:10;20272:27;;;;;;;-1:-1;20300:7;-1:-1;;;;;;;;20272:36;;-1:-1;20349:7;20324:46;20337:10;20324:46;20358:11;-1:-1;;;;20324:46;;20379:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;33128:15;;-1:-1;;;;;;;33161:6;-1:-1;;33158:76;:::-;33187:1;-1:-1;;;;;:::-;;33158:76::-;:::-;-1:-1;;33205:29;;:::i;:::-;;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;33476:15;;33531;;;;;;;:6;:15;;33524:22;:::-;-1:-1;33573:6;-1:-1;;;33581:7;-1:-1;;;;33555:34;;:::i;:::-;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;33639:17;;-1:-1;;;;;;:::-;33659:15;;-1:-1;;;33695:18;-1:-1;33695:18;-1:-1;;;:::-;33695:18;-1:-1;;;;;33695:18;-1:-1;;;;;;;33695:18;-1:-1;;;;;:::-;;;;;33743:29;;:::i;:::-;;33733:39;34279:6;33733:39;-1:-1;33726:46;:::-;-1:-1;;;;;;;;;33835:10;-1:-1;;34279:6;-1:-1;;;;33802:52;:::i;:::-;33890:6;-1:-1;;;34279:6;-1:-1;;;;33872:33;;:::i;:::-;;33857:48;;;34082:45;33996:31;:82;-1:-1;;;;34040:10;-1:-1;;34052:6;-1:-1;;;34279:6;-1:-1;;;34068:3;-1:-1;;;;;;;;;34073:4;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33996:82;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;33996:82;;:131;;33989:138;:::-;34150:58;;;;;;;-1:-1;;;34177:10;-1:-1;;34189:4;-1:-1;;34279:6;34195:12;34204:3;-1:-1;;34195:12;-1:-1;34195:12;-1:-1;;;:::-;34195:12;;;;-1:-1;;;;;;;34150:58;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;34150:58;-1:-1;34231:3;-1:-1;;;28501:5;-1:-1;;;34211:24;:::i;:::-;34274:3;34238:65;34268:4;34256:10;34238:65;34279:6;-1:-1;;;34287:15;-1:-1;;;34238:65;;34313:4;-1:-1;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;34800:11;-1:-1;;34800:11;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;35130:27;;;;;;;:8;:27;35127:104;:::-;-1:-1;;;;;;;;;;;;:::-;;35127:104::-;:::-;-1:-1;;35208:23;;:::i;:::-;;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;35266:14;;-1:-1;;;;;;:::-;35282:16;;-1:-1;;;35336:20;-1:-1;35336:20;-1:-1;;;:::-;35336:20;-1:-1;;;;;35336:20;-1:-1;;;;;;;35336:20;36059:5;:23;;36052:30;:::-;36125:15;36471:8;36113:27;-1:-1;36106:34;:::-;36183:11;36195:5;-1:-1;36183:18;;;;;;;-1:-1;;36166:35;36234:271;-1:-1;;36245:11;-1:-1;;36245:11;;-1:-1;;;;;;;;;;;;;;;;;;;;;;36261:23;;:::i;:::-;;-1:-1;;;;;;;;;;36304:192;36317:16;-1:-1;;;;;;;;;36348:5;36340:23;-1:-1;;;;;;;;;36378:7;36370:25;-1:-1;;;;;;;;;36892:6;36402:24;-1:-1;;;;;;;;;36441:5;36433:23;-1:-1;;;;;;;;;36471:8;36463:26;-1:-1;;;;;;;;;;;;;36304:192;;36289:212;-1:-1;;36289:212;-1:-1;36289:212;;;-1:-1;;;;;;;;;;;;;36234:271;;36221:287;-1:-1;;36221:287;-1:-1;36221:287;;;36203:305;;36577:9;-1:-1;;;36571:23;:::-;-1:-1;;;36571:23;36591:2;36571:23;;;-1:-1;36563:41;-1:-1;;36563:41;-1:-1;;;;;36563:41;;;36550:54;;36633:9;-1:-1;;;36627:24;:::-;-1:-1;;;36627:24;36648:2;36627:24;;;-1:-1;36619:42;-1:-1;;36619:42;-1:-1;;;;;36619:42;;;36606:55;;36690:9;-1:-1;;;36684:23;:::-;-1:-1;;;36684:23;36705:1;36684:23;;;-1:-1;36676:41;-1:-1;;36676:41;-1:-1;;;;;36676:41;;;36663:54;;36756:5;36726:35;36736:6;-1:-1;;36726:26;36744:1;-1:-1;;36726:26;36747:1;-1:-1;;36726:26;36750:1;-1:-1;;36726:26;-1:-1;;;;;;;36726:26;-1:-1;36726:26;:35;36719:42;:::-;36892:6;-1:-1;36789:15;36805:5;-1:-1;36789:22;;;;;;;-1:-1;36812:7;-1:-1;;;;;;;;36789:31;;:40;36852:5;-1:-1;36860:1;-1:-1;;;;;;:::-;36852:9;;36831:11;36843:5;-1:-1;36831:18;;;;;;;-1:-1;36883:7;36863:36;36876:5;36863:36;;36892:6;-1:-1;;;;36863:36;;36908:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;36970:16;;37008:13;37022:7;-1:-1;37008:22;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;37062:14;;-1:-1;;;;;;:::-;37078:16;;37116:15;37132:5;-1:-1;37116:22;;;;;;;-1:-1;37139:7;-1:-1;;;;;;;;37116:31;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;37230:17;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;37303:17;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;37367:21;;:::i;:::-;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;37438:23;;:::i;:::-;;-1:-1;:::-;;;;;:::-;;;;;:::-;37538:7;:49;37549:17;:37;37569:17;-1:-1;;;;:::-;;37549:37;-1:-1;37549:37;;;;-1:-1;37538:49;-1:-1;;;37538:49;-1:-1;;;;;;;:::-;37538:49;;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;37664:7;:49;37675:17;:37;37695:17;-1:-1;;;;:::-;;37675:37;-1:-1;37675:37;;;;-1:-1;37664:49;-1:-1;;;37664:49;-1:-1;;;;;;;:::-;37664:49;;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;37747:18;;37831:17;37810:38;;-1:-1;37810:38;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;37878:18;;37940:17;37919:38;;-1:-1;37919:38;;-1:-1;37961:23;;:::i;:::-;;-1:-1;;;;:::-;;37918:66;-1:-1;37918:66;;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;38018:15;;-1:-1;;38081:29;;:::i;:::-;;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;38143:15;;-1:-1;38206:29;;:::i;:::-;;:55;-1:-1;38238:23;;:::i;:::-;;-1:-1;;;;:::-;;38206:55;-1:-1;38206:55;;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;38651:23;;:::i;:::-;;38627:47;;;38724:17;38703:38;;-1:-1;38703:38;;38914:7;-1:-1;;38699:52;-1:-1;;;38699:52;-1:-1;;;38699:52;;;;38754:11;-1:-1;;;;:::-;;38699:66;-1:-1;38699:66;;;;38676:89;;38885:11;:70;38914:7;:21;38924:11;-1:-1;;;;:::-;;38914:21;-1:-1;38914:21;;;;-1:-1;;38937:17;-1:-1;;;;38899:56;;:::i;:::-;;-1:-1;;38885:70;-1:-1;38885:70;-1:-1;;;:::-;38885:70;;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;39337:23;;:::i;:::-;;39313:47;;;39410:17;39389:38;;-1:-1;39389:38;;39429:7;:21;39439:11;-1:-1;;39429:21;-1:-1;;;39429:21;-1:-1;;;;;;;:::-;39429:21;;;;-1:-1;39385:66;-1:-1;;;39385:66;-1:-1;;;39385:66;;;;39362:89;;39572:11;:60;39601:11;-1:-1;;;39614:17;-1:-1;;;;39586:46;;:::i;:::-;;-1:-1;;39572:60;-1:-1;39572:60;-1:-1;;;:::-;39572:60;;;;39636:11;-1:-1;;39571:76;-1:-1;;;39571:76;-1:-1;;;;;;;:::-;39571:76;;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;39740:23;;:::i;:::-;;39716:47;;;-1:-1;39792:29;;:::i;:::-;;39788:66;40017:7;39824:28;;-1:-1;39824:28;;-1:-1;39788:66;-1:-1;;;39788:66;-1:-1;;;39788:66;;;;39857:11;-1:-1;;;;:::-;;39788:80;-1:-1;39788:80;;;;39765:103;;39988:11;:71;40017:7;:21;40027:11;-1:-1;;;;:::-;;40017:21;-1:-1;40017:21;;;;-1:-1;;40040:18;-1:-1;;;;40002:57;;:::i;:::-;;-1:-1;;39988:71;-1:-1;39988:71;-1:-1;;;:::-;39988:71;;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;40150:23;;:::i;:::-;;40126:47;;;-1:-1;40202:29;;:::i;:::-;;40198:57;40233:7;:21;40243:11;-1:-1;;40233:21;-1:-1;;;40233:21;-1:-1;;;;;;;:::-;40233:21;;;;-1:-1;40198:57;-1:-1;;;40198:57;-1:-1;;;40198:57;;;;40175:80;;40376:11;:61;40405:11;-1:-1;;;40418:18;-1:-1;;;;40390:47;;:::i;:::-;;-1:-1;;40376:61;-1:-1;40376:61;-1:-1;;;:::-;40376:61;;;;40441:11;-1:-1;;40375:77;-1:-1;;;40375:77;-1:-1;;;;;;;:::-;40375:77;;;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;:::-;;;;15362:200::-;15448:10;15434:24;:10;:24;15427:31;:::-;15475:15;15468:3;-1:-1;;15461:29;:::-;15539:8;15520:28;15534:3;15520:28;;;;;15558:4;-1:-1;15551:11;;-1:-1::-;34829:244::-;34885:185;34896:16;-1:-1;;;;;;;;;;;34935:13;-1:-1;;34927:33;34935:13;34917:44;-1:-1;;34917:44;-1:-1;34917:44;;;-1:-1;;;;;;;;;;;34984:11;-1:-1;;34976:31;34984:11;34966:42;-1:-1;;34966:42;-1:-1;34966:42;;;-1:-1;;;;;;;;;35021:8;-1:-1;;;;;;;;;35052:4;-1:-1;;;;;;;;;;;;;34885:185;;34872:201;-1:-1;;34872:201;-1:-1;34872:201;;;-1:-1;34865:208;;-1:-1::-;15744:175::-;15834:10;15820:24;:10;:24;15813:31;:::-;15860:16;15853:3;-1:-1;;15846:30;:::-;15897:8;15878:28;15892:3;15878:28;;;;;15915:4;-1:-1;15908:11;;-1:-1::-;8609:149::-;8690:10;8676:24;:10;:24;8669:31;:::-;8752:6;-1:-1;8709:17;-1:-1;8729:19;-1:-1;;;;;;;;:::-;;;8709:39;;-1:-1;8702:56;:::-;-1:-1::-;30606:204::-;30711:17;:37;30731:17;-1:-1;;;;:::-;;30711:37;-1:-1;30711:37;;;;30694:54;;30757:5;:10;;30750:17;:::-;30805:5;-1:-1;;30798:12;;-1:-1::-;21347:561::-;21620:147;-1:-1;;21640:38;-1:-1;;21640:38;;-1:-1;;;;;;;;;;;;;;;;;;;;;21700:8;21692:26;-1:-1;;;;;;;;;21740:6;21732:24;-1:-1;;;;;;;;;;;;;21620:147;-1:-1;;;;;;;21604:6;-1:-1;;;21586:237;:::-;-1:-1;;;;;;;21586:237::-;-1:-1;;;;;;;;;;;;21564:259;-1:-1;;;;;21564:259;-1:-1;;;;;;21564:259;;21835:8;21831:13;:17;-1:-1;21828:80::-;-1:-1;;21873:8;-1:-1;;;;;;;21858:50::-;-1:-1;;21890:18;-1:-1;;21890:18;;21858:50;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21347:561::-;-1:-1::-;20455:405::-;20535:6;:24;;20532:113;:::-;20614:13;20628:6;-1:-1;20614:21;;;;;;;-1:-1;;20639:6;-1:-1;;;;;;;;:::-;;;20614:31;;-1:-1;;20614:31;20532:113::-;20652:8;:26;;20649:155;:::-;20771:13;20785:8;-1:-1;20771:23;;;;;;;-1:-1;;20798:6;-1:-1;;;;;;;;:::-;;;20771:33;;-1:-1;;20771:33;20649:155::-;20830:8;20809:38;20822:6;20809:38;;20840:6;-1:-1;;;;20809:38;;20856:4;-1:-1;20849:11;;-1:-1::-;22023:144::-;22083:17;-1:-1;22104:6;-1:-1;;;;;;;;:::-;;;22083:27;;:17;-1:-1;;;;22143:2;-1:-1;;;22147:6;-1:-1;;;;22112:42;;:::i;:::-;;-1:-1;22163:4;-1:-1;22156:11;;-1:-1::-;23048:297::-;23240:3;:8;23237:108;:::-;23259:1;-1:-1;23252:8;;;:::o;23048:297;23237:108::o;:::-;23278:6;-1:-1;23287:21;-1:-1;;;;;;;;;;;;;;:::-;;;23278:30;;23312:33;23277:68;-1:-1;23277:68;;-1:-1;23270:75;;23048:297::-;-1:-1::-;22341:688::-;22691:6;-1:-1;;;22699:3;-1:-1;;;;22676:27;;:::i;:::-;;22660:43;;;22708:4;:9;;22705:255;:::-;22731:10;22725:16;:2;:16;;22722:238;:::-;22820:4;-1:-1;;22826:4;-1:-1;;;;22809:22;;:::i;:::-;;22802:29;;;:::-;22835:17;-1:-1;22856:4;-1:-1;;;;;;;;:::-;;;22835:25;;:17;-1:-1;22705:255;22722:238::-;:::-;22951:2;-1:-1;;;22955:4;-1:-1;;;;22940:20;;:::i;:::-;;22933:27;;;:::-;22705:255::-;22994:4;22965:51;22992:1;22965:51;22983:5;22965:51;;23000:6;-1:-1;;;23008:7;-1:-1;;;;22965:51;;23025:4;-1:-1;;23018:11;;-1:-1::-;24797:1104::-;-1:-1;25157:23;;:::i;:::-;;25134:46;;;25207:15;:41;-1:-1;25225:23;;:::i;:::-;;-1:-1;;;;:::-;;25207:41;-1:-1;25207:41;;;;25182:66;;25302:4;-1:-1;;25308:10;-1:-1;;;25320:13;-1:-1;;;25335:21;-1:-1;;;25358:21;-1:-1;;;25278:102;;:::i;:::-;;25251:129;;;25423:13;-1:-1;;;25438:19;-1:-1;;;;25408:50;;:::i;:::-;;25383:75;;;25464:13;:18;;:47;:::-;25501:10;-1:-1;25487:10;-1:-1;;25464:47;:::-;:::-;;:::-;25460:400;;:::-;25644:13;25608:86;25632:10;25626:4;25608:86;25659:13;-1:-1;;;25674:19;-1:-1;;;25608:86;;25697:17;-1:-1;25718:13;-1:-1;25734:11;-1:-1;;;;;;;;;;;;;;:::-;;;25718:27;;-1:-1;;;;;;;:::-;;;25697:48;;:17;-1:-1;;;;;;;;;;25834:10;-1:-1;;25846:13;-1:-1;;;25460:400;25801:59;:::i;25460:400::-;25870:15;-1:-1;25888:13;-1:-1;;;;;;;;:::-;;;25870:31;;-1:-1;25863:38;;-1:-1::-;30029:436::-;30101:15;30119:16;-1:-1;;;;;;;;:::-;;;30101:34;;30139:30;-1:-1;;;;;;;;;;;;;;:::-;;;30100:69;;-1:-1;30071:98;30178:43;:17;:43;-1:-1;30175:290;;:::-;30464:1;-1:-1;30457:8;;;:::o;30029:436;30175:290::o;:::-;30257:18;-1:-1;;30232:43;30291:13;:139;30325:17;-1:-1;30361:13;-1:-1;;;;;;;;;;;;;;:::-;;;30325:49;;30393:23;30325:91;-1:-1;30325:91;;-1:-1;30291:139;-1:-1;30291:139;-1:-1;;;:::-;30291:139;;;;-1:-1;30284:146;;30029:436::-;-1:-1::-;30828:108::-;30935:1;-1:-1;30928:8;;-1:-1::-;30478:110::-;-1:-1;30532:26;;:::i;:::-;;30513:45;;;30587:1;-1:-1;30580:8;;-1:-1::-;28450:1043::-;-1:-1;28533:23;;:::i;:::-;;28510:46;;;28562:6;-1:-1;28559:768;:::-;-1:-1;29243:22;;:::i;:::-;;28559:768;29269:17;-1:-1;29290:6;-1:-1;;;;;;;;:::-;;;29269:27;;:17;-1:-1;29299:18;-1:-1;29321:6;-1:-1;;;;;;;;:::-;;;29299:28;;:18;-1:-1;28559:768;:::-;:::-;-1:-1;28743:26;;:::i;:::-;;28706:63;;;28820:17;-1:-1;28841:6;-1:-1;;;;;;;;:::-;;;28820:27;;:17;-1:-1;28881:6;-1:-1;28853:25;-1:-1;28853:34;28850:138;:::-;28987:1;28966:18;-1:-1;28850:138;:::-;:::-;28917:25;-1:-1;28945:6;-1:-1;;;;;;;;:::-;;;28917:34;;28896:18;-1:-1;28850:138::-;-1:-1;29072:22;;:::i;:::-;;28559:768;:::-;29413:80;29433:11;-1:-1;;;;29446:23;;:::i;:::-;;-1:-1;;;;29471:21;;:::i;:::-;;-1:-1;;;;29413:80;;-1:-1::-;23358:1427::-;23615:6;-1:-1;;23591:30;23623:21;;;;23690:18;:32;-1:-1;;;23719:2;-1:-1;;;;;;;23690:32;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;23690:32;;23668:54;-1:-1;23669:7;-1:-1;;23668:54;-1:-1;;23678:8;-1:-1;23668:54;23728:6;:11;23725:204;:::-;23813:8;-1:-1;23798:12;:23;23725:204;:::-;:::-;23828:6;:28;;23725:204;23823:106::-;23911:7;-1:-1;23921:8;-1:-1;;;;;;;;:::-;;;23911:18;;23896:12;:33;23725:204::-;24054:8;-1:-1;24039:12;-1:-1;24039:23;24036:319;:::-;24256:12;-1:-1;24271:8;-1:-1;;;;;;;;:::-;;;24256:23;;24246:7;:33;24325:19;-1:-1;24348:7;-1:-1;;;;;;;;:::-;;;24325:30;;:19;-1:-1;24036:319;:::-;:::-;24147:12;-1:-1;24136:8;:23;24172:1;24162:7;:11;24036:319::-;24444:18;:45;-1:-1;;;24472:2;-1:-1;;;24476:12;-1:-1;;;;;;;;24444:45;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;24444:45;;24437:52;;;:::-;24495:8;:13;;24492:264;:::-;24572:8;-1:-1;;;24582:5;-1:-1;;;24552:36;:::i;:::-;24747:8;-1:-1;;24720:36;-1:-1;24720:36;;:::i;:::-;;24704:52;;;24492:264::-;24767:7;-1:-1;;;24776:8;-1:-1;;;;;24759:26;-1:-1::-;25914:1353::-;26121:16;-1:-1;26111:6;-1:-1;;26104:33;:::-;26194:15;-1:-1;26164:17;-1:-1;26184:6;-1:-1;;;;;;;;:::-;;;26164:26;;-1:-1;26157:52;:::-;-1:-1;26260:23;;:::i;:::-;;26237:46;;;26303:6;:20;26312:11;-1:-1;;;;:::-;;26303:20;-1:-1;26303:20;;;;26285:38;;26329:17;:22;;26326:120;:::-;26379:8;-1:-1;;;26389:10;-1:-1;;;26401:6;-1:-1;;;26409:17;-1:-1;;;26428:17;-1:-1;;;26355:91;;:::i;:::-;;26326:120;:::-;26452:8;:26;;:54;:::-;26483:18;:23;;;26452:54;:::-;:::-;;:::-;26449:152;;:::-;26534:8;-1:-1;;;26544:8;-1:-1;;;26554:6;-1:-1;;;26562:18;-1:-1;;;26582:18;-1:-1;;;26510:91;;:::i;:::-;;26449:152;:::-;26900:17;-1:-1;26921:6;-1:-1;;;;;;;;:::-;;;26900:27;;:17;-1:-1;26940:8;-1:-1;;;26950:6;-1:-1;;;;26929:28;;:::i;:::-;;-1:-1;26967:52;;;;;;;-1:-1;;;26994:10;-1:-1;;27006:4;-1:-1;;27012:6;-1:-1;;;;;;;;26967:52;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;26967:52;;26960:59;;;:::-;27088:8;27068:49;27080:6;27068:49;;27098:10;-1:-1;;27110:6;-1:-1;;;;27068:49;;27171:80;27191:11;-1:-1;;;;27204:23;;:::i;:::-;;-1:-1;;;;27229:21;;:::i;:::-;;-1:-1;;;;27171:80;;27261:6;-1:-1;;27254:13;;-1:-1::-;22179:150::-;22242:17;-1:-1;22263:6;-1:-1;;;;;;;;:::-;;;22242:27;;:17;-1:-1;22286:5;-1:-1;;;;;;22309:6;-1:-1;;;;22271:45;;:::i;:::-;;-1:-1;22325:4;-1:-1;22318:11;;-1:-1::-;20872:463::-;20959:6;-1:-1;20945:10;-1:-1;20942:379;:::-;20990:15;21006:6;-1:-1;20990:23;;;;;;;-1:-1;21014:10;-1:-1;;;;;;;20990:35;;-1:-1;;20969:56;21091:18;21079:9;:30;-1:-1;20942:379;21075:246::-;21127:9;-1:-1;21139:7;-1:-1;;;;;;;;:::-;;;21127:19;;21115:9;:31;21188:9;-1:-1;21150:15;21166:6;-1:-1;21150:23;;;;;;;-1:-1;21174:10;-1:-1;;;;;;;21150:35;;-1:-1;21299:10;21291:6;21278:43;;21311:9;-1:-1;;;;21278:43;;20942:379::-;21331:4;-1:-1;21324:11;;-1:-1::-;30954:127::-;31042:17;-1:-1;31062:19;-1:-1;;;;;;;;:::-;;;31042:39;;-1:-1;31035:46;;-1:-1::-;27279:1158::-;-1:-1;27380:29;;:::i;:::-;;27370:39;:6;:39;-1:-1;27363:46;:::-;27475:5;-1:-1;;;27482:6;-1:-1;;;;27449:40;;:::i;:::-;;27442:47;;;:::-;-1:-1;27545:23;;:::i;:::-;;27522:46;;;27588:6;:20;27597:11;-1:-1;;;;:::-;;27588:20;-1:-1;27588:20;;;;27570:38;;27927:6;-1:-1;;;27935:18;-1:-1;;;;27912:42;;:::i;:::-;;27888:66;;;27959:18;:23;;27956:137;:::-;28051:12;28011:82;28039:10;28011:82;28029:8;28011:82;;28065:6;-1:-1;;;28074:18;-1:-1;;;28011:82;;27956:137::-;28131:17;-1:-1;28152:6;-1:-1;;;;;;;;:::-;;;28131:27;;:17;-1:-1;28171:8;-1:-1;;;28181:6;-1:-1;28190:12;-1:-1;;;;;;;;:::-;;;28181:21;;-1:-1;;;28160:43;;:::i;:::-;;-1:-1;;;;;;;;;;28274:8;-1:-1;;;28284:6;-1:-1;;;;28241:50;:::i;:::-;28322:8;28294:57;28315:5;28294:57;28307:6;28294:57;;28332:10;-1:-1;;28344:6;-1:-1;;;;28294:57;;28353:68;28373:11;-1:-1;;;28386:11;-1:-1;;;;28399:21;;:::i;:::-;;-1:-1;;;;28353:68;;28431:6;-1:-1;;28424:13;;-1:-1::-;;29574:26;;:::i;:::-;;-1:-1;;29554:46;-1:-1;29554:46;-1:-1;;;:::-;29554:46;;;;-1:-1;29547:53;;-1:-1::-;;29682:26;;:::i;:::-;;-1:-1;;29662:46;-1:-1;29662:46;-1:-1;;;:::-;29662:46;;;;-1:-1;29712:23;;:::i;:::-;;-1:-1;;;;:::-;;29661:74;-1:-1;29661:74;;;;-1:-1;29654:81;;-1:-1::-;31699:70;:::-;31767:2;-1:-1;31760:9;;;:::o;31214:555;31699:70::o;:::-;-1:-1;;31728:14;-1:-1;;;;;31720:30;;-1:-1;;;:::-;;31713:37;;31214:555::-;-1:-1::-;33252:193::-;33320:15;:20;33317:128;:::-;33351:1;-1:-1;33344:8;;;:::o;33252:193;33317:128::o;:::-;33388:7;33384:43;-1:-1;33397:29;;:::i;:::-;;-1:-1;;33384:43;-1:-1;;;33384:43;-1:-1;;;33384:43;;;;-1:-1;;33429:15;-1:-1;;;;;;;;;;;;33369:76;;:::i;:::-;;-1:-1;;33362:83;;33252:193::-;-1:-1::-;:::-;;;","userdoc":{"methods":{"apiVersion()":{"notice":"Used to track the deployed version of this contract. In practice you can use this version number to compare with Debt DAO's GitHub and determine which version of the source matches this deployed contract."},"impair(address,bytes32)":{"notice":"- markdown the value of an insolvent loan reducing vault share price over time - Callable by anyone to prevent delegate from preventing numba go down"},"maxDeposit(address)":{"notice":"add assets"},"maxRedeem(address)":{"notice":"remove assets"},"maxWithdraw(address)":{"notice":"remove shares"},"permit(address,address,uint256,uint256,bytes)":{"notice":"Approves spender by owner's signature to expend owner's tokens. See https://eips.ethereum.org/EIPS/eip-2612. Stolen from Yearn Vault code https://github.com/yearn/yearn-vaults/blob/74364b2c33bd0ee009ece975c157f065b592eeaf/contracts/Vault.vy#L765-L806"},"previewDeposit(uint256)":{"notice":"Returns max amount that can be deposited which is min(maxDeposit, userRequested) So if assets > maxDeposit then it returns maxDeposit"},"previewMint(uint256)":{"notice":"Returns max amount that can be deposited which is min(maxDeposit, userRequested) So if assets > maxDeposit then it returns maxDeposit"},"sweep(address)":{"notice":"Removes tokens from this Vault that are not the type of token managed by this Vault. This may be used in case of accidentally sending the wrong kind of token to this Vault. Tokens will be sent to `governance`. This will fail if an attempt is made to sweep the tokens that this Vault manages. This may only be called by governance."},"update_profit_degredation(uint256)":{"notice":"Changes the locked profit degradation."}}}},"PoolFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"pool","type":"address"},{"indexed":true,"name":"delegate","type":"address"},{"indexed":true,"name":"token","type":"address"}],"name":"DeployPool","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"bond_manager","type":"address"},{"indexed":true,"name":"bond_token","type":"address"}],"name":"DeployPoolChikkinBondz","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"bond_crv_pool","type":"address"},{"indexed":true,"name":"meta_crv_pool","type":"address"}],"name":"DeployPoolCrvAMMs","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"new_list","type":"address[]"}],"name":"ShitcoinListChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"new_list","type":"address[]"}],"name":"EthListChanged","type":"event"},{"inputs":[{"name":"god_","type":"address"},{"name":"pool_impl","type":"address"},{"name":"bond_token_impl","type":"address"},{"name":"chicken_impl","type":"address"},{"name":"oracle_","type":"address"},{"name":"eth_coins","type":"address[]"},{"name":"usd_coins","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"name":"_owner","type":"address"},{"name":"_token","type":"address"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_performance_fee","type":"uint16"},{"name":"_deposit_fee","type":"uint16"},{"name":"_initial_deposit","type":"uint256"}],"name":"deploy_pool","outputs":[{"name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"shitcoin_list","type":"address[]"}],"name":"update_shitcoins","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"eth_list","type":"address[]"}],"name":"update_eth_tokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"arg0","type":"uint256"}],"name":"ETHLIKE_COINS","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"uint256"}],"name":"USD_SHITCOINS","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"god","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pool_implementation","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bond_token_implementation","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"chicken_bond_implementation","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"}],"contractName":"PoolFactory","deploymentBytecode":{"bytecode":""},"dev_messages":{},"devdoc":{"methods":{"__init__(address,address,address,address,address,address[],address[])":{"details":"MUST ensure `pool_imoplementation` was deployed properly. MUST follow instructions at https://github.com/vyperlang/vyper/blob/2adc34ffd3bee8b6dee90f552bbd9bb844509e19/tests/base_conftest.py#L130-L160","params":{"chicken_impl":"Debt DAO Pool Chicken Bond Factory contract to create bonds for credit pools","pool_impl":"Debt DAO Pool logic"}}}},"pcmap":{"1001":[296,11,296,28],"1002":[296,11,296,21],"1003":[296,11,296,28],"1004":[296,4,296,28],"1007":[296,4,296,28],"1008":[297,27,297,40],"1032":[297,4,297,41],"1033":[297,4,297,41],"1037":[297,4,297,41],"1040":[297,4,297,41],"1068":[305,22,305,70],"1071":[305,22,305,70],"1078":[305,22,305,70],"108":[106,50,106,67],"1110":[305,22,305,70],"114":[106,69,106,88],"1145":[305,22,305,70],"1146":[306,11,306,28],"1147":[306,11,306,28],"1148":[306,11,306,28],"1151":[306,11,306,28],"1153":[306,11,306,28],"1154":[306,11,306,28],"1156":[306,11,306,28],"1157":[306,11,306,21],"1158":[306,11,306,28],"1159":[306,4,306,28],"1162":[306,4,306,28],"1163":[307,28,307,36],"117":[106,69,106,88],"1187":[307,4,307,37],"1188":[307,4,307,37],"1192":[307,4,307,37],"1195":[307,4,307,37],"124":[106,69,106,88],"133":[106,69,106,88],"143":[106,69,106,88],"1491":[310,0,312,32],"1492":[311,25,311,33],"1494":[311,4,311,33],"1495":[311,4,311,33],"1496":[311,4,311,22],"1499":[311,4,311,33],"155":[107,16,107,40],"1555":[311,4,311,33],"1556":[312,4,312,32],"158":[107,16,107,40],"1603":[312,23,312,31],"1677":[312,4,312,32],"1680":[312,4,312,32],"1682":[300,0,302,42],"1683":[301,25,301,38],"1685":[301,4,301,38],"1686":[301,4,301,38],"1687":[301,4,301,22],"1690":[301,4,301,38],"170":[107,42,107,62],"173":[107,42,107,62],"174":[108,11,108,41],"1746":[301,4,301,38],"1747":[302,4,302,42],"175":[108,11,108,41],"176":[108,11,108,41],"179":[108,11,108,41],"1794":[302,28,302,41],"181":[108,11,108,41],"182":[108,11,108,41],"184":[108,11,108,41],"1868":[302,4,302,42],"1871":[302,4,302,42],"1873":[280,0,292,25],"1874":[286,7,286,17],"1876":[286,7,286,39],"1884":[286,21,286,39],"1908":[286,7,286,39],"194":[108,34,108,40],"1940":[286,7,286,39],"1941":[286,7,286,39],"1942":[286,4,287,32],"1943":[286,4,287,32],"1946":[286,4,287,32],"1947":[287,15,287,32],"1969":[287,8,287,32],"1970":[287,8,287,32],"1971":[287,8,287,32],"1974":[287,8,287,32],"1975":[286,4,287,32],"1976":[289,7,289,17],"1978":[289,7,289,39],"1986":[289,21,289,39],"2010":[289,7,289,39],"2042":[289,7,289,39],"2043":[289,7,289,39],"2044":[289,4,290,32],"2045":[289,4,290,32],"2048":[289,4,290,32],"2049":[290,15,290,32],"2071":[290,8,290,32],"2072":[290,8,290,32],"2073":[290,8,290,32],"2076":[290,8,290,32],"2077":[289,4,290,32],"2081":[292,4,292,25],"2082":[292,4,292,25],"2083":[280,0,292,25],"2085":[212,0,244,52],"2086":[221,60,221,70],"2091":[221,25,221,71],"2095":[221,25,221,71],"2098":[221,25,221,71],"2101":[221,25,221,71],"2102":[221,25,221,71],"2103":[221,25,221,71],"2106":[221,4,221,71],"2107":[221,4,221,71],"2109":[221,4,221,71],"2110":[223,7,223,16],"2112":[223,7,223,34],"2113":[223,4,244,52],"2116":[223,4,244,52],"2134":[225,8,225,30],"214":[108,11,108,41],"2152":[226,8,226,32],"2161":[227,28,227,144],"2164":[227,75,227,84],"2181":[227,86,227,91],"2248":[227,93,227,100],"2305":[227,102,227,111],"2312":[227,113,227,126],"2318":[227,128,227,143],"2326":[227,28,227,144],"2340":[227,28,227,58],"2363":[227,28,227,144],"2366":[227,28,227,144],"2377":[227,28,227,144],"2405":[227,8,227,144],"2406":[227,8,227,144],"2409":[227,8,227,144],"2410":[229,8,229,55],"2412":[229,30,229,38],"2415":[229,8,229,55],"2416":[229,8,229,55],"243":[108,11,108,41],"244":[108,11,108,41],"2449":[229,8,229,55],"245":[108,11,108,46],"2451":[229,8,229,55],"2454":[229,8,229,55],"2455":[231,16,231,24],"246":[108,11,108,46],"247":[108,4,108,46],"2475":[231,8,231,57],"2476":[231,8,231,57],"2479":[231,8,231,57],"2480":[212,0,244,52],"2483":[223,4,244,52],"2484":[223,4,244,52],"250":[108,4,108,46],"2502":[233,8,233,30],"251":[111,21,111,37],"2520":[234,8,234,32],"2529":[236,33,236,149],"2532":[236,80,236,89],"2549":[236,91,236,96],"258":[110,4,117,6],"259":[112,17,112,29],"2616":[236,98,236,105],"266":[110,4,117,6],"267":[113,18,113,19],"2673":[236,107,236,116],"2680":[236,118,236,131],"2686":[236,133,236,148],"2694":[236,33,236,149],"2708":[236,33,236,63],"272":[110,4,117,6],"273":[114,15,114,32],"2731":[236,33,236,149],"2734":[236,33,236,149],"2745":[236,33,236,149],"2773":[236,8,236,149],"2774":[236,8,236,149],"2777":[236,8,236,149],"278":[110,4,117,6],"2786":[238,29,238,150],"2789":[238,76,238,89],"279":[115,19,115,20],"2807":[238,91,238,96],"284":[110,4,117,6],"285":[116,18,116,38],"2874":[238,98,238,105],"290":[110,4,117,6],"291":[120,20,125,5],"292":[120,20,125,5],"293":[120,20,125,5],"2931":[238,107,238,117],"2938":[238,119,238,132],"2944":[238,134,238,149],"2952":[238,29,238,150],"296":[120,20,125,5],"2966":[238,29,238,59],"298":[120,20,125,5],"2989":[238,29,238,150],"299":[120,20,125,5],"2992":[238,29,238,150],"3003":[238,29,238,150],"301":[120,20,125,5],"3031":[238,8,238,150],"3032":[238,8,238,150],"3035":[238,8,238,150],"3036":[242,41,242,54],"3039":[242,8,242,55],"3040":[242,30,242,39],"3043":[242,8,242,55],"3044":[242,8,242,55],"305":[122,8,122,14],"3077":[242,8,242,55],"3079":[242,8,242,55],"3082":[242,8,242,55],"3083":[244,16,244,25],"3088":[244,27,244,40],"3097":[244,42,244,51],"3106":[244,8,244,52],"3107":[212,0,244,52],"3109":[183,0,209,40],"3110":[193,31,197,5],"3111":[193,31,197,5],"3112":[193,31,197,5],"3115":[193,31,197,5],"3117":[193,31,197,5],"3118":[193,31,197,5],"3120":[193,31,197,5],"3121":[193,31,197,5],"3133":[195,20,195,21],"3136":[193,31,197,5],"3138":[196,35,196,39],"3148":[196,23,196,40],"3149":[196,23,196,40],"3151":[196,13,196,41],"3155":[196,13,196,41],"3157":[196,13,196,41],"3158":[196,13,196,41],"3159":[196,13,196,41],"3173":[193,31,197,5],"3174":[193,31,197,5],"3175":[193,31,197,5],"3176":[193,31,197,5],"3177":[193,4,197,5],"3179":[193,4,197,5],"3180":[200,26,205,5],"3181":[200,26,205,5],"3182":[200,26,205,5],"3185":[200,26,205,5],"3187":[200,26,205,5],"3188":[200,26,205,5],"3190":[200,26,205,5],"3191":[202,8,202,23],"3208":[200,26,205,5],"321":[122,16,122,22],"3220":[203,20,203,21],"3223":[200,26,205,5],"3235":[204,35,204,39],"3245":[204,23,204,40],"3246":[204,23,204,40],"3248":[204,13,204,41],"3252":[204,13,204,41],"3254":[204,13,204,41],"3255":[204,13,204,41],"3256":[204,13,204,41],"3274":[200,26,205,5],"3275":[200,26,205,5],"3276":[200,26,205,5],"3277":[200,26,205,5],"3278":[200,4,205,5],"3280":[200,4,205,5],"3281":[207,48,207,58],"3283":[207,4,207,59],"3284":[207,31,207,46],"3286":[207,4,207,59],"3287":[207,4,207,59],"3320":[207,4,207,59],"3322":[207,4,207,59],"3325":[207,4,207,59],"3326":[209,12,209,27],"3331":[209,29,209,39],"3339":[209,4,209,40],"3341":[163,0,176,58],"3342":[166,8,170,9],"3348":[167,12,167,50],"3385":[167,12,167,50],"3386":[167,12,167,50],"3412":[168,20,168,28],"3414":[168,12,168,38],"3427":[169,20,169,26],"3429":[169,12,169,36],"3450":[166,8,170,9],"3466":[165,8,165,13],"347":[122,24,122,29],"3471":[164,26,173,5],"3474":[164,26,173,5],"3485":[164,26,173,5],"3504":[164,4,173,5],"3512":[164,4,173,5],"3520":[164,4,173,5],"3521":[164,4,173,5],"3522":[175,11,175,19],"3524":[175,7,175,20],"3525":[175,7,175,24],"3529":[175,4,176,58],"3533":[176,23,176,31],"3546":[176,8,176,58],"3551":[176,40,176,58],"3588":[176,40,176,58],"3589":[176,40,176,58],"3591":[176,8,176,58],"3641":[163,0,176,58],"3643":[151,0,160,66],"3644":[152,74,152,85],"3650":[152,39,152,86],"3654":[152,39,152,86],"3657":[152,39,152,86],"3660":[152,39,152,86],"3661":[152,39,152,86],"3662":[152,39,152,86],"3665":[152,18,152,86],"3666":[152,18,152,35],"3687":[152,18,152,86],"3688":[152,4,152,86],"3691":[152,4,152,86],"3692":[153,30,153,46],"3695":[153,30,153,105],"3696":[153,64,153,83],"3699":[153,64,153,94],"3721":[153,64,153,94],"3766":[153,56,153,104],"3767":[153,56,153,104],"3768":[153,50,153,104],"3771":[153,50,153,104],"3777":[153,50,153,104],"3778":[153,50,153,52],"3781":[153,50,153,104],"3782":[153,50,153,104],"3790":[153,30,153,105],"3792":[153,30,153,105],"3793":[153,30,153,105],"3794":[153,30,153,105],"3795":[153,30,153,105],"3796":[153,4,153,105],"3799":[153,4,153,105],"3800":[155,7,155,12],"3804":[155,4,158,55],"3807":[155,4,158,55],"3808":[158,33,158,55],"3810":[158,15,158,29],"3815":[158,8,158,55],"3818":[158,8,158,55],"3819":[155,4,158,55],"3822":[155,4,158,55],"3823":[155,4,158,55],"3824":[156,33,156,55],"3828":[156,15,156,29],"3833":[156,8,156,55],"3836":[156,8,156,55],"3837":[155,4,158,55],"3838":[160,30,160,41],"3845":[160,43,160,47],"3849":[160,49,160,65],"3859":[160,4,160,66],"3862":[160,4,160,66],"3863":[151,0,160,66],"3865":[247,0,267,59],"3874":[259,7,259,15],"3876":[259,7,259,33],"3877":[259,4,267,59],"3880":[259,4,267,59],"3881":[261,32,261,47],"3884":[261,32,261,51],"3885":[261,50,261,51],"3887":[261,32,261,51],"3889":[261,32,261,51],"3890":[261,32,261,51],"3891":[261,8,261,51],"3894":[261,8,261,51],"3898":[259,4,267,59],"3899":[259,4,267,59],"3900":[266,32,266,47],"3903":[266,32,266,51],"3904":[266,32,266,51],"3908":[266,32,266,51],"3909":[266,32,266,51],"3910":[266,8,266,51],"3913":[266,8,266,51],"3914":[267,36,267,48],"3917":[267,36,267,53],"3918":[267,51,267,53],"3920":[267,36,267,53],"3922":[267,36,267,53],"3923":[267,51,267,53],"3932":[267,36,267,53],"3933":[267,36,267,53],"3934":[267,56,267,59],"3936":[267,36,267,59],"3938":[267,36,267,59],"3939":[267,36,267,59],"3940":[267,8,267,59],"3943":[267,8,267,59],"3944":[247,0,267,59],"419":[122,31,122,38],"524":[120,20,125,5],"536":[123,20,123,21],"539":[120,20,125,5],"55":[106,16,106,31],"556":[124,35,124,39],"561":[124,41,124,51],"566":[124,53,124,59],"579":[124,23,124,60],"58":[106,16,106,31],"580":[124,23,124,60],"583":[124,13,124,61],"587":[124,13,124,61],"589":[124,13,124,61],"590":[124,13,124,61],"591":[124,13,124,61],"609":[120,20,125,5],"610":[120,20,125,5],"611":[120,20,125,5],"612":[120,20,125,5],"613":[120,4,125,5],"616":[120,4,125,5],"617":[127,33,127,39],"620":[127,4,127,40],"621":[127,25,127,31],"624":[127,4,127,40],"625":[127,19,127,23],"628":[127,4,127,40],"629":[127,4,127,40],"662":[127,4,127,40],"664":[127,4,127,40],"667":[127,4,127,40],"668":[145,21,145,37],"670":[129,7,129,28],"671":[129,7,129,28],"672":[129,4,146,9],"675":[129,4,146,9],"676":[130,37,130,43],"684":[145,21,145,37],"694":[130,8,130,62],"697":[130,8,130,62],"698":[130,8,130,62],"699":[132,8,132,41],"70":[106,33,106,48],"701":[132,8,132,41],"702":[132,8,132,41],"705":[132,8,132,41],"706":[134,57,134,61],"713":[134,63,134,69],"723":[134,32,134,70],"726":[134,32,134,70],"729":[134,32,134,70],"73":[106,33,106,48],"730":[134,32,134,70],"731":[134,32,134,70],"734":[134,8,134,70],"736":[134,9,134,16],"742":[134,8,134,70],"745":[134,18,134,28],"749":[134,8,134,70],"750":[136,8,136,47],"752":[136,8,136,47],"753":[136,8,136,47],"756":[136,8,136,47],"757":[140,79,140,85],"764":[140,87,140,91],"771":[140,93,140,103],"781":[140,56,140,104],"784":[140,56,140,104],"787":[140,56,140,104],"788":[140,56,140,104],"789":[140,56,140,104],"79":[106,50,106,67],"792":[140,8,140,104],"794":[140,9,140,22],"800":[140,8,140,104],"803":[140,24,140,37],"809":[140,8,140,104],"812":[140,39,140,52],"816":[140,8,140,104],"817":[143,12,143,18],"82":[106,50,106,67],"824":[143,20,143,24],"831":[143,26,143,36],"838":[144,12,144,25],"845":[144,27,144,40],"852":[144,42,144,55],"859":[145,12,145,19],"867":[145,21,145,37],"874":[129,4,146,9],"877":[142,8,146,9],"880":[142,8,146,9],"881":[129,4,146,9],"884":[148,11,148,15],"89":[106,50,106,67],"913":[295,21,295,74],"916":[295,21,295,74],"923":[295,21,295,74],"955":[295,21,295,74],"98":[106,50,106,67],"990":[295,21,295,74],"991":[296,11,296,28],"992":[296,11,296,28],"993":[296,11,296,28],"996":[296,11,296,28],"998":[296,11,296,28],"999":[296,11,296,28]},"runtimeBytecode":{"bytecode":"0x6003361161000c576105cd565b60003560e01c34610f6a5763fc32c5ec8118610378576101243610610f6a576004358060a01c610f6a57610340526024358060a01c610f6a57610360526044356004016032813511610f6a57803580610380526020820181816103a0375050506064356004016012813511610f6a578035806103e052602082018035610400525050506084358060101c610f6a576104205260a4358060101c610f6a57610440526020610f7c600039600051636849a3ba6104605261036051610480526020610460602461047c6000855af16100e7573d600060003e3d6000fd5b60203d10610f6a5761046090505115610f6a576104205161046052610440516104805260006104a05260056104c05260006104e0526014610500526020610fbc600039600051610140610340516105c0526105c05161060052610360516105e0526105e051610620528061064052806106000161038051808252602082018181836103a060045afa5050508051806020830101601f82600003163682375050601f19601f82516020010116905081019050806106605280610600016103e0518082526020820161040051815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506104605161068052610480516106a0526104a0516106c0526104c0516106e0526104e051610700526105005161072052813b5960018212610f6a5781600082863c81810183818561060060045afa505030610560523361058052610360516105a052606061054052610540805160208201209050838301826000f58015610f6a579050905090509050610520526103605161034051610520517f95be4d825ad88f5957b039665c385990068106fa6410f7394eb3689798bb68016000610540a460c4351561037157610360516101e05260c435610200526102ba610e3b565b6040366105403761052051604052610360516060526102da610580610c25565b6105808051610540526020810151610560525060603661058037610360516080526105205160a0526105605160c0526103146105e0610825565b6105e080516105805260208101516105a05260408101516105c052506103605160405261052051606052610560516080526105805160a0526105a05160c0526105c05160e052610540516101005260c43561012052610371610f19565b6020610520f35b6363dc6d5081186104135760443610610f6a576004356004016005813511610f6a578035806101e05260008160058111610f6a5780156103da57905b8060051b6020850101358060a01c610f6a578160051b61020001526001018181186103b4575b505050506020610f9c6000396000513318610f6a576101e051806040528060051b8060608261020060045afa505050610411610692565b005b63f6e846ed81186104ae5760443610610f6a576004356004016005813511610f6a578035806101e05260008160058111610f6a57801561047557905b8060051b6020850101358060a01c610f6a578160051b610200015260010181811861044f575b505050506020610f9c6000396000513318610f6a576101e051806040528060051b8060608261020060045afa5050506104ac6105d3565b005b63583b598181186104db5760243610610f6a57600435600054811015610f6a576001015460405260206040f35b636f24da3481186105085760243610610f6a57600435600654811015610f6a576007015460405260206040f35b637dc0d1d0811861052f5760043610610f6a576020610f7c60003960005160405260206040f35b63ba56f6ee81186105565760043610610f6a576020610f9c60003960005160405260206040f35b632489a2c3811861057d5760043610610f6a576020610fbc60003960005160405260206040f35b632c42b9db81186105a45760043610610f6a576020610fdc60003960005160405260206040f35b63d96fcb1b81186105cb5760043610610f6a576020610ffc60003960005160405260206040f35b505b60006000fd5b604051806000558060051b600081601f0160051c60058111610f6a57801561060f57905b8060051b6060015181600101556001018181186105f7575b505050507f1541c1cec6ec16f881aed103e553cd722857ac0b88d051d3dc1a8c597e13ddc160208061010052806101000160006040518083528060051b60008260058111610f6a57801561067c57905b8060051b606001518160051b60208801015260010181811861065f575b50508201602001915050905081019050610100a1565b604051806006558060051b600081601f0160051c60058111610f6a5780156106ce57905b8060051b6060015181600701556001018181186106b6575b505050507faf89bca8e5823d9d021bb5c2d78890ecb698e6182f9923ebbb41e019bd682efb60208061010052806101000160006040518083528060051b60008260058111610f6a57801561073b57905b8060051b606001518160051b60208801015260010181811861071e575b50508201602001915050905081019050610100a1565b6040516000606052600060065460058111610f6a57801561078e57905b8060070154831861078357600160605261078e565b60010181811861076e575b50506060519050156107b75773a5407eae9ba41422680e2e00537571bcc53efbfd815250610823565b6040516000606052600060005460058111610f6a5780156107f457905b806001015483186107e95760016060526107f4565b6001018181186107d4575b505060605190501561081d5773c5424b857f758e906013f3555dad202e4bdb4567815250610823565b60008152505b565b608051604052610836610100610751565b6101005160e05260e0516109b45760006101405261014080518061010052505060006101805261018080518061014052505063e339eb4f6101a05260c060e0516101c052806101e052806101c001610100518082526020820161012051815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190508061020052806101c001610140518082526020820161016051815250508051806020830101601f82600003163682375050601f19601f8251602001011690508101905060a0516102205260066102405262e4e1c0610260525060206101a06101446101bc600073b9fc157394af804a3578134a6585c0dc9cc990d45af1610949573d600060003e3d6000fd5b60203d10610f6a576101a0518060a01c610f6a576103005261030051610180526000610180517f8cf28e88d736c6d7166b4df61312a67a788be4da2f6070459e95e31002cc3a4f60006101a0a3610180518152600060208201526000604082015250610c2356610c23565b60006101405261014080518061010052505060006101805261018080518061014052505063e339eb4f6101a05260c060e0516101c052806101e052806101c001610100518082526020820161012051815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190508061020052806101c001610140518082526020820161016051815250508051806020830101601f82600003163682375050601f19601f8251602001011690508101905060a0516102205260066102405262e4e1c0610260525060206101a06101446101bc600073b9fc157394af804a3578134a6585c0dc9cc990d45af1610ab9573d600060003e3d6000fd5b60203d10610f6a576101a0518060a01c610f6a5761030052610300516101805263e339eb4f6101c05260c0610180516101e0528061020052806101e001610100518082526020820161012051815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190508061022052806101e001610140518082526020820161016051815250508051806020830101601f82600003163682375050601f19601f8251602001011690508101905060c0516102405260066102605262e4e1c0610280525060206101c06101446101dc600073b9fc157394af804a3578134a6585c0dc9cc990d45af1610bbb573d600060003e3d6000fd5b60203d10610f6a576101c0518060a01c610f6a5761032052610320516101a052610180516101a0517f8cf28e88d736c6d7166b4df61312a67a788be4da2f6070459e95e31002cc3a4f60006101c0a360e05181526101805160208201526101a0516040820152505b565b6020610ffc600039600051803b5960018212610f6a5781600082853c60405160c052602060a05260a080516020820120905082826000f58015610f6a579050905090506080526020610fdc6000396000516080516101005261010051610120526020813b5960018212610f6a5781600082863c8181016101205181525060405160e052602060c05260c0805160208201209050838301826000f58015610f6a57905090509050905060a05260a0516080517f913b8314088ec69c61dab6933e12707f76cf7a1bf8d41b7d896043b60bf5ed116000610100a3608051815260a051602082015250565b6000600460e0527fa9059cbb000000000000000000000000000000000000000000000000000000006101005260e08051602082018361014001815181525050808301925050506060518161014001526020810190506080518161014001526020810190508061012052610120505060206101c06101205161014060006040515af1610d9d573d600060003e3d6000fd5b3d602081183d60201002186101a0526101a080518060a05260208201805160c05250505060a05115610e395760c05160a05160200360031b1c610e3957601060e0527f5472616e73666572206661696c656421000000000000000000000000000000006101005260e05060e0518061010001601f826000031636823750506308c379a060a052602060c052601f19601f60e051011660440160bcfd5b565b6101e051604052610e4d610240610751565b6102405173a5407eae9ba41422680e2e00537571bcc53efbfd1461022052610200516101e05163313ce567610260526020610260600461027c6000855af1610e9a573d600060003e3d6000fd5b60203d10610f6a57610260518060081c610f6a576102a0526102a0905051604d8111610f6a5780600a0a90508015610f6a57808204905090506102405261022051610eef5760646102405110610f6a57610efd565b620186a06102405110610f6a575b6101e0516040523060605261020051608052610f17610d0d565b565b610180366101403760c051610f3b57610120516003810490506102c052610f68565b610120518060011c90506102c0526102c05160148102816014820418610f6a5790506064810490506102e0525b565b600080fda165767970657283000307000b"},"sourceId":"PoolFactory.vy","sourcemap":"-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3630:15;;-1:-1;;;;;;:::-;3647:15;;-1:-1;;;3664:17;-1:-1;3664:17;-1:-1;;;:::-;3664:17;-1:-1;;;;;3664:17;-1:-1;;;;;;;3664:17;-1:-1;;;3683:19;-1:-1;3683:19;-1:-1;;;:::-;3683:19;-1:-1;;;;;3683:19;-1:-1;;;;;;;3683:19;-1:-1;;;;;;:::-;3720:24;;-1:-1;;;;;;:::-;3746:20;;3818:30;;;;;;;-1:-1;;;3841:6;-1:-1;;;;;;;;3818:30;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;3818:30;;:35;;3811:42;:::-;3900:16;-1:-1;;3859:324;3935:12;-1:-1;;3859:324;3967:1;-1:-1;3859:324;4017:17;-1:-1;3859:324;4078:1;-1:-1;3859:324;4128:20;-1:-1;3859:324;4328:303;;;;;;;-1:-1;4388:6;-1:-1;;;;;;;4396:6;-1:-1;;;;;;;;;;;;;4404:5;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4411:7;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4328:303;-1:-1;;;;;;:::-;;4453:1;-1:-1;4328:303;-1:-1;;;;;;;;;;;;;4522:4;-1:-1;;4528:10;-1:-1;;4540:6;-1:-1;;;;;4510:37;;4500:48;-1:-1;;4500:48;-1:-1;4500:48;;;-1:-1;;;;;;;;;:::-;;;;;4328:303;;;;4312:319;;4666:6;4637:36;4658:6;4637:36;4652:4;4637:36;;;;;5395:16;4686:21;;4683:738;:::-;4746:6;-1:-1;;;5395:16;-1:-1;;;;4717:54;:::i;:::-;4781:33;;;;4917:4;-1:-1;;;4923:6;-1:-1;;;;4892:38;;:::i;:::-;;4868:62;-1:-1;4869:7;-1:-1;;4868:62;-1:-1;;4878:10;-1:-1;4868:62;4948:39;;;;5222:6;-1:-1;;;5230:4;-1:-1;;;5236:10;-1:-1;;;;5199:48;;:::i;:::-;;5151:96;-1:-1;5152:13;-1:-1;;5151:96;-1:-1;;5167:13;-1:-1;;5151:96;-1:-1;;5182:13;-1:-1;5151:96;5291:6;-1:-1;;;5299:4;-1:-1;;;5305:10;-1:-1;;;5329:13;-1:-1;;;5344:13;-1:-1;;;5359:13;-1:-1;;;5386:7;-1:-1;;;5395:16;-1:-1;;;4683:738;5257:164;:::i;4683:738::-;-1:-1;5434:4;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;11373:53;-1:-1;11373:53;-1:-1;;;:::-;11373:53;-1:-1;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;11373:53;-1:-1;;;;;;;:::-;;;;;;;;;;;;;:::-;:::-;;;;11373:53;11440:17;;;;;;;:10;:17;11433:24;:::-;11485:13;-1:-1;;;;;;;;;;;;;;;11462:37;;-1:-1;11462:37;:::i;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;11704:48;-1:-1;11704:48;-1:-1;;;:::-;11704:48;-1:-1;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;11704:48;-1:-1;;;;;;;:::-;;;;;;;;;;;;;:::-;:::-;;;;11704:48;11766:17;;;;;;;:10;:17;11759:24;:::-;11812:8;-1:-1;;;;;;;;;;;;;;;11788:33;;-1:-1;11788:33;:::i;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;:::-;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;:::-;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;:::-;;;;11833:140::-;11932:8;11911:29;;:18;-1:-1;11911:29;-1:-1;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;11911:29;11945:28;-1:-1;;;;;;;;11964:8;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;11945:28;;-1:-1::-;11511:159::-;11614:13;11593:34;;:18;-1:-1;11593:34;-1:-1;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;11593:34;11632:38;-1:-1;;;;;;;;11656:13;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;11632:38;;-1:-1::-;10873:467::-;11172:10;:32;-1:-1;;;;11186:18;-1:-1;;;;;:::-;;;;:::-;;:::-;;;;;11172:32;-1:-1;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;11172:32;;11169:69;;:::-;11221:17;-1:-1;11214:24;;;:::o;11169:69::-;11247:10;:32;-1:-1;;;;11261:18;-1:-1;;;;;:::-;;;;:::-;;:::-;;;;;11247:32;-1:-1;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;11247:32;;11244:69;;:::-;11296:17;-1:-1;11289:24;;;:::o;11244:69::-;-1:-1;;11319:21;;10873:467::-;-1:-1::-;7715:1855::-;8435:10;-1:-1;;8400:46;-1:-1;8400:46;;:::i;:::-;;8379:67;;;8455:9;:27;8452:1118;:::-;-1:-1;;;;;;;;;;8556:22;-1:-1;;;;;;;;;;8594:24;-1:-1;;8654:116;-1:-1;8701:9;-1:-1;;;;;;;;;8712:5;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8719:7;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8728:9;-1:-1;;;8739:13;-1:-1;;8754:15;-1:-1;;8654:116;-1:-1;;;;;8654:30;-1:-1;;8654:116;:::-;-1:-1;;;;;;;8654:116::-;-1:-1;;;;:::-;;;;;;;:::-;;;;8634:136;;;8780:47;8802:8;8780:47;;;;;8845:8;-1:-1;;;;;;;;;;;;;8837:49;;:::o;7715:1855;8452:1118::o;:::-;-1:-1;;;;;;;;;;8905:22;-1:-1;;;;;;;;;;8943:24;-1:-1;;9063:116;-1:-1;9110:9;-1:-1;;;;;;;;;9121:5;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9128:7;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9137:9;-1:-1;;;9148:13;-1:-1;;9163:15;-1:-1;;9063:116;-1:-1;;;;;9063:30;-1:-1;;9063:116;:::-;-1:-1;;;;;;;9063:116::-;-1:-1;;;;:::-;;;;;;;:::-;;;;9038:141;;;-1:-1;;9279:121;-1:-1;9326:13;-1:-1;;;;;;;;;9341:5;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9348:7;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9357:10;-1:-1;;;9369:13;-1:-1;;9384:15;-1:-1;;9279:121;-1:-1;;;;;9279:30;-1:-1;;9279:121;:::-;-1:-1;;;;;;;9279:121::-;-1:-1;;;;:::-;;;;;;;:::-;;;;9258:142;;;9502:13;9469:47;9491:9;9469:47;;;;;9534:9;-1:-1;;;9545:13;-1:-1;;;;;9560:9;-1:-1;;;;;9526:44;7715:1855::-;-1:-1::-;6430:1273::-;7027:249;;;;;;;;-1:-1;;;;;;:::-;;7107:1;-1:-1;7027:249;-1:-1;7176:4;-1:-1;;;;;7164:17;;7154:28;-1:-1;;7154:28;-1:-1;7154:28;;;-1:-1;;;;;;;:::-;;;7027:249;;;;7000:276;;7328:272;;;;;;;7394:15;-1:-1;;;;;;;;7328:272;-1:-1;;;;;;:::-;;7431:1;-1:-1;7328:272;-1:-1;;;;;;;;;7500:4;-1:-1;;;;;7488:17;;7478:28;-1:-1;;7478:28;-1:-1;7478:28;;;-1:-1;;;;;;;;;:::-;;;;;7328:272;;;;7306:294;;7650:10;7606:55;7633:15;7606:55;;;;;7675:15;-1:-1;;;7692:10;-1:-1;;;;;7667:36;-1:-1::-;5937:426::-;6074:147;-1:-1;;6094:38;-1:-1;;6094:38;;-1:-1;;;;;;;;;;;;;;;;;;;;;6154:8;6146:26;-1:-1;;;;;;;;;6194:6;6186:24;-1:-1;;;;;;;;;;;;;6074:147;-1:-1;;;;;;;6059:5;-1:-1;;;6041:236;:::-;-1:-1;;;;;;;6041:236::-;-1:-1;;;;;;;;;;;;6019:258;-1:-1;;;;;6019:258;-1:-1;;;;;;6019:258;;6290:8;6286:13;:17;-1:-1;6283:80::-;-1:-1;;6328:8;-1:-1;;;;;;;6313:50::-;-1:-1;;6345:18;-1:-1;;6345:18;;6313:50;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5937:426::-;-1:-1::-;5450:475::-;5602:11;-1:-1;;5567:47;-1:-1;5567:47;;:::i;:::-;;5546:68;:17;:68;5532:82;;5645:16;:75;5679:19;:30;-1:-1;;;;;;;;5679:30;-1:-1;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;5671:48;;5665:54;-1:-1;5665:54;-1:-1;;:::-;5665:54;:2;-1:-1;5665:54;;-1:-1;;;:::-;;5645:75;-1:-1;5645:75;;;;5619:101;;5729:5;-1:-1;5726:131;:::-;5835:22;5817:14;-1:-1;;5810:47;:::-;5726:131;:::-;:::-;5769:22;5751:14;-1:-1;;5744:47;:::-;5726:131::-;5889:11;-1:-1;;;5902:4;-1:-1;;5908:16;-1:-1;;;;5863:62;:::i;5450:475::-;-1:-1::-;9582:1041::-;-1:-1;;;;10271:8;:26;10268:355;:::-;10396:15;:19;10414:1;10396:19;-1:-1;10396:19;;10372:43;;-1:-1;10268:355::o;:::-;10544:15;:19;;-1:-1;;10544:19;;10520:43;;10600:12;:17;10615:2;10600:17;-1:-1;10600:17;10615:2;-1:-1;;;;:::-;10600:17;;10620:3;10600:23;-1:-1;10600:23;;10572:51;;9582:1041::-;-1:-1::-;:::-;;;","userdoc":{}},"YearnVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"receiver","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"recipient","type":"address"},{"indexed":false,"name":"shares","type":"uint256"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"recipient","type":"address"},{"indexed":false,"name":"shares","type":"uint256"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"token","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Sweep","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"value","type":"uint256"}],"name":"LockedProfitDegradationUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"},{"indexed":false,"name":"debtRatio","type":"uint256"},{"indexed":false,"name":"minDebtPerHarvest","type":"uint256"},{"indexed":false,"name":"maxDebtPerHarvest","type":"uint256"},{"indexed":false,"name":"performanceFee","type":"uint256"}],"name":"StrategyAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"},{"indexed":false,"name":"gain","type":"uint256"},{"indexed":false,"name":"loss","type":"uint256"},{"indexed":false,"name":"debtPaid","type":"uint256"},{"indexed":false,"name":"totalGain","type":"uint256"},{"indexed":false,"name":"totalLoss","type":"uint256"},{"indexed":false,"name":"totalDebt","type":"uint256"},{"indexed":false,"name":"debtAdded","type":"uint256"},{"indexed":false,"name":"debtRatio","type":"uint256"}],"name":"StrategyReported","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"management_fee","type":"uint256"},{"indexed":false,"name":"performance_fee","type":"uint256"},{"indexed":false,"name":"strategist_fee","type":"uint256"},{"indexed":false,"name":"duration","type":"uint256"}],"name":"FeeReport","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"},{"indexed":false,"name":"totalDebt","type":"uint256"},{"indexed":false,"name":"loss","type":"uint256"}],"name":"WithdrawFromStrategy","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"governance","type":"address"}],"name":"UpdateGovernance","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"management","type":"address"}],"name":"UpdateManagement","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"rewards","type":"address"}],"name":"UpdateRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"depositLimit","type":"uint256"}],"name":"UpdateDepositLimit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"performanceFee","type":"uint256"}],"name":"UpdatePerformanceFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"managementFee","type":"uint256"}],"name":"UpdateManagementFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"guardian","type":"address"}],"name":"UpdateGuardian","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"active","type":"bool"}],"name":"EmergencyShutdown","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"queue","type":"address[20]"}],"name":"UpdateWithdrawalQueue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"},{"indexed":false,"name":"debtRatio","type":"uint256"}],"name":"StrategyUpdateDebtRatio","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"},{"indexed":false,"name":"minDebtPerHarvest","type":"uint256"}],"name":"StrategyUpdateMinDebtPerHarvest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"},{"indexed":false,"name":"maxDebtPerHarvest","type":"uint256"}],"name":"StrategyUpdateMaxDebtPerHarvest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"},{"indexed":false,"name":"performanceFee","type":"uint256"}],"name":"StrategyUpdatePerformanceFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"oldVersion","type":"address"},{"indexed":true,"name":"newVersion","type":"address"}],"name":"StrategyMigrated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"}],"name":"StrategyRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"}],"name":"StrategyRemovedFromQueue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"strategy","type":"address"}],"name":"StrategyAddedToQueue","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"pendingGovernance","type":"address"}],"name":"NewPendingGovernance","type":"event"},{"inputs":[{"name":"token","type":"address"},{"name":"governance","type":"address"},{"name":"rewards","type":"address"},{"name":"nameOverride","type":"string"},{"name":"symbolOverride","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"token","type":"address"},{"name":"governance","type":"address"},{"name":"rewards","type":"address"},{"name":"nameOverride","type":"string"},{"name":"symbolOverride","type":"string"},{"name":"guardian","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"token","type":"address"},{"name":"governance","type":"address"},{"name":"rewards","type":"address"},{"name":"nameOverride","type":"string"},{"name":"symbolOverride","type":"string"},{"name":"guardian","type":"address"},{"name":"management","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"apiVersion","outputs":[{"name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"name","type":"string"}],"name":"setName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"symbol","type":"string"}],"name":"setSymbol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"governance","type":"address"}],"name":"setGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"acceptGovernance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"management","type":"address"}],"name":"setManagement","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"rewards","type":"address"}],"name":"setRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"degradation","type":"uint256"}],"name":"setLockedProfitDegradation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"limit","type":"uint256"}],"name":"setDepositLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"fee","type":"uint256"}],"name":"setPerformanceFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"fee","type":"uint256"}],"name":"setManagementFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"guardian","type":"address"}],"name":"setGuardian","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"active","type":"bool"}],"name":"setEmergencyShutdown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"queue","type":"address[20]"}],"name":"setWithdrawalQueue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"sender","type":"address"},{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"increaseAllowance","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"},{"name":"amount","type":"uint256"},{"name":"expiry","type":"uint256"},{"name":"signature","type":"bytes"}],"name":"permit","outputs":[{"name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_amount","type":"uint256"},{"name":"recipient","type":"address"}],"name":"deposit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxAvailableShares","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"maxShares","type":"uint256"}],"name":"withdraw","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"maxShares","type":"uint256"},{"name":"recipient","type":"address"}],"name":"withdraw","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"maxShares","type":"uint256"},{"name":"recipient","type":"address"},{"name":"maxLoss","type":"uint256"}],"name":"withdraw","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pricePerShare","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"strategy","type":"address"},{"name":"debtRatio","type":"uint256"},{"name":"minDebtPerHarvest","type":"uint256"},{"name":"maxDebtPerHarvest","type":"uint256"},{"name":"performanceFee","type":"uint256"}],"name":"addStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"strategy","type":"address"},{"name":"debtRatio","type":"uint256"}],"name":"updateStrategyDebtRatio","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"strategy","type":"address"},{"name":"minDebtPerHarvest","type":"uint256"}],"name":"updateStrategyMinDebtPerHarvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"strategy","type":"address"},{"name":"maxDebtPerHarvest","type":"uint256"}],"name":"updateStrategyMaxDebtPerHarvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"strategy","type":"address"},{"name":"performanceFee","type":"uint256"}],"name":"updateStrategyPerformanceFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"oldVersion","type":"address"},{"name":"newVersion","type":"address"}],"name":"migrateStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"strategy","type":"address"}],"name":"revokeStrategy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"strategy","type":"address"}],"name":"addStrategyToQueue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"strategy","type":"address"}],"name":"removeStrategyFromQueue","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"debtOutstanding","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"strategy","type":"address"}],"name":"debtOutstanding","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"creditAvailable","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"strategy","type":"address"}],"name":"creditAvailable","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"availableDepositLimit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"expectedReturn","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"strategy","type":"address"}],"name":"expectedReturn","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"gain","type":"uint256"},{"name":"loss","type":"uint256"},{"name":"_debtPayment","type":"uint256"}],"name":"report","outputs":[{"name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"token","type":"address"}],"name":"sweep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"token","type":"address"},{"name":"amount","type":"uint256"}],"name":"sweep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"address"},{"name":"arg1","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governance","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"management","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"guardian","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"address"}],"name":"strategies","outputs":[{"components":[{"name":"performanceFee","type":"uint256"},{"name":"activation","type":"uint256"},{"name":"debtRatio","type":"uint256"},{"name":"minDebtPerHarvest","type":"uint256"},{"name":"maxDebtPerHarvest","type":"uint256"},{"name":"lastReport","type":"uint256"},{"name":"totalDebt","type":"uint256"},{"name":"totalGain","type":"uint256"},{"name":"totalLoss","type":"uint256"}],"name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"uint256"}],"name":"withdrawalQueue","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyShutdown","outputs":[{"name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositLimit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"debtRatio","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalIdle","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDebt","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastReport","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activation","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockedProfit","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lockedProfitDegradation","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewards","outputs":[{"name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"managementFee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"performanceFee","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"name":"arg0","type":"address"}],"name":"nonces","outputs":[{"name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"contractName":"YearnVault","deploymentBytecode":{"bytecode":""},"dev_messages":{"290":"dev: no devops199","302":"dev: see VVE-2020-0001","591":"dev: do not add duplicate strategies","593":"dev: do not add new strategies","750":"dev: invalid owner","751":"dev: permit expired","773":"dev: invalid signature","832":"dev: no free funds","836":"dev: division rounding resulted in zero","1239":"dev: strategy in emergency","1386":"dev: already zero"},"devdoc":{"author":"yearn.finance","license":"GNU AGPLv3","methods":{"acceptGovernance()":{"details":"setGovernance() should be called by the existing governance address, prior to calling this function."},"addStrategy(address,uint256,uint256,uint256,uint256)":{"details":"The Strategy will be appended to `withdrawalQueue`, call `setWithdrawalQueue` to change the order.","params":{"debtRatio":"The share of the total assets in the `vault that the `strategy` has access to.","maxDebtPerHarvest":"Upper limit on the increase of debt since last harvest","minDebtPerHarvest":"Lower limit on the increase of debt since last harvest","performanceFee":"The fee the strategist will receive based on this Vault's performance.","strategy":"The address of the Strategy to add."}},"addStrategyToQueue(address)":{"details":"The Strategy will be appended to `withdrawalQueue`, call `setWithdrawalQueue` to change the order.","params":{"strategy":"The Strategy to add."}},"apiVersion()":{"details":"All strategies must have an `apiVersion()` that matches the Vault's `API_VERSION`.","returns":{"_0":"API_VERSION which holds the current version of this contract."}},"approve(address,uint256)":{"details":"Approve the passed address to spend the specified amount of tokens on behalf of `msg.sender`. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. See https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729","params":{"amount":"The amount of tokens to be spent.","spender":"The address which will spend the funds."}},"creditAvailable()":{"params":{"strategy":"The Strategy to check. Defaults to caller."},"returns":{"_0":"The quantity of tokens available for the Strategy to draw on."}},"creditAvailable(address)":{"params":{"strategy":"The Strategy to check. Defaults to caller."},"returns":{"_0":"The quantity of tokens available for the Strategy to draw on."}},"debtOutstanding()":{"params":{"strategy":"The Strategy to check. Defaults to the caller."},"returns":{"_0":"The quantity of tokens to withdraw."}},"debtOutstanding(address)":{"params":{"strategy":"The Strategy to check. Defaults to the caller."},"returns":{"_0":"The quantity of tokens to withdraw."}},"decreaseAllowance(address,uint256)":{"details":"Decrease the allowance of the passed address to spend the total amount of tokens on behalf of msg.sender. This method mitigates the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. See https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729","params":{"amount":"The amount of tokens to decrease the allowance by.","spender":"The address which will spend the funds."}},"deposit()":{"details":"Measuring quantity of shares to issues is based on the total outstanding debt that this contract has (\"expected value\") instead of the total balance sheet it has (\"estimated value\") has important security considerations, and is done intentionally. If this value were measured against external systems, it could be purposely manipulated by an attacker to withdraw more assets than they otherwise should be able to claim by redeeming their shares. On deposit, this means that shares are issued against the total amount that the deposited capital can be given in service of the debt that Strategies assume. If that number were to be lower than the \"expected value\" at some future point, depositing shares via this method could entitle the depositor to *less* than the deposited value once the \"realized value\" is updated from further reports by the Strategies to the Vaults. Care should be taken by integrators to account for this discrepancy, by using the view-only methods of this contract (both off-chain and on-chain) to determine if depositing into the Vault is a \"good idea\".","params":{"_amount":"The quantity of tokens to deposit, defaults to all.","recipient":"The address to issue the shares in this Vault to. Defaults to the caller's address."},"returns":{"_0":"The issued Vault shares."}},"deposit(uint256)":{"details":"Measuring quantity of shares to issues is based on the total outstanding debt that this contract has (\"expected value\") instead of the total balance sheet it has (\"estimated value\") has important security considerations, and is done intentionally. If this value were measured against external systems, it could be purposely manipulated by an attacker to withdraw more assets than they otherwise should be able to claim by redeeming their shares. On deposit, this means that shares are issued against the total amount that the deposited capital can be given in service of the debt that Strategies assume. If that number were to be lower than the \"expected value\" at some future point, depositing shares via this method could entitle the depositor to *less* than the deposited value once the \"realized value\" is updated from further reports by the Strategies to the Vaults. Care should be taken by integrators to account for this discrepancy, by using the view-only methods of this contract (both off-chain and on-chain) to determine if depositing into the Vault is a \"good idea\".","params":{"_amount":"The quantity of tokens to deposit, defaults to all.","recipient":"The address to issue the shares in this Vault to. Defaults to the caller's address."},"returns":{"_0":"The issued Vault shares."}},"deposit(uint256,address)":{"details":"Measuring quantity of shares to issues is based on the total outstanding debt that this contract has (\"expected value\") instead of the total balance sheet it has (\"estimated value\") has important security considerations, and is done intentionally. If this value were measured against external systems, it could be purposely manipulated by an attacker to withdraw more assets than they otherwise should be able to claim by redeeming their shares. On deposit, this means that shares are issued against the total amount that the deposited capital can be given in service of the debt that Strategies assume. If that number were to be lower than the \"expected value\" at some future point, depositing shares via this method could entitle the depositor to *less* than the deposited value once the \"realized value\" is updated from further reports by the Strategies to the Vaults. Care should be taken by integrators to account for this discrepancy, by using the view-only methods of this contract (both off-chain and on-chain) to determine if depositing into the Vault is a \"good idea\".","params":{"_amount":"The quantity of tokens to deposit, defaults to all.","recipient":"The address to issue the shares in this Vault to. Defaults to the caller's address."},"returns":{"_0":"The issued Vault shares."}},"expectedReturn()":{"params":{"strategy":"The Strategy to determine the expected return for. Defaults to caller."},"returns":{"_0":"The anticipated amount `strategy` should make on its investment since its last report."}},"expectedReturn(address)":{"params":{"strategy":"The Strategy to determine the expected return for. Defaults to caller."},"returns":{"_0":"The anticipated amount `strategy` should make on its investment since its last report."}},"increaseAllowance(address,uint256)":{"details":"Increase the allowance of the passed address to spend the total amount of tokens on behalf of msg.sender. This method mitigates the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. See https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729","params":{"amount":"The amount of tokens to increase the allowance by.","spender":"The address which will spend the funds."}},"initialize(address,address,address,string,string)":{"details":"If `nameOverride` is not specified, the name will be 'yearn' combined with the name of `token`. If `symbolOverride` is not specified, the symbol will be 'yv' combined with the symbol of `token`. The token used by the vault should not change balances outside transfers and it must transfer the exact amount requested. Fee on transfer and rebasing are not supported.","params":{"governance":"The address authorized for governance interactions.","guardian":"The address authorized for guardian interactions. Defaults to caller.","management":"The address of the vault manager.","nameOverride":"Specify a custom Vault name. Leave empty for default choice.","rewards":"The address to distribute rewards to.","symbolOverride":"Specify a custom Vault symbol name. Leave empty for default choice.","token":"The token that may be deposited into this Vault."}},"initialize(address,address,address,string,string,address)":{"details":"If `nameOverride` is not specified, the name will be 'yearn' combined with the name of `token`. If `symbolOverride` is not specified, the symbol will be 'yv' combined with the symbol of `token`. The token used by the vault should not change balances outside transfers and it must transfer the exact amount requested. Fee on transfer and rebasing are not supported.","params":{"governance":"The address authorized for governance interactions.","guardian":"The address authorized for guardian interactions. Defaults to caller.","management":"The address of the vault manager.","nameOverride":"Specify a custom Vault name. Leave empty for default choice.","rewards":"The address to distribute rewards to.","symbolOverride":"Specify a custom Vault symbol name. Leave empty for default choice.","token":"The token that may be deposited into this Vault."}},"initialize(address,address,address,string,string,address,address)":{"details":"If `nameOverride` is not specified, the name will be 'yearn' combined with the name of `token`. If `symbolOverride` is not specified, the symbol will be 'yv' combined with the symbol of `token`. The token used by the vault should not change balances outside transfers and it must transfer the exact amount requested. Fee on transfer and rebasing are not supported.","params":{"governance":"The address authorized for governance interactions.","guardian":"The address authorized for guardian interactions. Defaults to caller.","management":"The address of the vault manager.","nameOverride":"Specify a custom Vault name. Leave empty for default choice.","rewards":"The address to distribute rewards to.","symbolOverride":"Specify a custom Vault symbol name. Leave empty for default choice.","token":"The token that may be deposited into this Vault."}},"maxAvailableShares()":{"details":"Regarding how shares are calculated, see dev note on `deposit`. If you want to calculated the maximum a user could withdraw up to, you want to use this function. Note that the amount provided by this function is the theoretical maximum possible from withdrawing, the real amount depends on the realized losses incurred during withdrawal.","returns":{"_0":"The total quantity of shares this Vault can provide."}},"migrateStrategy(address,address)":{"details":"Strategy must successfully migrate all capital and positions to new Strategy, or else this will upset the balance of the Vault. The new Strategy should be \"empty\" e.g. have no prior commitments to this Vault, otherwise it could have issues.","params":{"newVersion":"The new Strategy to migrate to.","oldVersion":"The existing Strategy to migrate from."}},"permit(address,address,uint256,uint256,bytes)":{"params":{"amount":"The amount of tokens to be spent.","expiry":"The timestamp after which the Permit is no longer valid.","owner":"The address which is a source of funds and has signed the Permit.","signature":"A valid secp256k1 signature of Permit by owner encoded as r, s, v.","spender":"The address which is allowed to spend the funds."},"returns":{"_0":"True, if transaction completes successfully"}},"pricePerShare()":{"details":"See dev note on `withdraw`.","returns":{"_0":"The value of a single share."}},"removeStrategyFromQueue(address)":{"details":"We don't do this with revokeStrategy because it should still be possible to withdraw from the Strategy if it's unwinding.","params":{"strategy":"The Strategy to remove."}},"report(uint256,uint256,uint256)":{"details":"For approved strategies, this is the most efficient behavior. The Strategy reports back what it has free, then Vault \"decides\" whether to take some back or give it more. Note that the most it can take is `gain + _debtPayment`, and the most it can give is all of the remaining reserves. Anything outside of those bounds is abnormal behavior. All approved strategies must have increased diligence around calling this function, as abnormal behavior could become catastrophic.","params":{"_debtPayment":"Amount Strategy has made available to cover outstanding debt","gain":"Amount Strategy has realized as a gain on it's investment since its last report, and is free to be given back to Vault as earnings","loss":"Amount Strategy has realized as a loss on it's investment since its last report, and should be accounted for on the Vault's balance sheet. The loss will reduce the debtRatio. The next time the strategy will harvest, it will pay back the debt in an attempt to adjust to the new debt limit."},"returns":{"_0":"Amount of debt outstanding (if totalDebt > debtLimit or emergency shutdown)."}},"revokeStrategy()":{"params":{"strategy":"The Strategy to revoke."}},"revokeStrategy(address)":{"params":{"strategy":"The Strategy to revoke."}},"setDepositLimit(uint256)":{"params":{"limit":"The new deposit limit to use."}},"setEmergencyShutdown(bool)":{"params":{"active":"If true, the Vault goes into Emergency Shutdown. If false, the Vault goes back into Normal Operation."}},"setGovernance(address)":{"params":{"governance":"The address requested to take over Vault governance."}},"setGuardian(address)":{"params":{"guardian":"The new guardian address to use."}},"setLockedProfitDegradation(uint256)":{"params":{"degradation":"The rate of degradation in percent per second scaled to 1e18."}},"setManagement(address)":{"params":{"management":"The address to use for managing."}},"setManagementFee(uint256)":{"params":{"fee":"The new management fee to use."}},"setName(string)":{"params":{"name":"The new name to use."}},"setPerformanceFee(uint256)":{"params":{"fee":"The new performance fee to use."}},"setRewards(address)":{"params":{"rewards":"The address to use for collecting rewards."}},"setSymbol(string)":{"params":{"symbol":"The new symbol to use."}},"setWithdrawalQueue(address[20])":{"details":"This is order sensitive, specify the addresses in the order in which funds should be withdrawn (so `queue`[0] is the first Strategy withdrawn from, `queue`[1] is the second, etc.) This means that the least impactful Strategy (the Strategy that will have its core positions impacted the least by having funds removed) should be at `queue`[0], then the next least impactful at `queue`[1], and so on.","params":{"queue":"The array of addresses to use as the new withdrawal queue. This is order sensitive."}},"sweep(address)":{"params":{"amount":"The quantity or tokenId to transfer out.","token":"The token to transfer out of this vault."}},"sweep(address,uint256)":{"params":{"amount":"The quantity or tokenId to transfer out.","token":"The token to transfer out of this vault."}},"totalAssets()":{"returns":{"_0":"The total assets under control of this Vault."}},"transfer(address,uint256)":{"params":{"amount":"The quantity of shares to transfer.","receiver":"The address shares are being transferred to. Must not be this contract's address, must not be 0x0."},"returns":{"_0":"True if transfer is sent to an address other than this contract's or 0x0, otherwise the transaction will fail."}},"transferFrom(address,address,uint256)":{"params":{"amount":"The quantity of shares to transfer.","receiver":"The address shares are being transferred to. Must not be this contract's address, must not be 0x0.","sender":"The address shares are being transferred from."},"returns":{"_0":"True if transfer is sent to an address other than this contract's or 0x0, otherwise the transaction will fail."}},"updateStrategyDebtRatio(address,uint256)":{"params":{"debtRatio":"The quantity of assets `strategy` may now manage.","strategy":"The Strategy to update."}},"updateStrategyMaxDebtPerHarvest(address,uint256)":{"params":{"maxDebtPerHarvest":"Upper limit on the increase of debt since last harvest","strategy":"The Strategy to update."}},"updateStrategyMinDebtPerHarvest(address,uint256)":{"params":{"minDebtPerHarvest":"Lower limit on the increase of debt since last harvest","strategy":"The Strategy to update."}},"updateStrategyPerformanceFee(address,uint256)":{"params":{"performanceFee":"The new fee the strategist will receive.","strategy":"The Strategy to update."}},"withdraw()":{"details":"Measuring the value of shares is based on the total outstanding debt that this contract has (\"expected value\") instead of the total balance sheet it has (\"estimated value\") has important security considerations, and is done intentionally. If this value were measured against external systems, it could be purposely manipulated by an attacker to withdraw more assets than they otherwise should be able to claim by redeeming their shares. On withdrawal, this means that shares are redeemed against the total amount that the deposited capital had \"realized\" since the point it was deposited, up until the point it was withdrawn. If that number were to be higher than the \"expected value\" at some future point, withdrawing shares via this method could entitle the depositor to *more* than the expected value once the \"realized value\" is updated from further reports by the Strategies to the Vaults. Under exceptional scenarios, this could cause earlier withdrawals to earn \"more\" of the underlying assets than Users might otherwise be entitled to, if the Vault's estimated value were otherwise measured through external means, accounting for whatever exceptional scenarios exist for the Vault (that aren't covered by the Vault's own design.) In the situation where a large withdrawal happens, it can empty the vault balance and the strategies in the withdrawal queue. Strategies not in the withdrawal queue will have to be harvested to rebalance the funds and make the funds available again to withdraw.","params":{"maxLoss":"The maximum acceptable loss to sustain on withdrawal. Defaults to 0.01%. If a loss is specified, up to that amount of shares may be burnt to cover losses on withdrawal.","maxShares":"How many shares to try and redeem for tokens, defaults to all.","recipient":"The address to issue the shares in this Vault to. Defaults to the caller's address."},"returns":{"_0":"The quantity of tokens redeemed for `_shares`."}},"withdraw(uint256)":{"details":"Measuring the value of shares is based on the total outstanding debt that this contract has (\"expected value\") instead of the total balance sheet it has (\"estimated value\") has important security considerations, and is done intentionally. If this value were measured against external systems, it could be purposely manipulated by an attacker to withdraw more assets than they otherwise should be able to claim by redeeming their shares. On withdrawal, this means that shares are redeemed against the total amount that the deposited capital had \"realized\" since the point it was deposited, up until the point it was withdrawn. If that number were to be higher than the \"expected value\" at some future point, withdrawing shares via this method could entitle the depositor to *more* than the expected value once the \"realized value\" is updated from further reports by the Strategies to the Vaults. Under exceptional scenarios, this could cause earlier withdrawals to earn \"more\" of the underlying assets than Users might otherwise be entitled to, if the Vault's estimated value were otherwise measured through external means, accounting for whatever exceptional scenarios exist for the Vault (that aren't covered by the Vault's own design.) In the situation where a large withdrawal happens, it can empty the vault balance and the strategies in the withdrawal queue. Strategies not in the withdrawal queue will have to be harvested to rebalance the funds and make the funds available again to withdraw.","params":{"maxLoss":"The maximum acceptable loss to sustain on withdrawal. Defaults to 0.01%. If a loss is specified, up to that amount of shares may be burnt to cover losses on withdrawal.","maxShares":"How many shares to try and redeem for tokens, defaults to all.","recipient":"The address to issue the shares in this Vault to. Defaults to the caller's address."},"returns":{"_0":"The quantity of tokens redeemed for `_shares`."}},"withdraw(uint256,address)":{"details":"Measuring the value of shares is based on the total outstanding debt that this contract has (\"expected value\") instead of the total balance sheet it has (\"estimated value\") has important security considerations, and is done intentionally. If this value were measured against external systems, it could be purposely manipulated by an attacker to withdraw more assets than they otherwise should be able to claim by redeeming their shares. On withdrawal, this means that shares are redeemed against the total amount that the deposited capital had \"realized\" since the point it was deposited, up until the point it was withdrawn. If that number were to be higher than the \"expected value\" at some future point, withdrawing shares via this method could entitle the depositor to *more* than the expected value once the \"realized value\" is updated from further reports by the Strategies to the Vaults. Under exceptional scenarios, this could cause earlier withdrawals to earn \"more\" of the underlying assets than Users might otherwise be entitled to, if the Vault's estimated value were otherwise measured through external means, accounting for whatever exceptional scenarios exist for the Vault (that aren't covered by the Vault's own design.) In the situation where a large withdrawal happens, it can empty the vault balance and the strategies in the withdrawal queue. Strategies not in the withdrawal queue will have to be harvested to rebalance the funds and make the funds available again to withdraw.","params":{"maxLoss":"The maximum acceptable loss to sustain on withdrawal. Defaults to 0.01%. If a loss is specified, up to that amount of shares may be burnt to cover losses on withdrawal.","maxShares":"How many shares to try and redeem for tokens, defaults to all.","recipient":"The address to issue the shares in this Vault to. Defaults to the caller's address."},"returns":{"_0":"The quantity of tokens redeemed for `_shares`."}},"withdraw(uint256,address,uint256)":{"details":"Measuring the value of shares is based on the total outstanding debt that this contract has (\"expected value\") instead of the total balance sheet it has (\"estimated value\") has important security considerations, and is done intentionally. If this value were measured against external systems, it could be purposely manipulated by an attacker to withdraw more assets than they otherwise should be able to claim by redeeming their shares. On withdrawal, this means that shares are redeemed against the total amount that the deposited capital had \"realized\" since the point it was deposited, up until the point it was withdrawn. If that number were to be higher than the \"expected value\" at some future point, withdrawing shares via this method could entitle the depositor to *more* than the expected value once the \"realized value\" is updated from further reports by the Strategies to the Vaults. Under exceptional scenarios, this could cause earlier withdrawals to earn \"more\" of the underlying assets than Users might otherwise be entitled to, if the Vault's estimated value were otherwise measured through external means, accounting for whatever exceptional scenarios exist for the Vault (that aren't covered by the Vault's own design.) In the situation where a large withdrawal happens, it can empty the vault balance and the strategies in the withdrawal queue. Strategies not in the withdrawal queue will have to be harvested to rebalance the funds and make the funds available again to withdraw.","params":{"maxLoss":"The maximum acceptable loss to sustain on withdrawal. Defaults to 0.01%. If a loss is specified, up to that amount of shares may be burnt to cover losses on withdrawal.","maxShares":"How many shares to try and redeem for tokens, defaults to all.","recipient":"The address to issue the shares in this Vault to. Defaults to the caller's address."},"returns":{"_0":"The quantity of tokens redeemed for `_shares`."}}},"title":"Yearn Token Vault"},"pcmap":{"10001":[1465,20,1465,37],"10006":[1465,0,1473,42],"1001":[307,4,307,36],"10014":[1465,0,1473,42],"10017":[1465,0,1473,42],"1002":[308,19,308,26],"10029":[1465,20,1465,37],"10031":[1465,20,1465,37],"10033":[1473,4,1473,42],"10035":[1473,33,1473,41],"1004":[308,4,308,26],"10046":[1473,11,1473,42],"10049":[1473,11,1473,42],"1005":[308,4,308,16],"10050":[1473,11,1473,42],"10051":[1473,11,1473,42],"10054":[1465,0,1473,42],"10062":[1518,0,1529,42],"10065":[1518,0,1529,42],"10066":[1518,40,1518,50],"10067":[1518,20,1518,37],"1007":[308,4,308,26],"10070":[1518,20,1518,37],"10075":[1518,0,1529,42],"1008":[309,4,309,30],"10083":[1518,0,1529,42],"10086":[1518,0,1529,42],"10098":[1518,20,1518,37],"10101":[1518,20,1518,37],"10103":[1529,4,1529,42],"10105":[1529,33,1529,41],"10118":[1529,11,1529,42],"10121":[1529,11,1529,42],"10122":[1529,11,1529,42],"10123":[1529,11,1529,42],"10127":[1518,0,1529,42],"10135":[1555,0,1559,16],"10138":[1555,0,1559,16],"10144":[1556,27,1556,46],"10147":[1556,27,1556,46],"10148":[1556,27,1556,46],"10149":[1556,27,1556,46],"10151":[1556,7,1556,46],"10152":[1556,7,1556,24],"10154":[1556,7,1556,46],"10155":[1556,7,1556,46],"10156":[1556,4,1559,16],"10159":[1556,4,1559,16],"10160":[1559,15,1559,16],"10167":[1559,8,1559,16],"10169":[1559,8,1559,16],"10172":[1559,8,1559,16],"10176":[1556,4,1559,16],"10177":[1556,4,1559,16],"10178":[1557,15,1557,32],"10180":[1557,15,1557,54],"10186":[1557,35,1557,54],"10189":[1557,35,1557,54],"10190":[1557,35,1557,54],"10191":[1557,35,1557,54],"10204":[1557,15,1557,54],"10205":[1557,15,1557,54],"10206":[1557,15,1557,54],"10207":[1557,15,1557,54],"10213":[1557,8,1557,54],"10215":[1557,8,1557,54],"10218":[1557,8,1557,54],"10221":[1555,0,1559,16],"10229":[1564,0,1575,41],"10232":[1564,0,1575,41],"10233":[1564,39,1564,49],"10234":[1564,19,1564,36],"10237":[1564,19,1564,36],"10242":[1564,0,1575,41],"10250":[1564,0,1575,41],"10253":[1564,0,1575,41],"10265":[1564,19,1564,36],"10268":[1564,19,1564,36],"10270":[1575,4,1575,41],"10272":[1575,32,1575,40],"10285":[1575,11,1575,41],"10288":[1575,11,1575,41],"10289":[1575,11,1575,41],"10290":[1575,11,1575,41],"10294":[1564,0,1575,41],"10302":[1642,0,1754,19],"10305":[1642,0,1754,19],"10306":[1674,52,1674,53],"10308":[1674,11,1674,26],"10310":[1674,27,1674,37],"10311":[1674,11,1674,38],"10313":[1674,11,1674,38],"10314":[1674,11,1674,38],"10316":[1674,11,1674,38],"10317":[1674,11,1674,38],"10319":[1674,11,1674,38],"10321":[1674,11,1674,38],"10325":[1674,11,1674,49],"10326":[1674,11,1674,49],"10327":[1674,11,1674,49],"10328":[1674,11,1674,53],"10329":[1674,11,1674,53],"10330":[1674,4,1674,53],"10331":[1674,4,1674,53],"10334":[1674,4,1674,53],"10335":[1738,8,1738,12],"10337":[1676,47,1676,66],"10338":[1694,31,1694,43],"10353":[1676,47,1676,66],"10354":[1676,47,1676,66],"10355":[1676,47,1676,66],"10356":[1676,47,1676,66],"10365":[1676,11,1676,43],"10366":[1676,32,1676,42],"10381":[1676,11,1676,21],"10386":[1676,11,1676,43],"10389":[1676,11,1676,43],"10400":[1676,11,1676,43],"10405":[1676,11,1676,43],"10408":[1676,11,1676,43],"10409":[1676,11,1676,43],"1041":[309,22,309,29],"10412":[1676,11,1676,66],"10414":[1676,4,1676,66],"10417":[1676,4,1676,66],"10418":[1679,14,1679,15],"10420":[1739,8,1739,12],"10422":[1679,7,1679,15],"10423":[1679,7,1679,15],"10424":[1679,4,1680,42],"10425":[1679,4,1680,42],"10428":[1679,4,1680,42],"10429":[1680,25,1680,35],"10433":[1739,8,1739,12],"10439":[1679,4,1680,42],"10442":[1680,8,1680,42],"10445":[1680,8,1680,42],"10446":[1679,4,1680,42],"10447":[1683,42,1683,52],"10452":[1738,8,1738,12],"10465":[1683,25,1683,59],"10468":[1683,25,1683,59],"10469":[1683,25,1683,59],"10470":[1683,25,1683,59],"10473":[1683,4,1683,59],"10474":[1683,4,1683,59],"10477":[1683,4,1683,59],"10478":[1686,4,1686,19],"10480":[1686,20,1686,30],"10481":[1686,4,1686,31],"10483":[1686,4,1686,31],"10484":[1686,4,1686,31],"10486":[1686,4,1686,31],"10487":[1686,4,1686,31],"10489":[1686,4,1686,31],"10491":[1686,4,1686,31],"10495":[1686,4,1686,41],"10496":[1686,4,1686,41],"10497":[1686,4,1686,41],"10499":[1686,4,1686,49],"1050":[309,4,309,30],"10500":[1738,8,1738,12],"10515":[1686,4,1686,49],"10516":[1686,4,1686,49],"10517":[1686,4,1686,49],"10518":[1686,4,1686,49],"10520":[1686,4,1686,49],"10521":[1686,4,1686,49],"10522":[1689,44,1689,54],"1053":[309,4,309,30],"10532":[1689,22,1689,55],"10535":[1689,22,1689,55],"10536":[1689,22,1689,55],"10537":[1689,22,1689,55],"1054":[310,20,310,28],"10540":[1689,4,1689,55],"10541":[1689,4,1689,55],"10544":[1689,4,1689,55],"10545":[1693,42,1693,52],"10555":[1693,20,1693,53],"10558":[1693,20,1693,53],"10559":[1693,20,1693,53],"10560":[1693,20,1693,53],"10563":[1693,4,1693,53],"10564":[1693,4,1693,53],"10567":[1693,4,1693,53],"10568":[1694,31,1694,43],"1057":[310,4,310,28],"10570":[1694,27,1694,50],"10571":[1694,45,1694,49],"1058":[310,4,310,17],"10584":[1694,27,1694,50],"10585":[1694,27,1694,50],"10586":[1694,27,1694,50],"10587":[1694,27,1694,50],"10588":[1694,4,1694,50],"10591":[1694,4,1694,50],"10592":[1696,21,1696,22],"10594":[1696,7,1696,18],"10597":[1696,7,1696,22],"10598":[1696,7,1696,22],"10599":[1696,4,1699,27],"1060":[310,4,310,28],"10600":[1696,4,1699,27],"10603":[1696,4,1699,27],"10604":[1697,8,1697,23],"10606":[1697,24,1697,34],"10607":[1697,8,1697,35],"10609":[1697,8,1697,35],"1061":[311,4,311,32],"10610":[1697,8,1697,35],"10612":[1697,8,1697,35],"10613":[1697,8,1697,35],"10615":[1697,8,1697,35],"10617":[1697,8,1697,35],"10621":[1697,8,1697,45],"10622":[1697,8,1697,45],"10623":[1697,8,1697,45],"10625":[1697,8,1697,60],"10626":[1697,49,1697,60],"10640":[1697,8,1697,60],"10641":[1697,8,1697,60],"10642":[1697,8,1697,60],"10643":[1697,8,1697,60],"10645":[1697,8,1697,60],"10646":[1697,8,1697,60],"10647":[1698,8,1698,22],"10649":[1698,8,1698,37],"10650":[1698,26,1698,37],"10664":[1698,8,1698,37],"10665":[1698,8,1698,37],"10666":[1698,8,1698,37],"10667":[1698,8,1698,37],"10668":[1698,8,1698,22],"10670":[1698,8,1698,37],"10671":[1699,8,1699,12],"10674":[1699,8,1699,27],"10675":[1699,16,1699,27],"10689":[1699,8,1699,27],"10690":[1699,8,1699,27],"10691":[1699,8,1699,27],"10692":[1699,8,1699,27],"10693":[1699,8,1699,12],"10696":[1699,8,1699,27],"10697":[1696,4,1699,27],"10698":[1706,16,1706,17],"10700":[1706,7,1706,13],"10703":[1706,7,1706,17],"10704":[1706,7,1706,17],"10705":[1706,4,1708,32],"10706":[1706,4,1708,32],"10709":[1706,4,1708,32],"10710":[1707,8,1707,23],"10712":[1707,24,1707,34],"10713":[1707,8,1707,35],"10715":[1707,8,1707,35],"10716":[1707,8,1707,35],"10718":[1707,8,1707,35],"10719":[1707,8,1707,35],"10721":[1707,8,1707,35],"10723":[1707,8,1707,35],"10727":[1707,8,1707,45],"10728":[1707,8,1707,45],"10729":[1707,8,1707,45],"10731":[1707,8,1707,55],"10732":[1707,49,1707,55],"10748":[1707,8,1707,55],"10749":[1707,8,1707,55],"10750":[1707,8,1707,55],"10751":[1707,8,1707,55],"10753":[1707,8,1707,55],"10754":[1707,8,1707,55],"10755":[1708,8,1708,22],"10757":[1708,8,1708,32],"10758":[1708,26,1708,32],"10774":[1708,8,1708,32],"10775":[1708,8,1708,32],"10776":[1708,8,1708,32],"10777":[1708,8,1708,32],"10778":[1708,8,1708,22],"10780":[1708,8,1708,32],"10781":[1706,4,1708,32],"10782":[1738,8,1738,12],"10784":[1715,26,1715,44],"10785":[1715,33,1715,44],"10801":[1715,26,1715,44],"10802":[1715,26,1715,44],"10803":[1715,26,1715,44],"10804":[1715,26,1715,44],"10805":[1715,4,1715,44],"10808":[1715,4,1715,44],"10809":[1716,20,1716,26],"10812":[1716,7,1716,26],"10813":[1716,7,1716,17],"10816":[1716,7,1716,26],"10817":[1716,7,1716,26],"10818":[1716,4,1721,95],"10821":[1716,4,1721,95],"10822":[1719,22,1719,28],"10825":[1719,9,1719,28],"10826":[1719,9,1719,19],"10829":[1719,9,1719,28],"10830":[1719,9,1719,28],"10831":[1719,4,1721,95],"10832":[1716,4,1721,95],"10835":[1719,4,1721,95],"10836":[1720,8,1720,22],"10838":[1720,8,1720,45],"10839":[1720,26,1720,36],"10842":[1720,26,1720,45],"10843":[1720,39,1720,45],"10857":[1720,26,1720,45],"10858":[1720,26,1720,45],"10859":[1720,26,1720,45],"10860":[1720,26,1720,45],"10873":[1720,8,1720,45],"10874":[1720,8,1720,45],"10875":[1720,8,1720,45],"10876":[1720,8,1720,45],"10877":[1720,8,1720,22],"10879":[1720,8,1720,45],"10880":[1721,37,1721,55],"10886":[1721,57,1721,67],"10890":[1721,69,1721,73],"10894":[1721,75,1721,85],"10897":[1721,75,1721,94],"10898":[1721,88,1721,94],"109":[264,4,264,21],"10912":[1721,75,1721,94],"10913":[1721,75,1721,94],"10914":[1721,75,1721,94],"10915":[1721,75,1721,94],"10919":[1716,4,1721,95],"10922":[1721,8,1721,95],"10925":[1721,8,1721,95],"10926":[1716,4,1721,95],"10929":[1716,4,1721,95],"10930":[1716,4,1721,95],"10931":[1717,8,1717,22],"10933":[1717,8,1717,45],"10934":[1717,26,1717,32],"10937":[1717,26,1717,45],"10938":[1717,35,1717,45],"1094":[311,23,311,31],"10952":[1717,26,1717,45],"10953":[1717,26,1717,45],"10954":[1717,26,1717,45],"10955":[1717,26,1717,45],"10966":[1717,8,1717,45],"10967":[1717,8,1717,45],"10968":[1717,8,1717,45],"10969":[1717,8,1717,45],"10970":[1717,8,1717,22],"10972":[1717,8,1717,45],"10973":[1718,33,1718,51],"10979":[1718,53,1718,63],"10983":[1718,65,1718,71],"10986":[1718,65,1718,84],"10987":[1718,74,1718,84],"11001":[1718,65,1718,84],"11002":[1718,65,1718,84],"11003":[1718,65,1718,84],"11004":[1718,65,1718,84],"11008":[1716,4,1721,95],"11011":[1718,8,1718,85],"11014":[1718,8,1718,85],"11015":[1716,4,1721,95],"11022":[1726,38,1726,67],"11025":[1726,38,1726,67],"11026":[1726,38,1726,67],"11027":[1726,38,1726,67],"11030":[1726,38,1726,74],"11031":[1738,8,1738,12],"1104":[311,4,311,32],"11046":[1726,38,1726,74],"11047":[1726,38,1726,74],"11048":[1726,38,1726,74],"11049":[1726,38,1726,74],"11050":[1726,77,1726,86],"11064":[1726,38,1726,86],"11065":[1726,38,1726,86],"11066":[1726,38,1726,86],"11067":[1726,38,1726,86],"11068":[1726,4,1726,86],"1107":[311,4,311,32],"11071":[1726,4,1726,86],"11072":[1739,8,1739,12],"11074":[1727,7,1727,36],"11075":[1727,7,1727,29],"11078":[1727,7,1727,36],"11079":[1727,7,1727,36],"1108":[312,26,312,30],"11080":[1727,4,1730,29],"11083":[1727,4,1730,29],"11084":[1730,28,1730,29],"11086":[1730,8,1730,25],"11088":[1730,8,1730,29],"11089":[1727,4,1730,29],"11092":[1727,4,1730,29],"11093":[1727,4,1730,29],"11094":[1728,28,1728,50],"11097":[1728,28,1728,57],"11098":[1739,8,1739,12],"1111":[312,4,312,23],"11111":[1728,28,1728,57],"11112":[1728,28,1728,57],"11113":[1728,28,1728,57],"11114":[1728,28,1728,57],"11115":[1728,8,1728,25],"11117":[1728,8,1728,57],"11118":[1727,4,1730,29],"11119":[1733,45,1733,60],"11120":[1733,4,1733,19],"11122":[1733,20,1733,30],"11123":[1733,4,1733,31],"11125":[1733,4,1733,31],"11126":[1733,4,1733,31],"11128":[1733,4,1733,31],"11129":[1733,4,1733,31],"1113":[312,4,312,30],"11131":[1733,4,1733,31],"11133":[1733,4,1733,31],"11137":[1733,4,1733,42],"11138":[1733,4,1733,42],"11139":[1733,4,1733,42],"1114":[313,4,313,52],"11140":[1733,4,1733,60],"11141":[1734,22,1734,37],"11142":[1734,4,1734,19],"11144":[1734,4,1734,37],"11145":[1737,8,1737,18],"11146":[1736,4,1746,5],"11187":[1740,8,1740,19],"11195":[1741,8,1741,23],"11197":[1741,24,1741,34],"11198":[1741,8,1741,35],"112":[264,4,264,21],"11200":[1741,8,1741,35],"11201":[1741,8,1741,35],"11203":[1741,8,1741,35],"11204":[1741,8,1741,35],"11206":[1741,8,1741,35],"11208":[1741,8,1741,35],"11212":[1741,8,1741,45],"11213":[1741,8,1741,45],"11214":[1741,8,1741,45],"11220":[1742,8,1742,23],"11222":[1742,24,1742,34],"11223":[1742,8,1742,35],"11225":[1742,8,1742,35],"11226":[1742,8,1742,35],"11228":[1742,8,1742,35],"11229":[1742,8,1742,35],"11231":[1742,8,1742,35],"11233":[1742,8,1742,35],"11237":[1742,8,1742,45],"11238":[1742,8,1742,45],"11239":[1742,8,1742,45],"11245":[1743,8,1743,23],"11247":[1743,24,1743,34],"11248":[1743,8,1743,35],"11250":[1743,8,1743,35],"11251":[1743,8,1743,35],"11253":[1743,8,1743,35],"11254":[1743,8,1743,35],"11256":[1743,8,1743,35],"11258":[1743,8,1743,35],"11262":[1743,8,1743,45],"11263":[1743,8,1743,45],"11264":[1743,8,1743,45],"11270":[1744,8,1744,14],"11278":[1745,8,1745,23],"11280":[1745,24,1745,34],"11281":[1745,8,1745,35],"11283":[1745,8,1745,35],"11284":[1745,8,1745,35],"11286":[1745,8,1745,35],"11287":[1745,8,1745,35],"11289":[1745,8,1745,35],"11291":[1745,8,1745,35],"11295":[1745,8,1745,45],"11296":[1745,8,1745,45],"11297":[1745,8,1745,45],"11306":[1736,4,1746,5],"11309":[1736,4,1746,5],"11310":[1748,7,1748,22],"11312":[1748,23,1748,33],"11313":[1748,7,1748,34],"11315":[1748,7,1748,34],"11316":[1748,7,1748,34],"11318":[1748,7,1748,34],"11319":[1748,7,1748,34],"11321":[1748,7,1748,34],"11323":[1748,7,1748,34],"11327":[1748,7,1748,44],"11328":[1748,7,1748,44],"11329":[1748,7,1748,44],"11330":[1748,7,1748,49],"11331":[1748,7,1748,75],"11332":[1748,7,1748,75],"11335":[1748,7,1748,75],"11336":[1748,53,1748,75],"11338":[1748,7,1748,75],"11339":[1748,7,1748,75],"11342":[1748,7,1748,75],"11343":[1748,7,1748,75],"11344":[1748,7,1748,75],"11346":[1748,7,1748,75],"11347":[1748,4,1754,19],"11350":[1748,4,1754,19],"11351":[1754,8,1754,19],"11353":[1754,15,1754,19],"11356":[1754,8,1754,19],"11359":[1754,8,1754,19],"11363":[1748,4,1754,19],"11364":[1748,4,1754,19],"11365":[1751,8,1751,58],"11375":[1751,15,1751,58],"11386":[1751,15,1751,35],"11389":[1751,15,1751,58],"11392":[1751,15,1751,58],"11403":[1751,15,1751,58],"11408":[1751,15,1751,58],"11411":[1751,15,1751,58],"11412":[1751,15,1751,58],"11415":[1751,8,1751,58],"11418":[1751,8,1751,58],"11421":[1642,0,1754,19],"11429":[1758,0,1781,59],"11432":[1758,0,1781,59],"11433":[1758,44,1758,55],"11466":[1758,26,1758,41],"11469":[1758,26,1758,41],"1147":[313,29,313,51],"11474":[1758,0,1781,59],"11482":[1758,0,1781,59],"11485":[1758,0,1781,59],"11488":[1758,26,1758,41],"11489":[1758,26,1758,41],"11492":[1758,26,1758,41],"11505":[1758,10,1758,24],"11508":[1758,10,1758,24],"11509":[1771,25,1771,40],"11511":[1771,11,1771,40],"11512":[1771,11,1771,21],"11513":[1771,4,1771,40],"11514":[1771,4,1771,40],"11517":[1771,4,1771,40],"11518":[1773,21,1773,27],"11521":[1773,4,1773,27],"11522":[1773,4,1773,27],"11525":[1773,4,1773,27],"11526":[1774,16,1774,27],"11559":[1774,7,1774,12],"1156":[313,4,313,52],"11562":[1774,7,1774,27],"11563":[1774,4,1775,44],"11564":[1774,4,1775,44],"11567":[1774,4,1775,44],"11576":[1775,16,1775,44],"11577":[1775,39,1775,43],"1159":[313,4,313,52],"11592":[1775,16,1775,28],"11598":[1775,16,1775,44],"1160":[314,25,314,28],"11601":[1775,16,1775,44],"11612":[1775,16,1775,44],"11617":[1775,16,1775,44],"1162":[314,4,314,22],"11620":[1775,16,1775,44],"11621":[1775,16,1775,44],"11624":[1775,8,1775,44],"11625":[1775,8,1775,13],"11628":[1775,8,1775,44],"11629":[1774,4,1775,44],"11630":[1777,16,1777,34],"11632":[1777,7,1777,34],"11633":[1777,7,1777,12],"11636":[1777,7,1777,34],"11637":[1777,4,1778,59],"11638":[1777,4,1778,59],"1164":[314,4,314,28],"11641":[1777,4,1778,59],"1165":[315,4,315,50],"11650":[1778,16,1778,42],"11651":[1778,37,1778,41],"11666":[1778,16,1778,26],"11671":[1778,16,1778,42],"11674":[1778,16,1778,42],"11685":[1778,16,1778,42],"11690":[1778,16,1778,42],"11693":[1778,16,1778,42],"11694":[1778,16,1778,42],"11697":[1778,16,1778,59],"11698":[1778,45,1778,59],"11711":[1778,16,1778,59],"11712":[1778,16,1778,59],"11713":[1778,16,1778,59],"11714":[1778,16,1778,59],"11715":[1778,8,1778,13],"11718":[1778,8,1778,59],"11719":[1777,4,1778,59],"11720":[1780,14,1780,19],"11723":[1780,4,1780,27],"11724":[1780,4,1780,27],"11757":[1780,21,1780,26],"11767":[1780,4,1780,27],"11770":[1780,4,1780,27],"11771":[1781,29,1781,34],"11778":[1781,36,1781,51],"11784":[1781,53,1781,58],"11794":[1781,4,1781,59],"11797":[1781,4,1781,59],"11800":[1758,0,1781,59],"11808":[56,6,56,24],"11811":[56,6,56,24],"11922":[56,6,56,24],"11925":[56,6,56,24],"11933":[57,8,57,26],"11936":[57,8,57,26],"1198":[315,28,315,49],"12002":[57,8,57,26],"12005":[57,8,57,26],"12013":[58,10,58,25],"12016":[58,10,58,25],"12025":[58,10,58,25],"12028":[58,10,58,25],"12036":[60,11,60,44],"12039":[60,11,60,44],"1206":[315,4,315,50],"12076":[60,11,60,44],"12079":[60,11,60,44],"12087":[61,11,61,62],"1209":[315,4,315,50],"12090":[61,11,61,62],"1210":[316,22,316,37],"1211":[316,4,316,19],"1213":[316,4,316,37],"1214":[317,22,317,37],"1215":[317,4,317,19],"12158":[61,11,61,62],"12161":[61,11,61,62],"12169":[62,13,62,28],"1217":[317,4,317,37],"12172":[62,13,62,28],"1218":[318,35,318,92],"12181":[62,13,62,28],"12184":[62,13,62,28],"12192":[64,7,64,20],"12195":[64,7,64,20],"12204":[64,7,64,20],"12207":[64,7,64,20],"12215":[65,12,65,27],"12218":[65,12,65,27],"12227":[65,12,65,27],"12230":[65,12,65,27],"12238":[66,12,66,27],"12241":[66,12,66,27],"1225":[318,4,318,32],"12250":[66,12,66,27],"12253":[66,12,66,27],"12261":[67,10,67,25],"12264":[67,10,67,25],"1227":[318,4,318,92],"12273":[67,10,67,25],"12276":[67,10,67,25],"12284":[214,12,214,52],"12287":[214,12,214,52],"1229":[258,0,318,92],"1237":[324,0,335,22],"12395":[214,12,214,52],"12398":[214,12,214,52],"124":[265,4,265,23],"1240":[324,0,335,22],"12406":[226,17,226,52],"12409":[226,17,226,52],"12431":[226,17,226,52],"12434":[226,17,226,52],"12442":[228,19,228,31],"12445":[228,19,228,31],"12454":[228,19,228,31],"12457":[228,19,228,31],"12465":[230,14,230,29],"12468":[230,14,230,29],"12477":[230,14,230,29],"12480":[230,14,230,29],"12488":[231,11,231,26],"12491":[231,11,231,26],"12500":[231,11,231,26],"12503":[231,11,231,26],"1251":[335,11,335,22],"12511":[232,11,232,26],"12514":[232,11,232,26],"12523":[232,11,232,26],"12526":[232,11,232,26],"12534":[233,11,233,26],"12537":[233,11,233,26],"12546":[233,11,233,26],"12549":[233,11,233,26],"12557":[234,12,234,27],"12560":[234,12,234,27],"12569":[234,12,234,27],"12572":[234,12,234,27],"12580":[235,12,235,27],"12583":[235,12,235,27],"12592":[235,12,235,27],"12595":[235,12,235,27],"12603":[236,14,236,29],"12606":[236,14,236,29],"12615":[236,14,236,29],"12618":[236,14,236,29],"12626":[237,25,237,40],"12629":[237,25,237,40],"12638":[237,25,237,40],"12641":[237,25,237,40],"12649":[238,9,238,24],"12652":[238,9,238,24],"12661":[238,9,238,24],"12664":[238,9,238,24],"12672":[240,15,240,30],"12675":[240,15,240,30],"12684":[240,15,240,30],"12687":[240,15,240,30],"12695":[242,16,242,31],"12698":[242,16,242,31],"127":[265,4,265,23],"12707":[242,16,242,31],"12710":[242,16,242,31],"12718":[252,8,252,41],"12721":[252,8,252,41],"12758":[252,8,252,41],"12761":[252,8,252,41],"12769":[339,0,348,5],"12770":[341,8,347,9],"12772":[342,12,342,28],"12822":[343,30,343,43],"12859":[343,30,343,43],"12860":[343,30,343,43],"12869":[343,12,343,56],"1287":[335,11,335,22],"12870":[343,12,343,56],"12871":[343,12,343,56],"1288":[335,11,335,22],"12889":[344,30,344,41],"12926":[344,30,344,41],"12927":[344,30,344,41],"12936":[344,12,344,54],"12937":[344,12,344,54],"12938":[344,12,344,54],"12951":[345,20,345,28],"12964":[346,20,346,24],"12985":[341,8,347,9],"12986":[341,8,347,9],"12993":[340,11,348,5],"12994":[340,11,348,5],"12995":[340,11,348,5],"12997":[340,4,348,5],"12998":[340,4,348,5],"13000":[600,0,613,58],"13001":[605,8,609,9],"13007":[606,12,606,50],"13044":[606,12,606,50],"13045":[606,12,606,50],"13071":[607,20,607,28],"13073":[607,12,607,38],"13086":[608,20,608,26],"13088":[608,12,608,36],"13109":[605,8,609,9],"13125":[604,8,604,13],"13130":[603,26,611,5],"13133":[603,26,611,5],"13144":[603,26,611,5],"13188":[603,4,611,5],"13189":[603,4,611,5],"13190":[612,23,612,24],"13192":[612,11,612,19],"13194":[612,7,612,20],"13195":[612,7,612,24],"13196":[612,4,613,58],"13200":[612,4,613,58],"13204":[613,23,613,31],"13217":[613,8,613,58],"13222":[613,40,613,58],"13259":[613,40,613,58],"13260":[613,40,613,58],"13262":[613,8,613,58],"13312":[600,0,613,58],"13314":[617,0,631,58],"13315":[622,8,627,9],"13322":[623,12,623,62],"13359":[623,12,623,62],"13360":[623,12,623,62],"13387":[624,20,624,26],"13389":[624,12,624,36],"13402":[625,20,625,28],"13404":[625,12,625,38],"13417":[626,20,626,26],"13419":[626,12,626,36],"13440":[622,8,627,9],"13456":[621,8,621,13],"13461":[620,26,629,5],"13464":[620,26,629,5],"13475":[620,26,629,5],"13519":[620,4,629,5],"13520":[620,4,629,5],"13521":[630,23,630,24],"13523":[630,11,630,19],"13525":[630,7,630,20],"13526":[630,7,630,24],"13527":[630,4,631,58],"13531":[630,4,631,58],"13535":[631,23,631,31],"1354":[335,4,335,22],"13548":[631,8,631,58],"13554":[631,40,631,58],"1357":[324,0,335,22],"13591":[631,40,631,58],"13592":[631,40,631,58],"13595":[631,8,631,58],"13647":[617,0,631,58],"13649":[635,0,642,42],"1365":[352,0,353,34],"13650":[639,11,639,19],"13652":[639,11,639,47],"13653":[639,28,639,32],"13657":[639,34,639,46],"1368":[352,0,353,34],"1369":[353,4,353,34],"13713":[639,11,639,47],"13714":[639,11,639,47],"13715":[639,4,639,47],"13716":[639,4,639,47],"13719":[639,4,639,47],"13720":[640,4,640,18],"13722":[640,19,640,25],"13724":[640,4,640,26],"13725":[640,4,640,26],"13727":[640,4,640,26],"13728":[640,4,640,26],"13730":[640,4,640,26],"13731":[640,4,640,26],"13733":[640,4,640,26],"13735":[640,4,640,26],"13737":[640,4,640,36],"13738":[640,30,640,36],"13751":[640,4,640,36],"13752":[640,4,640,36],"13753":[640,4,640,36],"13754":[640,4,640,36],"13756":[640,4,640,36],"13757":[640,4,640,36],"13758":[641,4,641,18],"13760":[641,19,641,27],"13762":[641,4,641,28],"13763":[641,4,641,28],"13765":[641,4,641,28],"13766":[641,4,641,28],"13768":[641,4,641,28],"13769":[641,4,641,28],"1377":[353,11,353,34],"13771":[641,4,641,28],"13773":[641,4,641,28],"13775":[641,4,641,38],"13776":[641,32,641,38],"13791":[641,4,641,38],"13792":[641,4,641,38],"13793":[641,4,641,38],"13794":[641,4,641,38],"13796":[641,4,641,38],"13797":[641,4,641,38],"13798":[642,25,642,33],"1380":[353,11,353,34],"13800":[642,4,642,42],"13801":[642,17,642,23],"13803":[642,4,642,42],"13804":[642,4,642,42],"1381":[353,11,353,34],"1382":[353,11,353,34],"13837":[642,35,642,41],"13845":[642,4,642,42],"13847":[642,4,642,42],"13849":[782,0,784,42],"13850":[784,11,784,25],"13852":[784,11,784,42],"13853":[784,28,784,42],"1386":[352,0,353,34],"13868":[784,11,784,42],"13869":[784,11,784,42],"13870":[784,11,784,42],"13871":[784,11,784,42],"13873":[784,4,784,42],"13874":[784,4,784,42],"13876":[802,0,813,16],"13877":[803,33,803,48],"13878":[803,51,803,66],"13891":[803,33,803,66],"13892":[803,33,803,66],"13893":[803,33,803,66],"13894":[803,33,803,66],"13895":[803,70,803,98],"13914":[803,32,803,98],"13915":[803,32,803,98],"13916":[803,32,803,98],"13917":[803,32,803,98],"13918":[803,4,803,98],"13920":[803,4,803,98],"13921":[805,26,805,49],"13930":[805,7,805,23],"13932":[805,7,805,49],"13933":[805,7,805,49],"13934":[805,4,813,16],"13937":[805,4,813,16],"13938":[813,15,813,16],"1394":[356,0,364,20],"13941":[813,8,813,16],"13942":[813,8,813,16],"13943":[813,8,813,16],"13946":[813,8,813,16],"13947":[802,0,813,16],"13950":[805,4,813,16],"13951":[805,4,813,16],"13952":[806,32,806,49],"13954":[806,8,806,49],"13955":[806,8,806,49],"13957":[806,8,806,49],"13958":[807,15,807,27],"13960":[807,15,811,13],"13961":[808,16,808,32],"13963":[808,16,809,30],"13964":[809,18,809,30],"1397":[356,0,364,20],"13983":[808,16,809,30],"13984":[808,16,809,30],"13985":[808,16,809,30],"13986":[808,16,809,30],"13987":[810,18,810,41],"13999":[808,16,810,41],"140":[259,4,259,18],"14000":[808,16,810,41],"14001":[808,16,810,41],"14002":[808,16,810,41],"14013":[807,15,811,13],"14014":[807,15,811,13],"14015":[807,15,811,13],"14016":[807,15,811,13],"14018":[807,8,811,13],"14019":[807,8,811,13],"14020":[807,8,811,13],"14023":[807,8,811,13],"14024":[802,0,813,16],"14026":[817,0,818,62],"1403":[356,12,356,28],"14032":[818,11,818,30],"14035":[818,11,818,30],"14036":[818,11,818,30],"14037":[818,11,818,30],"14039":[818,11,818,62],"14045":[818,33,818,62],"14048":[818,33,818,62],"14049":[818,33,818,62],"14050":[818,33,818,62],"14063":[818,11,818,62],"14064":[818,11,818,62],"14065":[818,11,818,62],"14066":[818,11,818,62],"14068":[818,4,818,62],"14069":[818,4,818,62],"14071":[821,0,843,17],"14072":[826,22,826,23],"14074":[826,4,826,23],"14077":[826,4,826,23],"14078":[828,27,828,43],"14080":[828,4,828,43],"14081":[828,4,828,43],"14084":[828,4,828,43],"14085":[829,21,829,22],"14087":[829,7,829,18],"14090":[829,7,829,22],"14091":[829,7,829,22],"14092":[829,4,835,23],"14095":[829,4,835,23],"14096":[835,17,835,23],"14098":[835,8,835,23],"14099":[835,8,835,14],"14102":[835,8,835,23],"14103":[829,4,835,23],"14106":[829,4,835,23],"14107":[829,4,835,23],"14108":[832,18,832,24],"14110":[832,18,832,38],"14111":[832,27,832,38],"14131":[832,18,832,38],"14132":[832,18,832,38],"14133":[832,18,832,38],"14134":[832,18,832,38],"14141":[832,41,832,58],"14144":[832,41,832,58],"14145":[832,41,832,58],"14146":[832,41,832,58],"14159":[832,18,832,58],"14160":[832,18,832,58],"14161":[832,18,832,58],"14162":[832,18,832,58],"14163":[832,8,832,14],"14166":[832,8,832,58],"14167":[829,4,835,23],"14168":[836,21,836,22],"14170":[836,11,836,17],"14173":[836,11,836,22],"14175":[836,4,836,22],"14178":[836,4,836,22],"14179":[839,23,839,34],"14182":[839,23,839,43],"14183":[839,37,839,43],"14199":[839,23,839,43],"142":[259,4,259,18],"14200":[839,23,839,43],"14201":[839,23,839,43],"14202":[839,23,839,43],"14203":[839,4,839,20],"14205":[839,4,839,43],"14206":[840,4,840,18],"14208":[840,19,840,21],"14210":[840,4,840,22],"14211":[840,4,840,22],"14213":[840,4,840,22],"14214":[840,4,840,22],"14216":[840,4,840,22],"14217":[840,4,840,22],"14219":[840,4,840,22],"14221":[840,4,840,22],"14223":[840,4,840,32],"14224":[840,26,840,32],"14240":[840,4,840,32],"14241":[840,4,840,32],"14242":[840,4,840,32],"14243":[840,4,840,32],"14245":[840,4,840,32],"14246":[840,4,840,32],"14247":[841,33,841,34],"14249":[841,4,841,42],"14250":[841,17,841,29],"14252":[841,4,841,42],"14285":[841,35,841,41],"14295":[841,4,841,42],"14298":[841,4,841,42],"14299":[843,11,843,17],"1430":[356,12,356,28],"14304":[843,4,843,17],"14305":[843,4,843,17],"14307":[913,0,925,5],"14308":[915,7,915,23],"1431":[363,25,363,40],"14310":[915,7,915,28],"14311":[915,4,916,21],"14314":[915,4,916,21],"14315":[916,15,916,21],"14319":[916,8,916,21],"14320":[916,8,916,21],"14321":[916,8,916,21],"14324":[916,8,916,21],"14325":[915,4,916,21],"14326":[922,8,922,14],"14328":[922,8,923,27],"1433":[363,11,363,40],"14334":[923,10,923,27],"14337":[923,10,923,27],"14338":[923,10,923,27],"14339":[923,10,923,27],"1434":[363,11,363,21],"1435":[363,4,363,40],"14358":[922,8,923,27],"14359":[922,8,923,27],"1436":[363,4,363,40],"14360":[922,8,923,27],"14361":[922,8,923,27],"14362":[924,10,924,26],"14374":[922,8,924,26],"14375":[922,8,924,26],"14376":[922,8,924,26],"14377":[922,8,924,26],"14379":[921,4,925,5],"14380":[921,4,925,5],"14381":[913,0,925,5],"14383":[930,0,942,16],"1439":[363,4,363,40],"14390":[933,26,933,43],"14393":[933,26,933,43],"14394":[933,26,933,43],"14395":[933,26,933,43],"14398":[933,4,933,43],"14399":[933,4,933,43],"1440":[364,16,364,20],"14401":[933,4,933,43],"14402":[934,20,934,21],"14404":[934,7,934,17],"14406":[934,7,934,21],"14407":[934,7,934,21],"14408":[934,4,942,16],"14411":[934,4,942,16],"14412":[942,15,942,16],"14415":[942,8,942,16],"14416":[942,8,942,16],"14417":[942,8,942,16],"1442":[364,4,364,20],"14420":[942,8,942,16],"14421":[930,0,942,16],"14424":[934,4,942,16],"14425":[934,4,942,16],"14426":[937,12,937,18],"14428":[937,12,938,30],"14429":[938,14,938,30],"1444":[364,4,364,13],"14448":[937,12,938,30],"14449":[937,12,938,30],"14450":[937,12,938,30],"14451":[937,12,938,30],"14452":[939,14,939,24],"14464":[937,12,939,24],"14465":[937,12,939,24],"14466":[937,12,939,24],"14467":[937,12,939,24],"14469":[936,8,940,9],"14470":[936,8,940,9],"14471":[936,8,940,9],"14474":[936,8,940,9],"14475":[930,0,942,16],"14477":[973,0,992,26],"14478":[975,25,975,40],"14480":[975,41,975,49],"14482":[975,25,975,50],"14483":[975,25,975,50],"14485":[975,25,975,50],"14486":[975,25,975,50],"14488":[975,25,975,50],"14489":[975,25,975,50],"14491":[975,25,975,50],"14493":[975,25,975,50],"14497":[975,25,975,60],"14498":[975,25,975,60],"14499":[975,25,975,60],"14500":[975,4,975,60],"14501":[975,4,975,60],"14503":[975,4,975,60],"14504":[976,24,976,28],"14506":[976,11,976,28],"14507":[976,11,976,20],"14509":[976,11,976,28],"14511":[976,4,976,28],"14514":[976,4,976,28],"14515":[979,25,979,26],"14517":[979,7,979,21],"14519":[979,7,979,26],"14521":[979,4,988,38],"14524":[979,4,988,38],"14525":[984,12,984,16],"14527":[984,12,984,33],"14528":[984,19,984,33],"14547":[984,12,984,33],"14548":[984,12,984,33],"14549":[984,12,984,33],"14550":[984,12,984,33],"14551":[984,36,984,50],"14563":[984,12,984,50],"14564":[984,12,984,50],"14565":[984,12,984,50],"14566":[984,12,984,50],"14567":[985,12,985,27],"14569":[985,28,985,36],"14571":[985,12,985,37],"14572":[985,12,985,37],"14574":[985,12,985,37],"14575":[985,12,985,37],"14577":[985,12,985,37],"14578":[985,12,985,37],"14580":[985,12,985,37],"14582":[985,12,985,37],"14586":[985,12,985,47],"14587":[985,12,985,47],"14588":[985,12,985,47],"14599":[982,32,986,9],"14600":[982,32,986,9],"14601":[982,32,986,9],"14602":[982,32,986,9],"14603":[982,8,986,9],"14605":[982,8,986,9],"14606":[987,8,987,23],"14608":[987,24,987,32],"14610":[987,8,987,33],"14611":[987,8,987,33],"14613":[987,8,987,33],"14614":[987,8,987,33],"14616":[987,8,987,33],"14617":[987,8,987,33],"14619":[987,8,987,33],"14621":[987,8,987,33],"14625":[987,8,987,43],"14626":[987,8,987,43],"14627":[987,8,987,43],"14629":[987,8,987,59],"14630":[987,47,987,59],"14643":[987,8,987,59],"14644":[987,8,987,59],"14645":[987,8,987,59],"14646":[987,8,987,59],"14648":[987,8,987,59],"14649":[987,8,987,59],"14650":[988,8,988,22],"14652":[988,8,988,38],"14653":[988,26,988,38],"14666":[988,8,988,38],"14667":[988,8,988,38],"14668":[988,8,988,38],"14669":[988,8,988,38],"14670":[988,8,988,22],"14672":[988,8,988,38],"14673":[979,4,988,38],"14674":[990,4,990,19],"14676":[990,20,990,28],"14678":[990,4,990,29],"14679":[990,4,990,29],"14681":[990,4,990,29],"14682":[990,4,990,29],"14684":[990,4,990,29],"14685":[990,4,990,29],"14687":[990,4,990,29],"14689":[990,4,990,29],"14693":[990,4,990,39],"14694":[990,4,990,39],"14695":[990,4,990,39],"14697":[990,4,990,47],"14698":[990,43,990,47],"14713":[990,4,990,47],"14714":[990,4,990,47],"14715":[990,4,990,47],"14716":[990,4,990,47],"14718":[990,4,990,47],"14719":[990,4,990,47],"14720":[991,42,991,51],"14722":[991,42,991,58],"14723":[991,54,991,58],"14736":[991,42,991,58],"14737":[991,42,991,58],"14738":[991,42,991,58],"14739":[991,42,991,58],"14740":[991,4,991,19],"14742":[991,20,991,28],"14744":[991,4,991,29],"14745":[991,4,991,29],"14747":[991,4,991,29],"14748":[991,4,991,29],"14750":[991,4,991,29],"14751":[991,4,991,29],"14753":[991,4,991,29],"14755":[991,4,991,29],"14759":[991,4,991,39],"14760":[991,4,991,39],"14761":[991,4,991,39],"14762":[991,4,991,58],"14763":[992,4,992,18],"14765":[992,4,992,26],"14766":[992,22,992,26],"14779":[992,4,992,26],"14780":[992,4,992,26],"14781":[992,4,992,26],"14782":[992,4,992,26],"14783":[992,4,992,18],"14785":[992,4,992,26],"14787":[1145,0,1157,52],"14788":[1150,22,1150,23],"14790":[1150,4,1150,23],"14792":[1150,4,1150,23],"14793":[1151,4,1157,52],"14795":[1151,4,1157,52],"14797":[1151,4,1157,52],"14798":[1151,4,1157,52],"14803":[1152,49,1152,52],"14808":[1152,28,1152,53],"14809":[1152,28,1152,53],"14810":[1152,28,1152,53],"14811":[1152,28,1152,53],"14814":[1152,28,1152,53],"14815":[1152,28,1152,48],"14817":[1152,28,1152,53],"14818":[1152,8,1152,53],"14819":[1152,8,1152,53],"14821":[1152,8,1152,53],"14822":[1153,11,1153,19],"14824":[1153,11,1153,35],"14825":[1153,8,1157,52],"14826":[1153,8,1157,52],"14829":[1153,8,1157,52],"14830":[1155,22,1155,23],"14832":[1155,13,1155,19],"14834":[1155,13,1155,23],"14835":[1155,13,1155,23],"14836":[1155,8,1157,52],"14837":[1151,4,1157,52],"14840":[1155,8,1157,52],"14841":[1156,49,1156,57],"14843":[1156,12,1156,57],"14844":[1156,33,1156,36],"14846":[1156,33,1156,45],"14847":[1156,39,1156,45],"14860":[1156,33,1156,45],"14861":[1156,33,1156,45],"14862":[1156,33,1156,45],"14863":[1156,33,1156,45],"14866":[1156,12,1156,46],"14867":[1156,12,1156,46],"14868":[1156,12,1156,46],"14869":[1156,12,1156,46],"14872":[1156,12,1156,46],"14873":[1156,12,1156,32],"14875":[1156,12,1156,46],"14876":[1156,12,1156,57],"14877":[1157,40,1157,52],"14879":[1157,33,1157,36],"14884":[1157,12,1157,37],"14885":[1157,12,1157,37],"14886":[1157,12,1157,37],"14887":[1157,12,1157,37],"14890":[1157,12,1157,37],"14891":[1157,12,1157,32],"14893":[1157,12,1157,37],"14894":[1157,12,1157,52],"14895":[1151,4,1157,52],"14898":[1153,8,1157,52],"14899":[1153,8,1157,52],"14900":[1154,12,1154,18],"14902":[1154,12,1154,23],"14903":[1154,22,1154,23],"14917":[1154,12,1154,23],"14918":[1154,12,1154,23],"14919":[1154,12,1154,23],"14920":[1154,12,1154,23],"14921":[1154,12,1154,18],"14923":[1154,12,1154,23],"14924":[1151,4,1157,52],"14925":[1151,4,1157,52],"14927":[1151,4,1157,52],"14928":[1151,4,1157,52],"14929":[1151,4,1157,52],"14930":[1151,4,1157,52],"14931":[1151,4,1157,52],"14934":[1151,4,1157,52],"14935":[1151,4,1157,52],"14936":[1151,4,1157,52],"14938":[1310,0,1313,33],"14939":[1311,4,1311,18],"14941":[1311,4,1311,57],"14942":[1311,22,1311,37],"14944":[1311,38,1311,46],"14946":[1311,22,1311,47],"14947":[1311,22,1311,47],"14949":[1311,22,1311,47],"14950":[1311,22,1311,47],"14952":[1311,22,1311,47],"14953":[1311,22,1311,47],"14955":[1311,22,1311,47],"14957":[1311,22,1311,47],"14961":[1311,22,1311,57],"14962":[1311,22,1311,57],"14963":[1311,22,1311,57],"14975":[1311,4,1311,57],"14976":[1311,4,1311,57],"14977":[1311,4,1311,57],"14978":[1311,4,1311,57],"14979":[1311,4,1311,18],"1498":[364,4,364,20],"14981":[1311,4,1311,57],"14982":[1312,42,1312,43],"14984":[1312,4,1312,19],"14986":[1312,20,1312,28],"14988":[1312,4,1312,29],"14989":[1312,4,1312,29],"14991":[1312,4,1312,29],"14992":[1312,4,1312,29],"14994":[1312,4,1312,29],"14995":[1312,4,1312,29],"14997":[1312,4,1312,29],"14999":[1312,4,1312,29],"1500":[356,0,364,20],"15003":[1312,4,1312,39],"15004":[1312,4,1312,39],"15005":[1312,4,1312,39],"15006":[1312,4,1312,43],"15007":[1313,24,1313,32],"15009":[1313,4,1313,33],"15010":[1313,4,1313,33],"15045":[1313,4,1313,33],"15047":[1313,4,1313,33],"15049":[1443,0,1460,54],"15050":[1445,7,1445,21],"15052":[1445,7,1445,26],"15053":[1445,4,1446,50],"15056":[1445,4,1446,50],"15057":[1446,15,1446,30],"15059":[1446,31,1446,39],"15061":[1446,15,1446,40],"15062":[1446,15,1446,40],"15064":[1446,15,1446,40],"15065":[1446,15,1446,40],"15067":[1446,15,1446,40],"15068":[1446,15,1446,40],"15070":[1446,15,1446,40],"15072":[1446,15,1446,40],"15076":[1446,15,1446,50],"15077":[1446,15,1446,50],"15078":[1446,15,1446,50],"1508":[368,0,376,24],"15081":[1446,8,1446,50],"15082":[1446,8,1446,50],"15083":[1446,8,1446,50],"15086":[1446,8,1446,50],"15087":[1445,4,1446,50],"15088":[1449,8,1449,23],"15090":[1449,24,1449,32],"15092":[1449,8,1449,33],"15093":[1449,8,1449,33],"15095":[1449,8,1449,33],"15096":[1449,8,1449,33],"15098":[1449,8,1449,33],"15099":[1449,8,1449,33],"15101":[1449,8,1449,33],"15103":[1449,8,1449,33],"15107":[1449,8,1449,43],"15108":[1449,8,1449,43],"15109":[1449,8,1449,43],"1511":[368,0,376,24],"15110":[1449,8,1450,29],"15116":[1450,10,1450,29],"15119":[1450,10,1450,29],"15120":[1450,10,1450,29],"15121":[1450,10,1450,29],"15140":[1449,8,1450,29],"15141":[1449,8,1450,29],"15142":[1449,8,1450,29],"15143":[1449,8,1450,29],"15144":[1451,10,1451,17],"15150":[1449,8,1451,17],"15151":[1449,8,1451,17],"15152":[1449,8,1451,17],"15153":[1449,8,1451,17],"15154":[1448,4,1452,5],"15156":[1448,4,1452,5],"15157":[1453,34,1453,49],"15159":[1453,50,1453,58],"15161":[1453,34,1453,59],"15162":[1453,34,1453,59],"15164":[1453,34,1453,59],"15165":[1453,34,1453,59],"15167":[1453,34,1453,59],"15168":[1453,34,1453,59],"1517":[368,14,368,32],"15170":[1453,34,1453,59],"15172":[1453,34,1453,59],"15176":[1453,34,1453,69],"15177":[1453,34,1453,69],"15178":[1453,34,1453,69],"15179":[1453,4,1453,69],"15180":[1453,4,1453,69],"15182":[1453,4,1453,69],"15183":[1455,7,1455,29],"15186":[1455,4,1460,54],"15189":[1455,4,1460,54],"15190":[1457,31,1457,49],"15192":[1457,9,1457,49],"15193":[1457,9,1457,27],"15195":[1457,9,1457,49],"15197":[1457,4,1460,54],"15198":[1457,4,1460,54],"15201":[1457,4,1460,54],"15202":[1460,15,1460,33],"15204":[1460,15,1460,54],"15205":[1460,36,1460,54],"15218":[1460,15,1460,54],"15219":[1460,15,1460,54],"15220":[1460,15,1460,54],"15221":[1460,15,1460,54],"15223":[1460,8,1460,54],"15224":[1460,8,1460,54],"15225":[1460,8,1460,54],"15228":[1460,8,1460,54],"15229":[1443,0,1460,54],"15232":[1457,4,1460,54],"15233":[1457,4,1460,54],"15234":[1458,15,1458,16],"15237":[1458,8,1458,16],"15238":[1458,8,1458,16],"15239":[1458,8,1458,16],"15242":[1458,8,1458,16],"15243":[1443,0,1460,54],"15246":[1455,4,1460,54],"15247":[1455,4,1460,54],"15248":[1456,15,1456,33],"15252":[1456,8,1456,33],"15253":[1456,8,1456,33],"15254":[1456,8,1456,33],"15257":[1456,8,1456,33],"15258":[1443,0,1460,54],"15260":[1478,0,1514,57],"15261":[1480,7,1480,29],"15263":[1480,4,1481,16],"15264":[1480,4,1481,16],"15265":[1480,4,1481,16],"15268":[1480,4,1481,16],"15269":[1481,15,1481,16],"15272":[1481,8,1481,16],"15273":[1481,8,1481,16],"15274":[1481,8,1481,16],"15277":[1481,8,1481,16],"15278":[1480,4,1481,16],"15284":[1482,33,1482,52],"15287":[1482,33,1482,52],"15288":[1482,33,1482,52],"15289":[1482,33,1482,52],"15291":[1482,4,1482,52],"15292":[1482,4,1482,52],"15294":[1482,4,1482,52],"15295":[1483,32,1483,46],"15297":[1483,32,1483,66],"15298":[1483,49,1483,66],"15317":[1483,32,1483,66],"15318":[1483,32,1483,66],"15319":[1483,32,1483,66],"15320":[1483,32,1483,66],"15321":[1483,69,1483,76],"15327":[1483,32,1483,76],"15328":[1483,32,1483,76],"15329":[1483,32,1483,76],"15330":[1483,32,1483,76],"15331":[1483,4,1483,76],"15333":[1483,4,1483,76],"15334":[1484,31,1484,45],"15336":[1484,4,1484,45],"15337":[1484,4,1484,45],"15339":[1484,4,1484,45],"15340":[1485,34,1485,49],"15342":[1485,50,1485,58],"15344":[1485,34,1485,59],"15345":[1485,34,1485,59],"15347":[1485,34,1485,59],"15348":[1485,34,1485,59],"15350":[1485,34,1485,59],"15351":[1485,34,1485,59],"15353":[1485,34,1485,59],"15355":[1485,34,1485,59],"15359":[1485,34,1485,69],"15360":[1485,34,1485,69],"15361":[1485,34,1485,69],"15362":[1485,34,1485,89],"15363":[1485,72,1485,89],"15382":[1485,34,1485,89],"15383":[1485,34,1485,89],"15384":[1485,34,1485,89],"15385":[1485,34,1485,89],"15386":[1485,92,1485,99],"15392":[1485,34,1485,99],"15393":[1485,34,1485,99],"15394":[1485,34,1485,99],"15395":[1485,34,1485,99],"15396":[1485,4,1485,99],"15398":[1485,4,1485,99],"15399":[1486,34,1486,49],"154":[260,4,260,23],"15401":[1486,50,1486,58],"15403":[1486,34,1486,59],"15404":[1486,34,1486,59],"15406":[1486,34,1486,59],"15407":[1486,34,1486,59],"15409":[1486,34,1486,59],"15410":[1486,34,1486,59],"15412":[1486,34,1486,59],"15414":[1486,34,1486,59],"15418":[1486,34,1486,69],"15419":[1486,34,1486,69],"15420":[1486,34,1486,69],"15421":[1486,4,1486,69],"15422":[1486,4,1486,69],"15424":[1486,4,1486,69],"15425":[1487,42,1487,57],"15427":[1487,58,1487,66],"15429":[1487,42,1487,67],"15430":[1487,42,1487,67],"15432":[1487,42,1487,67],"15433":[1487,42,1487,67],"15435":[1487,42,1487,67],"15436":[1487,42,1487,67],"15438":[1487,42,1487,67],"1544":[368,14,368,32],"15440":[1487,42,1487,67],"15444":[1487,42,1487,85],"15445":[1487,42,1487,85],"15446":[1487,42,1487,85],"15447":[1487,4,1487,85],"15448":[1487,4,1487,85],"1545":[375,25,375,40],"15451":[1487,4,1487,85],"15452":[1488,42,1488,57],"15454":[1488,58,1488,66],"15456":[1488,42,1488,67],"15457":[1488,42,1488,67],"15459":[1488,42,1488,67],"15460":[1488,42,1488,67],"15462":[1488,42,1488,67],"15463":[1488,42,1488,67],"15465":[1488,42,1488,67],"15467":[1488,42,1488,67],"1547":[375,11,375,40],"15471":[1488,42,1488,85],"15472":[1488,42,1488,85],"15473":[1488,42,1488,85],"15474":[1488,4,1488,85],"15475":[1488,4,1488,85],"15478":[1488,4,1488,85],"15479":[1491,29,1491,47],"1548":[375,11,375,21],"15481":[1491,7,1491,47],"15482":[1491,7,1491,25],"15484":[1491,7,1491,47],"15486":[1491,7,1491,85],"15487":[1491,7,1491,85],"1549":[375,4,375,40],"15490":[1491,7,1491,85],"15491":[1491,70,1491,85],"15493":[1491,51,1491,85],"15494":[1491,51,1491,66],"15496":[1491,51,1491,85],"15499":[1491,7,1491,85],"1550":[375,4,375,40],"15502":[1491,7,1491,85],"15503":[1491,7,1491,85],"15504":[1491,7,1491,85],"15506":[1491,7,1491,85],"15507":[1491,4,1492,16],"15508":[1491,4,1492,16],"15511":[1491,4,1492,16],"15512":[1492,15,1492,16],"15515":[1492,8,1492,16],"15516":[1492,8,1492,16],"15517":[1492,8,1492,16],"15520":[1492,8,1492,16],"15521":[1491,4,1492,16],"15522":[1495,25,1495,43],"15524":[1495,25,1495,64],"15525":[1495,46,1495,64],"1553":[375,4,375,40],"15538":[1495,25,1495,64],"15539":[1495,25,1495,64],"1554":[376,18,376,24],"15540":[1495,25,1495,64],"15541":[1495,25,1495,64],"15542":[1495,4,1495,64],"15545":[1495,4,1495,64],"15546":[1498,20,1498,29],"15549":[1498,16,1498,65],"15550":[1498,31,1498,46],"15552":[1498,31,1498,64],"15553":[1498,49,1498,64],"1556":[376,4,376,24],"15566":[1498,31,1498,64],"15567":[1498,31,1498,64],"15568":[1498,31,1498,64],"15569":[1498,31,1498,64],"15579":[1498,16,1498,65],"1558":[376,4,376,15],"15580":[1498,16,1498,65],"15581":[1498,16,1498,65],"15582":[1498,16,1498,65],"15583":[1498,4,1498,13],"15586":[1498,4,1498,65],"15587":[1502,20,1502,29],"15590":[1502,16,1502,46],"15591":[1502,31,1502,45],"156":[260,4,260,23],"15603":[1502,16,1502,46],"15604":[1502,16,1502,46],"15605":[1502,16,1502,46],"15606":[1502,16,1502,46],"15607":[1502,4,1502,13],"15610":[1502,4,1502,46],"15611":[1511,19,1511,45],"15614":[1511,7,1511,45],"15615":[1511,7,1511,16],"15618":[1511,7,1511,45],"15619":[1511,7,1511,45],"15620":[1511,4,1514,57],"15623":[1511,4,1514,57],"15624":[1514,19,1514,28],"15627":[1514,15,1514,57],"15628":[1514,30,1514,56],"15641":[1514,15,1514,57],"15642":[1514,15,1514,57],"15643":[1514,15,1514,57],"15644":[1514,15,1514,57],"15646":[1514,8,1514,57],"15647":[1514,8,1514,57],"15648":[1514,8,1514,57],"15651":[1514,8,1514,57],"15652":[1478,0,1514,57],"15655":[1511,4,1514,57],"15656":[1511,4,1514,57],"15657":[1512,15,1512,16],"15660":[1512,8,1512,16],"15661":[1512,8,1512,16],"15662":[1512,8,1512,16],"15665":[1512,8,1512,16],"15666":[1478,0,1514,57],"15668":[1534,0,1550,16],"15669":[1536,35,1536,50],"1567":[376,4,376,24],"15671":[1536,51,1536,59],"15673":[1536,35,1536,60],"15674":[1536,35,1536,60],"15676":[1536,35,1536,60],"15677":[1536,35,1536,60],"15679":[1536,35,1536,60],"15680":[1536,35,1536,60],"15682":[1536,35,1536,60],"15684":[1536,35,1536,60],"15688":[1536,35,1536,71],"15689":[1536,35,1536,71],"1569":[368,0,376,24],"15690":[1536,35,1536,71],"15691":[1536,4,1536,71],"15692":[1536,4,1536,71],"15694":[1536,4,1536,71],"15695":[1537,36,1537,51],"15696":[1537,54,1537,73],"15709":[1537,36,1537,73],"15710":[1537,36,1537,73],"15711":[1537,36,1537,73],"15712":[1537,36,1537,73],"15713":[1537,4,1537,73],"15715":[1537,4,1537,73],"15716":[1538,32,1538,51],"15718":[1538,32,1538,90],"15719":[1538,54,1538,69],"15721":[1538,70,1538,78],"15723":[1538,54,1538,79],"15724":[1538,54,1538,79],"15726":[1538,54,1538,79],"15727":[1538,54,1538,79],"15729":[1538,54,1538,79],"15730":[1538,54,1538,79],"15732":[1538,54,1538,79],"15734":[1538,54,1538,79],"15738":[1538,54,1538,90],"15739":[1538,54,1538,90],"15740":[1538,54,1538,90],"15752":[1538,32,1538,90],"15753":[1538,32,1538,90],"15754":[1538,32,1538,90],"15755":[1538,32,1538,90],"15756":[1538,4,1538,90],"15758":[1538,4,1538,90],"15759":[1541,30,1541,31],"15761":[1541,7,1541,27],"15763":[1541,7,1541,31],"15764":[1541,7,1541,31],"15765":[1541,7,1541,90],"15768":[1541,7,1541,90],"15769":[1541,7,1541,90],"1577":[381,0,393,39],"15771":[1541,7,1541,90],"15774":[1541,7,1541,90],"15775":[1541,7,1541,90],"15776":[1541,55,1541,56],"15778":[1541,36,1541,52],"15780":[1541,36,1541,56],"15781":[1541,36,1541,56],"15782":[1541,7,1541,90],"15785":[1541,7,1541,90],"15788":[1541,7,1541,90],"15791":[1541,7,1541,90],"15792":[1541,7,1541,90],"1580":[381,0,393,39],"15801":[1541,61,1541,90],"15812":[1541,61,1541,79],"15817":[1541,61,1541,90],"15820":[1541,61,1541,90],"15831":[1541,61,1541,90],"15836":[1541,61,1541,90],"15839":[1541,61,1541,90],"15856":[1541,61,1541,90],"15860":[1541,7,1541,90],"15861":[1541,4,1550,16],"15864":[1541,4,1550,16],"15865":[1550,15,1550,16],"15868":[1550,8,1550,16],"15869":[1550,8,1550,16],"15870":[1550,8,1550,16],"15873":[1550,8,1550,16],"15874":[1534,0,1550,16],"15877":[1541,4,1550,16],"15878":[1541,4,1550,16],"15879":[1545,12,1545,27],"15881":[1545,28,1545,36],"15883":[1545,12,1545,37],"15884":[1545,12,1545,37],"15886":[1545,12,1545,37],"15887":[1545,12,1545,37],"15889":[1545,12,1545,37],"15890":[1545,12,1545,37],"15892":[1545,12,1545,37],"15894":[1545,12,1545,37],"15898":[1545,12,1545,47],"15899":[1545,12,1545,47],"15900":[1545,12,1545,47],"15901":[1545,12,1546,34],"15902":[1546,14,1546,34],"1592":[381,18,381,37],"15921":[1545,12,1546,34],"15922":[1545,12,1546,34],"15923":[1545,12,1546,34],"15924":[1545,12,1546,34],"15925":[1547,14,1547,30],"15937":[1545,12,1547,30],"15938":[1545,12,1547,30],"15939":[1545,12,1547,30],"1594":[381,18,381,37],"15940":[1545,12,1547,30],"15942":[1544,8,1548,9],"15943":[1544,8,1548,9],"15944":[1544,8,1548,9],"15947":[1544,8,1548,9],"15948":[1534,0,1550,16],"1595":[391,25,391,40],"15950":[1579,0,1638,20],"15951":[1583,47,1583,62],"15952":[1583,7,1583,22],"15954":[1583,23,1583,31],"15957":[1583,7,1583,32],"15958":[1583,7,1583,32],"15960":[1583,7,1583,32],"15961":[1583,7,1583,32],"15963":[1583,7,1583,32],"15964":[1583,7,1583,32],"15966":[1583,7,1583,32],"15968":[1583,7,1583,32],"1597":[391,11,391,40],"15972":[1583,7,1583,43],"15973":[1583,7,1583,43],"15974":[1583,7,1583,43],"15975":[1583,7,1583,62],"15976":[1583,4,1584,16],"15977":[1583,4,1584,16],"1598":[391,11,391,21],"15980":[1583,4,1584,16],"15981":[1584,15,1584,16],"15984":[1584,8,1584,16],"15985":[1584,8,1584,16],"15986":[1584,8,1584,16],"15989":[1584,8,1584,16],"1599":[391,4,391,40],"15990":[1583,4,1584,16],"15991":[1586,24,1586,39],"15992":[1586,42,1586,57],"15994":[1586,58,1586,66],"15997":[1586,42,1586,67],"15998":[1586,42,1586,67],"1600":[391,4,391,40],"16000":[1586,42,1586,67],"16001":[1586,42,1586,67],"16003":[1586,42,1586,67],"16004":[1586,42,1586,67],"16006":[1586,42,1586,67],"16008":[1586,42,1586,67],"16012":[1586,42,1586,78],"16013":[1586,42,1586,78],"16014":[1586,42,1586,78],"16026":[1586,24,1586,78],"16027":[1586,24,1586,78],"16028":[1586,24,1586,78],"16029":[1586,24,1586,78],"1603":[391,4,391,40],"16030":[1586,4,1586,78],"16033":[1586,4,1586,78],"16034":[1587,23,1587,24],"16036":[1587,11,1587,19],"16039":[1587,11,1587,24],"1604":[392,29,392,39],"16041":[1587,4,1587,24],"16044":[1587,4,1587,24],"16045":[1589,7,1589,11],"16048":[1589,7,1589,16],"16049":[1589,4,1591,16],"16052":[1589,4,1591,16],"16053":[1591,15,1591,16],"16056":[1591,8,1591,16],"16057":[1591,8,1591,16],"16058":[1591,8,1591,16],"1606":[392,4,392,40],"16061":[1591,8,1591,16],"16062":[1589,4,1591,16],"16063":[1595,13,1595,28],"16065":[1595,29,1595,37],"16068":[1595,13,1595,38],"16069":[1595,13,1595,38],"1607":[392,4,392,40],"16071":[1595,13,1595,38],"16072":[1595,13,1595,38],"16074":[1595,13,1595,38],"16075":[1595,13,1595,38],"16077":[1595,13,1595,38],"16079":[1595,13,1595,38],"16083":[1595,13,1595,48],"16084":[1595,13,1595,48],"16085":[1595,13,1595,48],"16086":[1595,13,1595,87],"16095":[1595,51,1595,87],"16106":[1595,51,1595,69],"16112":[1595,51,1595,87],"16115":[1595,51,1595,87],"16126":[1595,51,1595,87],"16131":[1595,51,1595,87],"16134":[1595,51,1595,87],"16135":[1595,51,1595,87],"16149":[1595,13,1595,87],"16150":[1595,13,1595,87],"16151":[1595,13,1595,87],"16152":[1595,13,1595,87],"16153":[1596,14,1596,22],"16173":[1595,12,1596,22],"16174":[1595,12,1596,22],"16175":[1595,12,1596,22],"16176":[1595,12,1596,22],"16177":[1597,14,1597,32],"16196":[1595,12,1597,32],"16197":[1595,12,1597,32],"16198":[1595,12,1597,32],"16199":[1595,12,1597,32],"16200":[1599,10,1599,17],"16206":[1594,8,1599,17],"16207":[1594,8,1599,17],"16208":[1594,8,1599,17],"16209":[1594,8,1599,17],"16210":[1600,10,1600,23],"16218":[1594,8,1600,23],"16219":[1594,8,1600,23],"16220":[1594,8,1600,23],"16221":[1594,8,1600,23],"16222":[1593,4,1601,5],"16225":[1593,4,1601,5],"16226":[1606,8,1606,12],"16229":[1606,8,1607,50],"16230":[1607,10,1607,25],"16232":[1607,26,1607,34],"16235":[1607,10,1607,35],"16236":[1607,10,1607,35],"16238":[1607,10,1607,35],"16239":[1607,10,1607,35],"16241":[1607,10,1607,35],"16242":[1607,10,1607,35],"16244":[1607,10,1607,35],"16246":[1607,10,1607,35],"16264":[1606,8,1607,50],"16265":[1606,8,1607,50],"16266":[1606,8,1607,50],"16267":[1606,8,1607,50],"16268":[1608,10,1608,17],"16274":[1606,8,1608,17],"16275":[1606,8,1608,17],"16276":[1606,8,1608,17],"16277":[1606,8,1608,17],"16278":[1605,4,1609,5],"16281":[1605,4,1609,5],"16282":[1611,31,1611,35],"16285":[1611,31,1611,57],"16286":[1611,38,1611,57],"16305":[1611,31,1611,57],"16306":[1611,31,1611,57],"16307":[1611,31,1611,57],"16308":[1611,31,1611,57],"16309":[1611,60,1611,67],"16315":[1611,31,1611,67],"16316":[1611,31,1611,67],"16317":[1611,31,1611,67],"16318":[1611,31,1611,67],"16319":[1611,4,1611,67],"16322":[1611,4,1611,67],"16323":[1617,25,1617,40],"16326":[1617,25,1617,57],"16327":[1617,43,1617,57],"16343":[1617,25,1617,57],"16344":[1617,25,1617,57],"16345":[1617,25,1617,57],"16346":[1617,25,1617,57],"16347":[1617,60,1617,74],"16363":[1617,25,1617,74],"16364":[1617,25,1617,74],"16365":[1617,25,1617,74],"16366":[1617,25,1617,74],"16367":[1617,4,1617,74],"16370":[1617,4,1617,74],"16371":[1619,19,1619,23],"16374":[1619,7,1619,23],"16375":[1619,7,1619,16],"16378":[1619,7,1619,23],"16379":[1619,7,1619,23],"16380":[1619,4,1620,24],"16381":[1619,4,1620,24],"16384":[1619,4,1620,24],"16385":[1620,20,1620,24],"16388":[1620,8,1620,24],"16389":[1620,8,1620,17],"16392":[1620,8,1620,24],"16393":[1619,4,1620,24],"16394":[1621,19,1621,20],"16396":[1621,7,1621,16],"16399":[1621,7,1621,20],"16400":[1621,7,1621,20],"16401":[1621,4,1636,68],"16402":[1621,4,1636,68],"16405":[1621,4,1636,68],"16406":[1622,53,1622,57],"16410":[1622,59,1622,68],"1642":[392,4,392,40],"16423":[1622,26,1622,69],"16426":[1622,26,1622,69],"16427":[1622,26,1622,69],"16428":[1622,26,1622,69],"16431":[1622,8,1622,69],"16432":[1622,8,1622,69],"16435":[1622,8,1622,69],"16436":[1625,28,1625,29],"16438":[1625,11,1625,25],"1644":[392,4,392,40],"16441":[1625,11,1625,29],"16442":[1625,11,1625,29],"16443":[1625,8,1632,61],"16444":[1625,8,1632,61],"16447":[1625,8,1632,61],"16448":[1628,16,1628,30],"1645":[393,29,393,39],"16451":[1628,16,1629,24],"16452":[1629,18,1629,24],"1647":[393,4,393,39],"16472":[1628,16,1629,24],"16473":[1628,16,1629,24],"16474":[1628,16,1629,24],"16475":[1628,16,1629,24],"16476":[1630,18,1630,27],"1648":[393,4,393,26],"16489":[1628,16,1630,27],"16490":[1628,16,1630,27],"16491":[1628,16,1630,27],"16492":[1628,16,1630,27],"16493":[1627,12,1631,13],"16496":[1627,12,1631,13],"16497":[1632,27,1632,31],"1650":[393,4,393,39],"16501":[1632,33,1632,41],"16508":[1632,43,1632,60],"16515":[1625,8,1632,61],"16518":[1632,12,1632,61],"1652":[381,0,393,39],"16521":[1632,12,1632,61],"16522":[1625,8,1632,61],"16523":[1635,34,1635,35],"16525":[1635,11,1635,25],"16527":[1635,26,1635,30],"16528":[1635,11,1635,31],"16530":[1635,11,1635,31],"16531":[1635,11,1635,31],"16533":[1635,11,1635,31],"16534":[1635,11,1635,31],"16536":[1635,11,1635,31],"16538":[1635,11,1635,31],"16539":[1635,11,1635,35],"16540":[1635,11,1635,35],"16541":[1635,8,1636,68],"16542":[1621,4,1636,68],"16545":[1635,8,1636,68],"16546":[1636,27,1636,31],"16550":[1636,33,1636,45],"16556":[1636,47,1636,61],"16558":[1636,62,1636,66],"16559":[1636,47,1636,67],"16561":[1636,47,1636,67],"16562":[1636,47,1636,67],"16564":[1636,47,1636,67],"16565":[1636,47,1636,67],"16567":[1636,47,1636,67],"16569":[1636,47,1636,67],"16574":[1621,4,1636,68],"16577":[1636,12,1636,68],"16580":[1636,12,1636,68],"16581":[1621,4,1636,68],"16582":[1637,4,1637,76],"1660":[397,0,410,36],"16615":[1637,18,1637,32],"16623":[1637,34,1637,49],"1663":[397,0,410,36],"16631":[1637,51,1637,65],"16639":[1637,67,1637,75],"1664":[408,25,408,47],"16649":[1637,4,1637,76],"16652":[1637,4,1637,76],"16653":[1638,11,1638,20],"16658":[1638,4,1638,20],"16659":[1638,4,1638,20],"1666":[408,11,408,47],"16660":[1579,0,1638,20],"1667":[408,11,408,21],"1668":[408,4,408,47],"1669":[408,4,408,47],"1672":[408,4,408,47],"1673":[409,22,409,32],"1674":[409,4,409,19],"1676":[409,4,409,32],"1677":[410,4,410,36],"168":[261,4,261,20],"170":[261,4,261,20],"1710":[410,25,410,35],"1716":[410,4,410,36],"1718":[410,4,410,36],"1720":[397,0,410,36],"1728":[414,0,424,36],"1731":[414,0,424,36],"1743":[414,18,414,37],"1745":[414,18,414,37],"1746":[422,25,422,40],"1748":[422,11,422,40],"1749":[422,11,422,21],"1750":[422,4,422,40],"1751":[422,4,422,40],"1754":[422,4,422,40],"1755":[423,22,423,32],"1757":[423,4,423,32],"1758":[423,4,423,19],"176":[262,4,262,28],"1760":[423,4,423,32],"1761":[424,4,424,36],"1794":[424,25,424,35],"1802":[424,4,424,36],"1804":[424,4,424,36],"1806":[414,0,424,36],"1814":[428,0,442,30],"1817":[428,0,442,30],"1829":[428,15,428,31],"1831":[428,15,428,31],"1832":[439,25,439,40],"1834":[439,11,439,40],"1835":[439,11,439,21],"1836":[439,4,439,40],"1837":[439,4,439,40],"1840":[439,4,439,40],"1841":[440,16,440,23],"1843":[440,16,440,47],"1844":[440,28,440,32],"1848":[440,34,440,46],"1904":[440,16,440,47],"1905":[440,16,440,47],"1906":[440,4,440,48],"1909":[440,4,440,48],"1910":[441,19,441,26],"1912":[441,4,441,26],"1913":[441,4,441,16],"1915":[441,4,441,26],"1916":[442,4,442,30],"1949":[442,22,442,29],"1957":[442,4,442,30],"1959":[442,4,442,30],"1961":[428,0,442,30],"1969":[446,0,456,51],"1972":[446,0,456,51],"1973":[452,25,452,40],"1975":[452,11,452,40],"1976":[452,11,452,21],"1977":[452,4,452,40],"1978":[452,4,452,40],"1981":[452,4,452,40],"1982":[454,26,454,49],"1991":[456,39,456,50],"1993":[454,11,454,49],"1995":[454,4,454,49],"1998":[454,4,454,49],"1999":[456,39,456,50],"2001":[455,4,455,46],"2002":[455,4,455,32],"2004":[455,4,455,46],"2005":[456,4,456,51],"203":[262,4,262,28],"2038":[456,39,456,50],"2046":[456,4,456,51],"2048":[456,4,456,51],"2050":[446,0,456,51],"2058":[460,0,471,33],"2061":[460,0,471,33],"2062":[469,25,469,40],"2064":[469,11,469,40],"2065":[469,11,469,21],"2066":[469,4,469,40],"2067":[469,4,469,40],"2070":[469,4,469,40],"2071":[471,27,471,32],"2073":[470,4,470,29],"2074":[470,4,470,21],"2076":[470,4,470,29],"2077":[471,4,471,33],"209":[263,4,263,30],"2110":[471,27,471,32],"2118":[471,4,471,33],"2120":[471,4,471,33],"2122":[460,0,471,33],"2130":[475,0,486,33],"2133":[475,0,486,33],"2134":[483,25,483,40],"2136":[483,11,483,40],"2137":[483,11,483,21],"2138":[483,4,483,40],"2139":[483,4,483,40],"2142":[483,4,483,40],"2143":[484,18,484,29],"2146":[486,29,486,32],"2148":[484,11,484,29],"2150":[484,4,484,29],"2153":[484,4,484,29],"2154":[486,29,486,32],"2156":[485,4,485,29],"2157":[485,4,485,23],"2159":[485,4,485,29],"2160":[486,4,486,33],"2193":[486,29,486,32],"2201":[486,4,486,33],"2203":[486,4,486,33],"2205":[475,0,486,33],"2213":[490,0,500,32],"2216":[490,0,500,32],"2217":[497,25,497,40],"2219":[497,11,497,40],"2220":[497,11,497,21],"2221":[497,4,497,40],"2222":[497,4,497,40],"2225":[497,4,497,40],"2226":[498,18,498,25],"2229":[500,28,500,31],"2231":[498,11,498,25],"2233":[498,4,498,25],"2236":[498,4,498,25],"2237":[500,28,500,31],"2239":[499,4,499,28],"2240":[499,4,499,22],"2242":[499,4,499,28],"2243":[500,4,500,32],"2276":[500,28,500,31],"2284":[500,4,500,32],"2286":[500,4,500,32],"2288":[490,0,500,32],"2296":[504,0,513,32],"2299":[504,0,513,32],"2311":[504,16,504,33],"2313":[504,16,504,33],"2314":[511,11,511,21],"2315":[511,26,511,39],"2321":[511,41,511,56],"2378":[511,11,511,57],"2379":[511,11,511,57],"238":[263,4,263,30],"2380":[511,4,511,57],"2381":[511,4,511,57],"2384":[511,4,511,57],"2385":[512,20,512,28],"2387":[512,4,512,28],"2388":[512,4,512,17],"239":[290,11,290,26],"2390":[512,4,512,28],"2391":[513,4,513,32],"241":[290,11,290,31],"242":[290,4,290,31],"2424":[513,23,513,31],"2432":[513,4,513,32],"2434":[513,4,513,32],"2436":[504,0,513,32],"2444":[517,0,539,33],"2447":[517,0,539,33],"245":[290,4,290,31],"2459":[517,25,517,37],"246":[291,17,291,29],"2461":[517,25,517,37],"2462":[534,7,534,13],"2465":[534,4,537,44],"2468":[534,4,537,44],"2469":[537,29,537,44],"2471":[537,15,537,44],"2472":[537,15,537,25],"2473":[537,8,537,44],"2474":[537,8,537,44],"2477":[537,8,537,44],"2478":[534,4,537,44],"248":[291,4,291,29],"2481":[534,4,537,44],"2482":[534,4,537,44],"2483":[535,15,535,25],"2484":[535,30,535,43],"249":[291,4,291,14],"2490":[535,45,535,60],"251":[291,4,291,29],"2547":[535,15,535,61],"2548":[535,15,535,61],"2549":[535,8,535,61],"2550":[535,8,535,61],"2553":[535,8,535,61],"2554":[534,4,537,44],"2555":[538,29,538,35],"2557":[538,4,538,35],"2558":[538,4,538,26],"2560":[538,4,538,35],"2561":[539,4,539,33],"257":[292,23,292,25],"258":[292,23,292,25],"2594":[539,26,539,32],"2602":[539,4,539,33],"2604":[539,4,539,33],"2606":[517,0,539,33],"2614":[543,0,596,36],"2617":[543,0,596,36],"2631":[543,23,543,57],"2645":[543,23,543,57],"2659":[543,23,543,57],"2673":[543,23,543,57],"268":[292,7,292,25],"2687":[543,23,543,57],"269":[292,7,292,25],"270":[292,7,292,19],"2701":[543,23,543,57],"2716":[543,23,543,57],"2731":[543,23,543,57],"2747":[543,23,543,57],"275":[292,7,292,25],"276":[292,4,295,32],"2763":[543,23,543,57],"277":[292,4,295,32],"2779":[543,23,543,57],"2795":[543,23,543,57],"280":[292,4,295,32],"281":[293,20,293,68],"2811":[543,23,543,57],"2827":[543,23,543,57],"2843":[543,23,543,57],"2859":[543,23,543,57],"2875":[543,23,543,57],"2891":[543,23,543,57],"2907":[543,23,543,57],"291":[293,27,293,56],"2923":[543,23,543,57],"2924":[564,11,564,21],"2925":[564,26,564,41],"2932":[564,43,564,58],"2994":[564,11,564,59],"2995":[564,11,564,59],"2996":[564,4,564,59],"2997":[564,4,564,59],"3000":[564,4,564,59],"3001":[567,4,567,79],"3004":[567,4,567,79],"3005":[567,4,567,79],"3008":[567,4,567,79],"3009":[568,4,595,42],"3011":[568,4,595,42],"3013":[568,4,595,42],"3014":[568,4,595,42],"302":[293,27,293,47],"3020":[569,44,569,45],"3026":[569,23,569,46],"3027":[569,23,569,46],"3028":[569,23,569,46],"3029":[569,23,569,46],"3032":[569,23,569,46],"3033":[569,23,569,43],"3035":[569,23,569,46],"3036":[569,8,569,46],"3039":[569,18,569,19],"3052":[569,8,569,20],"3053":[569,8,569,17],"3056":[569,8,569,20],"3057":[569,8,569,46],"3060":[570,17,570,18],"307":[293,27,293,56],"3073":[570,11,570,19],"3074":[570,11,570,16],"3076":[570,11,570,19],"3077":[570,11,570,35],"3078":[570,8,573,17],"3081":[570,8,573,17],"3084":[572,29,572,30],"3097":[572,19,572,31],"3098":[572,19,572,28],"310":[293,27,293,56],"3101":[572,19,572,31],"3102":[572,19,572,47],"3103":[572,12,572,47],"3106":[572,12,572,47],"3107":[573,12,573,17],"3110":[573,12,573,17],"3111":[570,8,573,17],"3112":[575,31,575,43],"3116":[575,25,575,26],"3129":[575,15,575,27],"3130":[575,15,575,24],"3133":[575,15,575,27],"3134":[575,15,575,43],"3136":[575,8,575,43],"3139":[575,8,575,43],"3140":[577,54,577,55],"3142":[577,15,577,30],"3146":[577,37,577,38],"3159":[577,31,577,39],"3160":[577,31,577,36],"3162":[577,31,577,39],"3163":[577,15,577,40],"3164":[577,15,577,40],"3166":[577,15,577,40],"3167":[577,15,577,40],"3169":[577,15,577,40],"3170":[577,15,577,40],"3172":[577,15,577,40],"3174":[577,15,577,40],"3178":[577,15,577,51],"3179":[577,15,577,51],"3180":[577,15,577,51],"3181":[577,15,577,55],"3182":[577,15,577,55],"3183":[577,8,577,55],"3184":[577,8,577,55],"3187":[577,8,577,55],"3188":[579,33,579,38],"3190":[579,8,579,38],"3193":[579,8,579,38],"3194":[580,8,591,39],"3196":[580,8,591,39],"3198":[580,8,591,39],"3199":[580,8,591,39],"32":[258,0,318,92],"3207":[581,21,581,22],"321":[293,27,293,56],"3220":[581,15,581,23],"3221":[581,15,581,20],"3223":[581,15,581,23],"3224":[581,15,581,39],"3225":[581,12,583,21],"3228":[581,12,583,21],"3229":[582,35,582,39],"3231":[582,16,582,32],"3234":[582,16,582,39],"3235":[583,16,583,21],"3238":[583,16,583,21],"3239":[581,12,583,21],"3242":[584,37,584,38],"3255":[584,27,584,39],"3256":[584,27,584,36],"3259":[584,27,584,39],"326":[293,27,293,56],"3260":[584,15,584,39],"3263":[584,21,584,22],"3276":[584,15,584,23],"3277":[584,15,584,20],"3279":[584,15,584,23],"3280":[584,15,584,39],"3281":[584,12,586,39],"3282":[584,12,586,39],"3285":[584,12,586,39],"3286":[586,35,586,39],"3288":[586,16,586,32],"329":[293,27,293,56],"3291":[586,16,586,39],"3292":[584,12,586,39],"3293":[588,20,588,21],"3296":[588,15,588,21],"3297":[588,15,588,16],"3300":[588,15,588,21],"3302":[588,12,590,24],"3305":[588,12,590,24],"3306":[590,16,590,24],"3309":[590,16,590,24],"3310":[588,12,590,24],"3313":[591,37,591,38],"3326":[591,31,591,39],"3327":[591,31,591,36],"3329":[591,31,591,39],"3330":[591,19,591,39],"3333":[591,25,591,26],"3346":[591,19,591,27],"3347":[591,19,591,24],"3349":[591,19,591,27],"3350":[591,19,591,39],"3352":[591,12,591,39],"3355":[591,12,591,39],"3356":[580,8,591,39],"3357":[580,8,591,39],"3359":[580,8,591,39],"3360":[580,8,591,39],"3361":[580,8,591,39],"3362":[580,8,591,39],"3363":[580,8,591,39],"3366":[580,8,591,39],"3367":[580,8,591,39],"3368":[580,8,591,39],"3369":[580,8,591,39],"3370":[593,15,593,31],"3373":[593,8,593,31],"3374":[593,8,593,31],"3375":[593,8,593,31],"3378":[593,8,593,31],"3381":[595,40,595,41],"3394":[595,34,595,42],"3395":[595,34,595,39],"3397":[595,34,595,42],"3398":[595,8,595,42],"3399":[595,29,595,30],"3405":[595,8,595,31],"3406":[595,8,595,31],"3407":[595,8,595,31],"3408":[595,8,595,31],"3411":[595,8,595,31],"3412":[595,8,595,28],"3414":[595,8,595,31],"3415":[595,8,595,42],"3416":[568,4,595,42],"3418":[568,4,595,42],"3419":[568,4,595,42],"3420":[568,4,595,42],"3421":[568,4,595,42],"3422":[568,4,595,42],"3425":[568,4,595,42],"3426":[568,4,595,42],"3427":[568,4,595,42],"3428":[568,4,595,42],"3429":[596,4,596,36],"35":[258,0,318,92],"36":[264,24,264,34],"3619":[596,4,596,36],"3622":[596,4,596,36],"3624":[543,0,596,36],"3632":[646,0,661,15],"3635":[646,0,661,15],"3647":[646,13,646,30],"3650":[646,13,646,30],"3651":[660,19,660,29],"3655":[660,31,660,39],"3662":[660,41,660,47],"367":[293,27,293,56],"3671":[660,4,660,48],"3674":[660,4,660,48],"3675":[660,4,660,48],"3676":[661,11,661,15],"3684":[661,4,661,15],"3688":[646,0,661,15],"3696":[665,0,689,15],"3699":[665,0,689,15],"37":[264,4,264,21],"3711":[665,17,665,32],"3714":[665,17,665,32],"3726":[665,34,665,51],"3729":[665,34,665,51],"3730":[683,45,683,56],"3763":[683,8,683,22],"3765":[683,23,683,29],"3768":[683,8,683,30],"3769":[683,8,683,30],"3771":[683,8,683,30],"3772":[683,8,683,30],"3774":[683,8,683,30],"3775":[683,8,683,30],"3777":[683,8,683,30],"3779":[683,8,683,30],"3781":[683,31,683,41],"3782":[683,8,683,42],"3784":[683,8,683,42],"3785":[683,8,683,42],"3787":[683,8,683,42],"3788":[683,8,683,42],"3790":[683,8,683,42],"3792":[683,8,683,42],"3793":[683,8,683,42],"3794":[683,8,683,42],"3795":[683,8,683,56],"3796":[683,8,683,56],"3797":[683,4,687,51],"3798":[683,4,687,51],"3801":[683,4,687,51],"3802":[684,29,684,43],"3804":[684,44,684,50],"3807":[684,29,684,51],"3808":[684,29,684,51],"3810":[684,29,684,51],"3811":[684,29,684,51],"3813":[684,29,684,51],"3814":[684,29,684,51],"3816":[684,29,684,51],"3818":[684,29,684,51],"3820":[684,52,684,62],"3821":[684,29,684,63],"3823":[684,29,684,63],"3824":[684,29,684,63],"3826":[684,29,684,63],"3827":[684,29,684,63],"3829":[684,29,684,63],"3831":[684,29,684,63],"3832":[684,29,684,63],"3833":[684,29,684,63],"3834":[684,29,684,72],"3835":[688,37,688,43],"3848":[684,29,684,72],"3849":[684,29,684,72],"3850":[684,29,684,72],"3851":[684,29,684,72],"3852":[684,8,684,72],"3855":[684,8,684,72],"3856":[685,45,685,54],"3859":[685,8,685,54],"3860":[685,8,685,22],"3862":[685,23,685,29],"3865":[685,8,685,30],"3866":[685,8,685,30],"3868":[685,8,685,30],"3869":[685,8,685,30],"3871":[685,8,685,30],"3872":[685,8,685,30],"3874":[685,8,685,30],"3876":[685,8,685,30],"3878":[685,31,685,41],"3879":[685,8,685,42],"3881":[685,8,685,42],"3882":[685,8,685,42],"3884":[685,8,685,42],"3885":[685,8,685,42],"3887":[685,8,685,42],"3889":[685,8,685,42],"3890":[685,8,685,42],"3891":[685,8,685,42],"3892":[685,8,685,54],"3893":[687,29,687,39],"3894":[687,21,687,27],"3897":[687,8,687,51],"3898":[687,8,687,51],"3931":[687,41,687,50],"3941":[687,8,687,51],"3944":[687,8,687,51],"3945":[683,4,687,51],"3946":[688,19,688,25],"3953":[688,27,688,35],"3960":[688,37,688,43],"3969":[688,4,688,44],"3972":[688,4,688,44],"3973":[688,4,688,44],"3974":[689,11,689,15],"3982":[689,4,689,15],"3986":[665,0,689,15],"399":[293,58,293,67],"3994":[693,0,704,15],"3997":[693,0,704,15],"40":[264,4,264,21],"4009":[693,12,693,28],"4011":[693,12,693,28],"4012":[703,38,703,44],"4014":[702,4,702,48],"4015":[702,4,702,18],"4017":[702,19,702,29],"4018":[702,4,702,30],"4020":[702,4,702,30],"4021":[702,4,702,30],"4023":[702,4,702,30],"4024":[702,4,702,30],"4026":[702,4,702,30],"4028":[702,4,702,30],"4030":[702,31,702,38],"4033":[702,4,702,39],"4035":[702,4,702,39],"4036":[702,4,702,39],"4038":[702,4,702,39],"4039":[702,4,702,39],"4041":[702,4,702,39],"4043":[702,4,702,39],"4044":[702,4,702,39],"4045":[702,4,702,39],"4046":[702,4,702,48],"4047":[703,29,703,36],"4049":[703,4,703,45],"4050":[703,17,703,27],"4051":[703,4,703,45],"4084":[703,38,703,44],"4092":[703,4,703,45],"4094":[703,4,703,45],"4095":[704,11,704,15],"41":[265,27,265,37],"4102":[704,4,704,15],"4105":[693,0,704,15],"4113":[708,0,719,15],"4116":[708,0,719,15],"4128":[708,22,708,38],"4130":[708,22,708,38],"4131":[717,4,717,18],"4133":[717,19,717,29],"4134":[717,4,717,30],"4136":[717,4,717,30],"4137":[717,4,717,30],"4139":[717,4,717,30],"4140":[717,4,717,30],"4142":[717,4,717,30],"4144":[717,4,717,30],"4146":[717,31,717,38],"4149":[717,4,717,39],"4151":[717,4,717,39],"4152":[717,4,717,39],"4154":[717,4,717,39],"4155":[717,4,717,39],"4157":[717,4,717,39],"4159":[717,4,717,39],"4160":[717,4,717,39],"4161":[717,4,717,39],"4163":[717,4,717,49],"4164":[717,43,717,49],"4179":[717,4,717,49],"4180":[717,4,717,49],"4181":[717,4,717,49],"4182":[717,4,717,49],"4184":[717,4,717,49],"4185":[717,4,717,49],"4186":[718,29,718,36],"4188":[718,4,718,74],"4189":[718,17,718,27],"4190":[718,4,718,74],"42":[265,4,265,23],"4223":[718,38,718,52],"4225":[718,53,718,63],"4226":[718,38,718,64],"4228":[718,38,718,64],"4229":[718,38,718,64],"4231":[718,38,718,64],"4232":[718,38,718,64],"4234":[718,38,718,64],"4236":[718,38,718,64],"4238":[718,65,718,72],"4241":[718,38,718,73],"4243":[718,38,718,73],"4244":[718,38,718,73],"4246":[718,38,718,73],"4247":[718,38,718,73],"4249":[718,38,718,73],"4251":[718,38,718,73],"4252":[718,38,718,73],"4253":[718,38,718,73],"4260":[718,4,718,74],"4262":[718,4,718,74],"4263":[719,11,719,15],"4270":[719,4,719,15],"4273":[708,0,719,15],"4281":[723,0,734,15],"4284":[723,0,734,15],"4296":[723,22,723,38],"4298":[723,22,723,38],"4299":[732,4,732,18],"4301":[732,19,732,29],"4302":[732,4,732,30],"4304":[732,4,732,30],"4305":[732,4,732,30],"4307":[732,4,732,30],"4308":[732,4,732,30],"4310":[732,4,732,30],"4312":[732,4,732,30],"4314":[732,31,732,38],"4317":[732,4,732,39],"4319":[732,4,732,39],"4320":[732,4,732,39],"4322":[732,4,732,39],"4323":[732,4,732,39],"4325":[732,4,732,39],"4327":[732,4,732,39],"4328":[732,4,732,39],"4329":[732,4,732,39],"4331":[732,4,732,49],"4332":[732,43,732,49],"4345":[732,4,732,49],"4346":[732,4,732,49],"4347":[732,4,732,49],"4348":[732,4,732,49],"4350":[732,4,732,49],"4351":[732,4,732,49],"4352":[733,29,733,36],"4354":[733,4,733,74],"4355":[733,17,733,27],"4356":[733,4,733,74],"436":[293,58,293,67],"437":[293,58,293,67],"4389":[733,38,733,52],"4391":[733,53,733,63],"4392":[733,38,733,64],"4394":[733,38,733,64],"4395":[733,38,733,64],"4397":[733,38,733,64],"4398":[733,38,733,64],"4400":[733,38,733,64],"4402":[733,38,733,64],"4404":[733,65,733,72],"4407":[733,38,733,73],"4409":[733,38,733,73],"4410":[733,38,733,73],"4412":[733,38,733,73],"4413":[733,38,733,73],"4415":[733,38,733,73],"4417":[733,38,733,73],"4418":[733,38,733,73],"4419":[733,38,733,73],"4426":[733,4,733,74],"4428":[733,4,733,74],"4429":[734,11,734,15],"4436":[734,4,734,15],"4439":[723,0,734,15],"4447":[738,0,777,15],"4450":[738,0,777,15],"4462":[738,11,738,25],"4465":[738,11,738,25],"4477":[738,27,738,43],"4480":[738,27,738,43],"4486":[738,79,738,99],"45":[265,4,265,23],"4515":[738,79,738,99],"4516":[750,20,750,32],"4518":[750,11,750,16],"4521":[750,11,750,32],"4523":[750,4,750,32],"4526":[750,4,750,32],"4527":[751,21,751,36],"4528":[764,28,764,34],"4530":[751,11,751,36],"4532":[751,4,751,36],"4535":[751,4,751,36],"4536":[752,21,752,32],"4538":[752,33,752,38],"4541":[752,21,752,39],"4542":[752,21,752,39],"4544":[752,21,752,39],"4545":[752,21,752,39],"4547":[752,21,752,39],"4548":[752,21,752,39],"4550":[752,21,752,39],"4552":[752,21,752,39],"4553":[752,4,752,39],"4554":[752,4,752,39],"4557":[752,4,752,39],"4558":[754,8,767,9],"4565":[755,12,755,23],"4602":[755,12,755,23],"4603":[755,12,755,23],"4636":[756,12,756,35],"4639":[756,12,756,35],"4640":[756,12,756,35],"4641":[756,12,756,35],"4657":[758,16,765,17],"4659":[759,20,759,36],"4704":[760,28,760,33],"4707":[760,20,760,43],"472":[293,20,293,68],"4720":[761,28,761,35],"4723":[761,20,761,45],"473":[293,20,293,68],"4736":[776,33,776,39],"4738":[762,20,762,44],"4751":[763,28,763,33],"4754":[763,20,763,43],"4767":[764,28,764,34],"4769":[764,20,764,44],"477":[293,8,293,17],"4790":[758,16,765,17],"4791":[758,16,765,17],"4798":[757,12,766,13],"4799":[757,12,766,13],"4800":[757,12,766,13],"4821":[754,8,767,9],"4822":[754,8,767,9],"4829":[753,22,768,5],"4830":[753,22,768,5],"4831":[753,22,768,5],"4832":[753,4,768,5],"4835":[753,4,768,5],"4836":[770,31,770,40],"4843":[770,25,770,48],"4846":[770,25,770,48],"4854":[770,25,770,48],"4855":[770,45,770,47],"4860":[770,25,770,48],"4861":[770,25,770,48],"4877":[770,17,770,58],"4878":[770,17,770,58],"4879":[770,17,770,58],"4880":[770,4,770,58],"4883":[770,4,770,58],"4884":[771,31,771,40],"4891":[771,25,771,49],"4894":[771,25,771,49],"490":[293,8,293,68],"4902":[771,25,771,49],"4903":[771,46,771,48],"4908":[771,25,771,49],"4909":[771,25,771,49],"491":[293,8,293,68],"492":[292,4,295,32],"4925":[771,17,771,59],"4926":[771,17,771,59],"4927":[771,17,771,59],"4928":[771,4,771,59],"4931":[771,4,771,59],"4932":[772,31,772,40],"4939":[772,25,772,48],"4942":[772,25,772,48],"495":[292,4,295,32],"4950":[772,25,772,48],"4951":[772,46,772,47],"4956":[772,25,772,48],"4957":[772,25,772,48],"496":[292,4,295,32],"497":[295,20,295,32],"4973":[772,17,772,58],"4974":[772,17,772,58],"4975":[772,17,772,58],"4976":[772,4,772,58],"4979":[772,4,772,58],"4980":[773,41,773,46],"4983":[773,11,773,46],"4984":[773,21,773,27],"499":[295,8,295,32],"4991":[773,11,773,37],"4992":[773,29,773,30],"4999":[773,11,773,37],"50":[258,0,318,92],"5000":[773,32,773,33],"5007":[773,11,773,37],"5008":[773,35,773,36],"501":[295,8,295,17],"5015":[773,11,773,37],"5029":[773,11,773,37],"5032":[773,11,773,37],"5033":[773,4,773,46],"5034":[773,4,773,46],"5037":[773,4,773,46],"5038":[776,33,776,39],"5040":[774,4,774,43],"5041":[774,4,774,18],"5043":[774,19,774,24],"5046":[774,4,774,25],"5047":[774,4,774,25],"5049":[774,4,774,25],"5050":[774,4,774,25],"5052":[774,4,774,25],"5053":[774,4,774,25],"5055":[774,4,774,25],"5057":[774,4,774,25],"5059":[774,26,774,33],"5063":[774,4,774,34],"5065":[774,4,774,34],"5066":[774,4,774,34],"5068":[774,4,774,34],"5069":[774,4,774,34],"5071":[774,4,774,34],"5073":[774,4,774,34],"5074":[774,4,774,34],"5075":[774,4,774,34],"5076":[774,4,774,43],"5077":[775,25,775,30],"5080":[775,25,775,34],"5081":[775,33,775,34],"5095":[775,25,775,34],"5096":[775,25,775,34],"5097":[775,25,775,34],"5098":[775,25,775,34],"5099":[775,4,775,15],"5101":[775,16,775,21],"5104":[775,4,775,22],"5105":[775,4,775,22],"5107":[775,4,775,22],"5108":[775,4,775,22],"5110":[775,4,775,22],"5111":[775,4,775,22],"5113":[775,4,775,22],"5115":[775,4,775,22],"5116":[775,4,775,34],"5117":[776,24,776,31],"5120":[776,4,776,40],"5121":[776,17,776,22],"5124":[776,4,776,40],"5125":[776,4,776,40],"5158":[776,33,776,39],"5167":[776,4,776,40],"5170":[776,4,776,40],"5171":[777,11,777,15],"5179":[777,4,777,15],"5183":[738,0,777,15],"5191":[789,0,797,30],"5194":[789,0,797,30],"5195":[797,4,797,30],"5202":[797,11,797,30],"5205":[797,11,797,30],"5206":[797,11,797,30],"5207":[797,11,797,30],"5210":[789,0,797,30],"5218":[848,0,908,17],"5221":[848,0,908,17],"5222":[848,31,848,42],"5255":[848,12,848,28],"5258":[848,12,848,28],"5259":[848,65,848,75],"5260":[848,44,848,62],"5263":[848,44,848,62],"5268":[848,0,908,17],"5276":[848,0,908,17],"5279":[848,0,908,17],"5282":[848,12,848,28],"5283":[848,12,848,28],"5286":[848,12,848,28],"5287":[848,65,848,75],"5288":[848,44,848,62],"5291":[848,44,848,62],"5296":[848,0,908,17],"5304":[848,0,908,17],"5307":[848,0,908,17],"5310":[848,12,848,28],"5311":[848,12,848,28],"5314":[848,12,848,28],"5326":[848,44,848,62],"5329":[848,44,848,62],"5343":[878,15,878,37],"5345":[878,11,878,37],"5346":[878,4,878,37],"5349":[878,4,878,37],"5350":[879,11,879,20],"5353":[879,11,879,48],"5354":[879,29,879,33],"5359":[879,35,879,47],"5420":[879,11,879,48],"5421":[879,11,879,48],"5422":[879,4,879,48],"5423":[879,4,879,48],"5426":[879,4,879,48],"5427":[881,22,881,29],"5430":[881,4,881,29],"5431":[881,4,881,29],"5434":[881,4,881,29],"5435":[885,17,885,28],"5468":[885,7,885,13],"5471":[885,7,885,28],"5472":[885,4,892,64],"5473":[885,4,892,64],"5476":[885,4,892,64],"5477":[887,12,887,29],"5479":[887,12,887,51],"5486":[887,32,887,51],"5489":[887,32,887,51],"5490":[887,32,887,51],"5491":[887,32,887,51],"5505":[887,12,887,51],"5506":[887,12,887,51],"5507":[887,12,887,51],"5508":[887,12,887,51],"5517":[888,12,888,44],"5518":[888,33,888,43],"5533":[888,12,888,22],"5538":[888,12,888,44],"5541":[888,12,888,44],"555":[295,8,295,32],"5552":[888,12,888,44],"5557":[888,12,888,44],"556":[292,4,295,32],"5560":[888,12,888,44],"5561":[888,12,888,44],"5574":[886,17,889,9],"5575":[886,17,889,9],"5576":[886,17,889,9],"5577":[886,17,889,9],"5578":[886,8,886,14],"5581":[886,8,889,9],"5582":[885,4,892,64],"5585":[885,4,892,64],"5586":[885,4,892,64],"5587":[892,47,892,64],"5589":[892,15,892,64],"5596":[892,15,892,34],"5599":[892,15,892,34],"5600":[892,15,892,34],"5601":[892,15,892,34],"5604":[892,15,892,43],"5605":[892,37,892,43],"562":[296,25,296,27],"5621":[892,15,892,43],"5622":[892,15,892,43],"5623":[892,15,892,43],"5624":[892,15,892,43],"5626":[892,8,892,64],"5629":[892,8,892,64],"563":[296,25,296,27],"5630":[885,4,892,64],"5631":[895,20,895,21],"5633":[895,11,895,17],"5636":[895,11,895,21],"5637":[895,11,895,21],"5638":[895,4,895,21],"5639":[895,4,895,21],"5642":[895,4,895,21],"5643":[900,49,900,58],"5650":[900,60,900,66],"5663":[900,22,900,67],"5666":[900,22,900,67],"5667":[900,22,900,67],"5668":[900,22,900,67],"5671":[900,4,900,67],"5672":[900,4,900,67],"5675":[900,4,900,67],"5676":[903,33,903,51],"5682":[903,53,903,63],"5686":[903,65,903,69],"5690":[903,71,903,77],"5700":[903,4,903,78],"5703":[903,4,903,78],"5704":[903,4,903,78],"5705":[904,4,904,18],"5707":[904,4,904,28],"5708":[904,22,904,28],"5724":[904,4,904,28],"5725":[904,4,904,28],"5726":[904,4,904,28],"5727":[904,4,904,28],"5728":[904,4,904,18],"573":[296,7,296,27],"5730":[904,4,904,28],"5731":[906,16,906,25],"5734":[906,4,906,42],"5735":[906,4,906,42],"574":[296,7,296,27],"575":[296,7,296,21],"5768":[906,27,906,33],"5776":[906,35,906,41],"5786":[906,4,906,42],"5789":[906,4,906,42],"5790":[908,4,908,17],"5792":[908,11,908,17],"58":[258,0,318,92],"5801":[848,0,908,17],"5809":[947,0,969,17],"5812":[947,0,969,17],"5813":[962,44,962,58],"582":[296,7,296,27],"5825":[962,22,962,59],"5828":[962,22,962,59],"5829":[962,22,962,59],"583":[296,4,299,36],"5830":[962,22,962,59],"5833":[962,4,962,59],"5834":[962,4,962,59],"5837":[962,4,962,59],"584":[296,4,299,36],"5842":[964,4,967,76],"5843":[964,4,967,76],"5845":[964,20,964,40],"5853":[965,11,965,19],"5856":[965,11,965,35],"5857":[965,8,966,17],"5860":[965,8,966,17],"5861":[966,12,966,17],"5864":[966,12,966,17],"5865":[965,8,966,17],"5866":[967,8,967,14],"5869":[967,8,967,76],"587":[296,4,299,36],"5870":[967,40,967,55],"5872":[967,56,967,64],"5875":[967,40,967,65],"5876":[967,40,967,65],"5878":[967,40,967,65],"5879":[967,40,967,65],"588":[297,22,297,65],"5881":[967,40,967,65],"5882":[967,40,967,65],"5884":[967,40,967,65],"5886":[967,40,967,65],"5890":[967,40,967,75],"5891":[967,40,967,75],"5892":[967,40,967,75],"5903":[967,18,967,76],"5906":[967,18,967,76],"5907":[967,18,967,76],"5908":[967,18,967,76],"5924":[967,8,967,76],"5925":[967,8,967,76],"5926":[967,8,967,76],"5927":[967,8,967,76],"5928":[967,8,967,14],"5931":[967,8,967,76],"5932":[964,4,967,76],"5934":[964,4,967,76],"5935":[964,4,967,76],"5936":[964,4,967,76],"5937":[964,4,967,76],"5938":[964,4,967,76],"5941":[964,4,967,76],"5942":[964,4,967,76],"5943":[964,4,967,76],"5944":[964,4,967,76],"5945":[969,4,969,17],"5947":[969,11,969,17],"595":[297,29,297,33],"5951":[947,0,969,17],"5959":[997,0,1130,16],"5962":[997,0,1130,16],"5963":[998,25,998,36],"5996":[998,4,998,22],"5999":[998,4,998,22],"6000":[999,25,999,35],"6001":[999,4,999,22],"6004":[999,4,999,22],"6005":[1000,23,1000,24],"6007":[1000,4,1000,20],"6010":[1000,4,1000,20],"6015":[997,0,1130,16],"6023":[997,0,1130,16],"6026":[997,0,1130,16],"6029":[998,4,998,22],"6030":[998,4,998,22],"6033":[998,4,998,22],"6034":[999,25,999,35],"6035":[999,4,999,22],"6038":[999,4,999,22],"6039":[1000,23,1000,24],"6041":[1000,4,1000,20],"6044":[1000,4,1000,20],"6049":[997,0,1130,16],"6056":[997,0,1130,16],"6059":[997,0,1130,16],"6062":[998,4,998,22],"6063":[998,4,998,22],"6066":[998,4,998,22],"6078":[999,4,999,22],"6081":[999,4,999,22],"6082":[1000,23,1000,24],"6084":[1000,4,1000,20],"6087":[1000,4,1000,20],"6092":[997,0,1130,16],"61":[258,0,318,92],"6100":[997,0,1130,16],"6103":[997,0,1130,16],"6106":[998,4,998,22],"6107":[998,4,998,22],"6110":[998,4,998,22],"6122":[999,4,999,22],"6125":[999,4,999,22],"6128":[1000,4,1000,20],"6129":[1000,4,1000,20],"6132":[1000,4,1000,20],"6146":[1042,22,1042,31],"6149":[1042,4,1042,31],"6150":[1042,4,1042,31],"6153":[1042,4,1042,31],"6154":[1045,22,1045,29],"6157":[1045,11,1045,18],"6160":[1045,11,1045,29],"6162":[1045,4,1045,29],"6165":[1045,4,1045,29],"6166":[1048,17,1048,28],"6199":[1048,7,1048,13],"6202":[1048,7,1048,28],"6203":[1048,4,1049,43],"6204":[1048,4,1049,43],"6207":[1048,4,1049,43],"6208":[1049,17,1049,31],"6210":[1049,32,1049,42],"6211":[1049,17,1049,43],"6213":[1049,17,1049,43],"6214":[1049,17,1049,43],"6216":[1049,17,1049,43],"6217":[1049,17,1049,43],"6219":[1049,17,1049,43],"6221":[1049,17,1049,43],"6222":[1049,8,1049,43],"6223":[1049,8,1049,14],"6226":[1049,8,1049,43],"6227":[1048,4,1049,43],"6228":[1052,21,1052,35],"6230":[1052,36,1052,46],"6231":[1052,21,1052,47],"6233":[1052,21,1052,47],"6234":[1052,21,1052,47],"6236":[1052,21,1052,47],"6237":[1052,21,1052,47],"6239":[1052,21,1052,47],"6241":[1052,21,1052,47],"6242":[1052,11,1052,47],"6243":[1052,11,1052,17],"6246":[1052,11,1052,47],"6248":[1052,4,1052,47],"6251":[1052,4,1052,47],"6252":[1055,20,1055,21],"6254":[1055,11,1055,17],"6257":[1055,11,1055,21],"6258":[1055,11,1055,21],"6259":[1055,4,1055,21],"6260":[1055,4,1055,21],"6263":[1055,4,1055,21],"6264":[1058,38,1058,44],"6277":[1058,21,1058,45],"6280":[1058,21,1058,45],"6281":[1058,21,1058,45],"6282":[1058,21,1058,45],"6285":[1058,4,1058,45],"6286":[1058,4,1058,45],"6289":[1058,4,1058,45],"6290":[1059,29,1059,43],"6292":[1059,4,1059,43],"6293":[1059,4,1059,43],"6296":[1059,4,1059,43],"6297":[1061,15,1061,28],"6300":[1061,7,1061,28],"6301":[1061,7,1061,12],"6304":[1061,7,1061,28],"6305":[1061,7,1061,28],"6306":[1061,4,1118,67],"6307":[1061,4,1118,67],"6310":[1061,4,1118,67],"6311":[1062,29,1062,30],"6313":[1062,8,1062,30],"6316":[1062,8,1062,30],"632":[297,29,297,33],"6321":[1071,8,1104,89],"6322":[1071,8,1104,89],"6324":[1071,24,1071,44],"633":[297,29,297,33],"6332":[1072,15,1072,23],"6335":[1072,15,1072,39],"6336":[1072,12,1073,21],"6339":[1072,12,1073,21],"6340":[1073,16,1073,21],"6343":[1073,16,1073,21],"6344":[1072,12,1073,21],"6345":[1075,24,1075,37],"6348":[1075,15,1075,37],"6349":[1075,15,1075,20],"6352":[1075,15,1075,37],"6354":[1075,12,1076,21],"6357":[1075,12,1076,21],"6358":[1076,16,1076,21],"6361":[1076,16,1076,21],"6362":[1075,12,1076,21],"6363":[1078,36,1078,41],"6366":[1078,36,1078,57],"6367":[1078,44,1078,57],"6381":[1078,36,1078,57],"6382":[1078,36,1078,57],"6383":[1078,36,1078,57],"6384":[1078,36,1078,57],"6385":[1078,12,1078,57],"6388":[1078,12,1078,57],"6389":[1084,31,1084,43],"6392":[1084,27,1084,81],"6393":[1084,45,1084,60],"6395":[1084,61,1084,69],"6398":[1084,45,1084,70],"6399":[1084,45,1084,70],"6401":[1084,45,1084,70],"6402":[1084,45,1084,70],"6404":[1084,45,1084,70],"6405":[1084,45,1084,70],"6407":[1084,45,1084,70],"6409":[1084,45,1084,70],"6413":[1084,45,1084,80],"6414":[1084,45,1084,80],"6415":[1084,45,1084,80],"6426":[1084,27,1084,81],"6427":[1084,27,1084,81],"6428":[1084,27,1084,81],"6429":[1084,27,1084,81],"6430":[1084,12,1084,24],"6433":[1084,12,1084,81],"6434":[1085,15,1085,27],"6437":[1085,15,1085,32],"6438":[1085,12,1086,24],"6441":[1085,12,1086,24],"6442":[1086,16,1086,24],"6445":[1086,16,1086,24],"6446":[1085,12,1086,24],"6455":[1089,34,1089,60],"6456":[1089,55,1089,59],"6471":[1089,34,1089,44],"6476":[1089,34,1089,60],"6479":[1089,34,1089,60],"6490":[1089,34,1089,60],"6495":[1089,34,1089,60],"6498":[1089,34,1089,60],"6499":[1089,34,1089,60],"6502":[1089,12,1089,60],"6503":[1089,12,1089,60],"6506":[1089,12,1089,60],"6515":[1090,28,1090,69],"6516":[1090,56,1090,68],"6536":[1090,28,1090,46],"6542":[1090,28,1090,69],"6545":[1090,28,1090,69],"6556":[1090,28,1090,69],"6561":[1090,28,1090,69],"6564":[1090,28,1090,69],"6565":[1090,28,1090,69],"6568":[1090,12,1090,69],"6569":[1090,12,1090,69],"6572":[1090,12,1090,69],"6581":[1091,33,1091,59],"6582":[1091,54,1091,58],"6597":[1091,33,1091,43],"6602":[1091,33,1091,59],"6605":[1091,33,1091,59],"6616":[1091,33,1091,59],"6621":[1091,33,1091,59],"6624":[1091,33,1091,59],"6625":[1091,33,1091,59],"6628":[1091,33,1091,72],"6629":[1091,62,1091,72],"6643":[1091,33,1091,72],"6644":[1091,33,1091,72],"6645":[1091,33,1091,72],"6646":[1091,33,1091,72],"6647":[1091,12,1091,72],"6650":[1091,12,1091,72],"6651":[1092,12,1092,25],"6654":[1092,12,1092,38],"6655":[1092,29,1092,38],"6671":[1092,12,1092,38],"6672":[1092,12,1092,38],"6673":[1092,12,1092,38],"6674":[1092,12,1092,38],"6675":[1092,12,1092,25],"6678":[1092,12,1092,38],"6679":[1095,22,1095,23],"668":[297,35,297,64],"6681":[1095,15,1095,19],"6684":[1095,15,1095,23],"6685":[1095,15,1095,23],"6686":[1095,12,1098,48],"6687":[1095,12,1098,48],"6690":[1095,12,1098,48],"6691":[1096,16,1096,21],"6694":[1096,16,1096,29],"6695":[1096,25,1096,29],"6709":[1096,16,1096,29],"6710":[1096,16,1096,29],"6711":[1096,16,1096,29],"6712":[1096,16,1096,29],"6713":[1096,16,1096,21],"6716":[1096,16,1096,29],"6717":[1097,16,1097,25],"6720":[1097,16,1097,33],"6721":[1097,29,1097,33],"6737":[1097,16,1097,33],"6738":[1097,16,1097,33],"6739":[1097,16,1097,33],"6740":[1097,16,1097,33],"6741":[1097,16,1097,25],"6744":[1097,16,1097,33],"6745":[1098,33,1098,41],"6752":[1098,43,1098,47],"6759":[1095,12,1098,48],"6762":[1098,16,1098,48],"6765":[1098,16,1098,48],"6766":[1095,12,1098,48],"6767":[1102,12,1102,27],"6769":[1102,28,1102,36],"6772":[1102,12,1102,37],"6773":[1102,12,1102,37],"6775":[1102,12,1102,37],"6776":[1102,12,1102,37],"6778":[1102,12,1102,37],"6779":[1102,12,1102,37],"6781":[1102,12,1102,37],"6783":[1102,12,1102,37],"6787":[1102,12,1102,47],"6788":[1102,12,1102,47],"6789":[1102,12,1102,47],"679":[297,35,297,55],"6791":[1102,12,1102,60],"6792":[1102,51,1102,60],"6806":[1102,12,1102,60],"6807":[1102,12,1102,60],"6808":[1102,12,1102,60],"6809":[1102,12,1102,60],"6811":[1102,12,1102,60],"6812":[1102,12,1102,60],"6813":[1103,12,1103,26],"6815":[1103,12,1103,39],"6816":[1103,30,1103,39],"6830":[1103,12,1103,39],"6831":[1103,12,1103,39],"6832":[1103,12,1103,39],"6833":[1103,12,1103,39],"6834":[1103,12,1103,26],"6836":[1103,12,1103,39],"6837":[1104,37,1104,45],"684":[297,35,297,64],"6840":[1104,12,1104,89],"6841":[1104,12,1104,89],"687":[297,35,297,64],"6874":[1104,47,1104,62],"6876":[1104,63,1104,71],"6879":[1104,47,1104,72],"6880":[1104,47,1104,72],"6882":[1104,47,1104,72],"6883":[1104,47,1104,72],"6885":[1104,47,1104,72],"6886":[1104,47,1104,72],"6888":[1104,47,1104,72],"6890":[1104,47,1104,72],"6894":[1104,47,1104,82],"6895":[1104,47,1104,82],"6896":[1104,47,1104,82],"6902":[1104,84,1104,88],"6912":[1104,12,1104,89],"6915":[1104,12,1104,89],"6916":[1071,8,1104,89],"6917":[1071,8,1104,89],"6919":[1071,8,1104,89],"6920":[1071,8,1104,89],"6921":[1071,8,1104,89],"6922":[1071,8,1104,89],"6923":[1071,8,1104,89],"6926":[1071,8,1104,89],"6927":[1071,8,1104,89],"6928":[1071,8,1104,89],"6929":[1071,8,1104,89],"6930":[1106,25,1106,38],"6933":[1106,8,1106,38],"6934":[1106,8,1106,22],"6936":[1106,8,1106,38],"6937":[1110,19,1110,32],"6940":[1110,11,1110,32],"6941":[1110,11,1110,16],"6944":[1110,11,1110,32],"6945":[1110,11,1110,32],"6946":[1110,8,1114,61],"6947":[1110,8,1114,61],"6950":[1110,8,1114,61],"6951":[1111,20,1111,33],"6954":[1111,12,1111,33],"6955":[1111,12,1111,17],"6958":[1111,12,1111,33],"6959":[1114,43,1114,48],"6962":[1114,43,1114,60],"6963":[1114,51,1114,60],"6979":[1114,43,1114,60],"698":[297,35,297,64],"6980":[1114,43,1114,60],"6981":[1114,43,1114,60],"6982":[1114,43,1114,60],"6992":[1114,21,1114,61],"6995":[1114,21,1114,61],"6996":[1114,21,1114,61],"6997":[1114,21,1114,61],"7000":[1114,12,1114,61],"7001":[1114,12,1114,18],"7004":[1114,12,1114,61],"7005":[1110,8,1114,61],"7006":[1118,28,1118,35],"7009":[1118,28,1118,57],"7010":[1118,39,1118,44],"7013":[1118,39,1118,56],"7014":[1118,47,1118,56],"703":[297,35,297,64],"7030":[1118,39,1118,56],"7031":[1118,39,1118,56],"7032":[1118,39,1118,56],"7033":[1118,39,1118,56],"7050":[1118,28,1118,57],"7051":[1118,28,1118,57],"7052":[1118,28,1118,57],"7053":[1118,28,1118,57],"7054":[1118,60,1118,67],"706":[297,35,297,64],"7060":[1118,28,1118,67],"7061":[1118,28,1118,67],"7062":[1118,28,1118,67],"7063":[1118,28,1118,67],"7064":[1118,15,1118,24],"7067":[1118,15,1118,67],"7069":[1118,8,1118,67],"7072":[1118,8,1118,67],"7073":[1061,4,1118,67],"7074":[1121,4,1121,20],"7076":[1121,4,1121,30],"7077":[1121,24,1121,30],"7091":[1121,4,1121,30],"7092":[1121,4,1121,30],"7093":[1121,4,1121,30],"7094":[1121,4,1121,30],"7095":[1121,4,1121,20],"7097":[1121,4,1121,30],"7098":[1122,4,1122,18],"7100":[1122,19,1122,29],"7101":[1122,4,1122,30],"7103":[1122,4,1122,30],"7104":[1122,4,1122,30],"7106":[1122,4,1122,30],"7107":[1122,4,1122,30],"7109":[1122,4,1122,30],"7111":[1122,4,1122,30],"7113":[1122,4,1122,40],"7114":[1122,34,1122,40],"7128":[1122,4,1122,40],"7129":[1122,4,1122,40],"7130":[1122,4,1122,40],"7131":[1122,4,1122,40],"7133":[1122,4,1122,40],"7134":[1122,4,1122,40],"7135":[1123,29,1123,41],"7137":[1123,17,1123,27],"7138":[1123,4,1123,50],"7171":[1123,43,1123,49],"7181":[1123,4,1123,50],"7184":[1123,4,1123,50],"7185":[1125,4,1125,18],"7187":[1125,4,1125,27],"7188":[1125,22,1125,27],"7202":[1125,4,1125,27],"7203":[1125,4,1125,27],"7204":[1125,4,1125,27],"7205":[1125,4,1125,27],"7206":[1125,4,1125,18],"7208":[1125,4,1125,27],"7209":[1127,29,1127,47],"7215":[1127,49,1127,58],"7222":[1127,60,1127,65],"7232":[1127,4,1127,66],"7235":[1127,4,1127,66],"7236":[1127,4,1127,66],"7237":[1128,17,1128,26],"7240":[1128,4,1128,42],"7241":[1128,4,1128,42],"7274":[1128,28,1128,34],"7282":[1128,36,1128,41],"7292":[1128,4,1128,42],"7295":[1128,4,1128,42],"7296":[1130,4,1130,16],"7298":[1130,11,1130,16],"73":[264,4,264,21],"7307":[997,0,1130,16],"7315":[1135,0,1141,48],"7318":[1135,0,1141,48],"7319":[1141,4,1141,48],"7323":[1141,34,1141,47],"7327":[1141,28,1141,47],"7328":[1141,28,1141,47],"7331":[1141,28,1141,47],"7332":[1141,34,1141,47],"7335":[1141,28,1141,30],"7337":[1141,28,1141,47],"7347":[1141,11,1141,48],"7350":[1141,11,1141,48],"7351":[1141,11,1141,48],"7352":[1141,11,1141,48],"7356":[1135,0,1141,48],"7364":[1161,0,1222,35],"7367":[1161,0,1222,35],"7379":[1162,4,1162,21],"7381":[1162,4,1162,21],"7382":[1186,11,1186,55],"7384":[1186,11,1186,71],"7385":[1186,4,1186,71],"7388":[1186,4,1186,71],"7389":[1189,15,1189,37],"7391":[1189,11,1189,37],"7392":[1189,4,1189,37],"7395":[1189,4,1189,37],"7396":[1190,25,1190,40],"7398":[1190,11,1190,40],"7399":[1190,11,1190,21],"7400":[1190,4,1190,40],"7401":[1190,4,1190,40],"7404":[1190,4,1190,40],"7405":[1193,23,1193,35],"7407":[1193,11,1193,19],"7409":[1193,11,1193,35],"7411":[1193,4,1193,35],"7414":[1193,4,1193,35],"7415":[1194,11,1194,26],"7417":[1194,27,1194,35],"7419":[1194,11,1194,36],"7420":[1194,11,1194,36],"7422":[1194,11,1194,36],"7423":[1194,11,1194,36],"7425":[1194,11,1194,36],"7426":[1194,11,1194,36],"7428":[1194,11,1194,36],"7430":[1194,11,1194,36],"7434":[1194,11,1194,47],"7435":[1194,11,1194,47],"7436":[1194,11,1194,47],"7437":[1194,11,1194,52],"7438":[1194,4,1194,52],"744":[297,35,297,64],"7441":[1194,4,1194,52],"7449":[1195,19,1195,45],"7458":[1195,19,1195,37],"7463":[1195,19,1195,45],"7466":[1195,19,1195,45],"7477":[1195,19,1195,45],"7482":[1195,19,1195,45],"7485":[1195,19,1195,45],"7501":[1195,19,1195,45],"7504":[1195,11,1195,45],"7505":[1195,11,1195,15],"7506":[1195,4,1195,45],"7507":[1195,4,1195,45],"7510":[1195,4,1195,45],"7518":[1196,33,1196,58],"7527":[1196,33,1196,51],"7532":[1196,33,1196,58],"7535":[1196,33,1196,58],"7546":[1196,33,1196,58],"7551":[1196,33,1196,58],"7554":[1196,33,1196,58],"7570":[1196,33,1196,58],"7573":[1196,11,1196,58],"7574":[1196,11,1196,29],"7576":[1196,11,1196,58],"7577":[1196,4,1196,58],"7578":[1196,4,1196,58],"7581":[1196,4,1196,58],"7582":[1199,41,1199,48],"7585":[1199,11,1199,25],"7587":[1199,11,1199,37],"7588":[1218,22,1218,31],"76":[264,4,264,21],"7603":[1199,11,1199,37],"7604":[1199,11,1199,37],"7605":[1199,11,1199,37],"7606":[1199,11,1199,37],"7608":[1199,4,1199,48],"7611":[1199,4,1199,48],"7612":[1215,62,1215,79],"7614":[1200,11,1200,49],"7615":[1215,43,1215,60],"7617":[1200,11,1200,49],"7619":[1200,4,1200,49],"7622":[1200,4,1200,49],"7623":[1201,29,1201,40],"7626":[1215,81,1215,95],"7628":[1201,11,1201,40],"7630":[1201,4,1201,40],"7633":[1201,4,1201,40],"7634":[1204,4,1204,19],"7636":[1204,20,1204,28],"7638":[1204,4,1204,29],"7639":[1204,4,1204,29],"7641":[1204,4,1204,29],"7642":[1204,4,1204,29],"7644":[1204,4,1204,29],"7645":[1204,4,1204,29],"7647":[1204,4,1204,29],"7649":[1204,4,1204,29],"7650":[1215,81,1215,95],"7655":[1206,20,1206,35],"7661":[1218,22,1218,31],"7669":[1215,43,1215,60],"7677":[1215,62,1215,79],"7685":[1210,20,1210,35],"7691":[1211,19,1211,20],"7698":[1212,19,1212,20],"77":[265,27,265,37],"7705":[1213,19,1213,20],"7712":[1204,4,1214,6],"7713":[1215,22,1215,30],"7715":[1215,4,1215,96],"7716":[1215,4,1215,96],"7749":[1218,22,1218,31],"7755":[1215,43,1215,60],"7761":[1215,62,1215,79],"7768":[1215,81,1215,95],"7777":[1215,4,1215,96],"7779":[1215,4,1215,96],"7780":[1218,4,1218,18],"7782":[1218,4,1218,31],"7783":[1218,22,1218,31],"779":[297,22,297,65],"7798":[1218,4,1218,31],"7799":[1218,4,1218,31],"78":[265,4,265,23],"780":[297,22,297,65],"7800":[1218,4,1218,31],"7801":[1218,4,1218,31],"7802":[1218,4,1218,18],"7804":[1218,4,1218,31],"7805":[1221,51,1221,59],"7807":[1221,4,1221,59],"7808":[1221,4,1221,48],"7810":[1221,4,1221,59],"7814":[1222,4,1222,35],"7817":[1222,4,1222,35],"7820":[1161,0,1222,35],"7828":[1226,0,1244,52],"7831":[1226,0,1244,52],"784":[297,8,297,19],"7843":[1227,4,1227,21],"7845":[1227,4,1227,21],"7846":[1237,11,1237,21],"7847":[1237,26,1237,41],"7853":[1237,43,1237,58],"7910":[1237,11,1237,59],"7911":[1237,11,1237,59],"7912":[1237,4,1237,59],"7913":[1237,4,1237,59],"7916":[1237,4,1237,59],"7917":[1238,50,1238,51],"7919":[1238,11,1238,26],"7921":[1238,27,1238,35],"7923":[1238,11,1238,36],"7924":[1238,11,1238,36],"7926":[1238,11,1238,36],"7927":[1238,11,1238,36],"7929":[1238,11,1238,36],"7930":[1238,11,1238,36],"7932":[1238,11,1238,36],"7934":[1238,11,1238,36],"7938":[1238,11,1238,47],"7939":[1238,11,1238,47],"7940":[1238,11,1238,47],"7941":[1238,11,1238,51],"7942":[1238,11,1238,51],"7943":[1238,4,1238,51],"7944":[1238,4,1238,51],"7947":[1238,4,1238,51],"7955":[1239,11,1239,45],"7964":[1239,11,1239,29],"7969":[1239,11,1239,45],"797":[297,8,297,65],"7972":[1239,11,1239,45],"798":[297,8,297,65],"7983":[1239,11,1239,45],"7988":[1239,11,1239,45],"799":[296,4,299,36],"7991":[1239,11,1239,45],"8006":[1239,11,1239,45],"8008":[1239,11,1239,54],"8009":[1239,4,1239,54],"8012":[1239,4,1239,54],"8013":[1240,4,1240,18],"8015":[1240,4,1240,57],"8016":[1240,22,1240,37],"8018":[1240,38,1240,46],"802":[296,4,299,36],"8020":[1240,22,1240,47],"8021":[1240,22,1240,47],"8023":[1240,22,1240,47],"8024":[1240,22,1240,47],"8026":[1240,22,1240,47],"8027":[1240,22,1240,47],"8029":[1240,22,1240,47],"803":[296,4,299,36],"8031":[1240,22,1240,47],"8035":[1240,22,1240,57],"8036":[1240,22,1240,57],"8037":[1240,22,1240,57],"804":[299,22,299,36],"8049":[1240,4,1240,57],"8050":[1240,4,1240,57],"8051":[1240,4,1240,57],"8052":[1240,4,1240,57],"8053":[1240,4,1240,18],"8055":[1240,4,1240,57],"8056":[1244,42,1244,51],"8058":[1241,4,1241,51],"8059":[1241,4,1241,19],"8061":[1241,20,1241,28],"8063":[1241,4,1241,29],"8064":[1241,4,1241,29],"8066":[1241,4,1241,29],"8067":[1241,4,1241,29],"8069":[1241,4,1241,29],"807":[299,8,299,36],"8070":[1241,4,1241,29],"8072":[1241,4,1241,29],"8074":[1241,4,1241,29],"8078":[1241,4,1241,39],"8079":[1241,4,1241,39],"8080":[1241,4,1241,39],"8081":[1241,4,1241,51],"8082":[1242,4,1242,18],"8084":[1242,4,1242,31],"8085":[1244,42,1244,51],"809":[299,8,299,19],"81":[265,4,265,23],"8100":[1242,4,1242,31],"8101":[1242,4,1242,31],"8102":[1242,4,1242,31],"8103":[1242,4,1242,31],"8104":[1242,4,1242,18],"8106":[1242,4,1242,31],"8107":[1243,29,1243,36],"8110":[1243,11,1243,25],"8112":[1243,11,1243,36],"8114":[1243,4,1243,36],"8117":[1243,4,1243,36],"8118":[1244,32,1244,40],"8120":[1244,4,1244,52],"8121":[1244,4,1244,52],"8154":[1244,42,1244,51],"8162":[1244,4,1244,52],"8164":[1244,4,1244,52],"8166":[1226,0,1244,52],"8174":[1248,0,1265,68],"8177":[1248,0,1265,68],"8189":[1249,4,1249,21],"819":[299,8,299,36],"8191":[1249,4,1249,21],"8192":[1261,11,1261,21],"8193":[1261,26,1261,41],"8199":[1261,43,1261,58],"820":[296,4,299,36],"8256":[1261,11,1261,59],"8257":[1261,11,1261,59],"8258":[1261,4,1261,59],"8259":[1261,4,1261,59],"8262":[1261,4,1261,59],"8263":[1262,50,1262,51],"8265":[1262,11,1262,26],"8267":[1262,27,1262,35],"8269":[1262,11,1262,36],"8270":[1262,11,1262,36],"8272":[1262,11,1262,36],"8273":[1262,11,1262,36],"8275":[1262,11,1262,36],"8276":[1262,11,1262,36],"8278":[1262,11,1262,36],"8280":[1262,11,1262,36],"8284":[1262,11,1262,47],"8285":[1262,11,1262,47],"8286":[1262,11,1262,47],"8287":[1262,11,1262,51],"8288":[1262,11,1262,51],"8289":[1262,4,1262,51],"829":[300,24,300,55],"8290":[1262,4,1262,51],"8293":[1262,4,1262,51],"8294":[1265,50,1265,67],"8296":[1263,11,1263,75],"8297":[1263,11,1263,26],"8299":[1263,27,1263,35],"8301":[1263,11,1263,36],"8302":[1263,11,1263,36],"8304":[1263,11,1263,36],"8305":[1263,11,1263,36],"8307":[1263,11,1263,36],"8308":[1263,11,1263,36],"8310":[1263,11,1263,36],"8312":[1263,11,1263,36],"8316":[1263,11,1263,54],"8317":[1263,11,1263,54],"8318":[1263,11,1263,54],"8319":[1263,11,1263,75],"8321":[1263,4,1263,75],"8324":[1263,4,1263,75],"8325":[1265,50,1265,67],"8327":[1264,4,1264,67],"8328":[1264,4,1264,19],"8330":[1264,20,1264,28],"8332":[1264,4,1264,29],"8333":[1264,4,1264,29],"8335":[1264,4,1264,29],"8336":[1264,4,1264,29],"8338":[1264,4,1264,29],"8339":[1264,4,1264,29],"8341":[1264,4,1264,29],"8343":[1264,4,1264,29],"8347":[1264,4,1264,47],"8348":[1264,4,1264,47],"8349":[1264,4,1264,47],"8350":[1264,4,1264,67],"8351":[1265,40,1265,48],"8353":[1265,4,1265,68],"8354":[1265,4,1265,68],"8387":[1265,50,1265,67],"8395":[1265,4,1265,68],"8397":[1265,4,1265,68],"8399":[1248,0,1265,68],"840":[300,24,300,44],"8407":[1269,0,1286,68],"8410":[1269,0,1286,68],"8422":[1270,4,1270,21],"8424":[1270,4,1270,21],"8425":[1282,11,1282,21],"8426":[1282,26,1282,41],"8432":[1282,43,1282,58],"845":[300,24,300,55],"848":[300,24,300,55],"8489":[1282,11,1282,59],"8490":[1282,11,1282,59],"8491":[1282,4,1282,59],"8492":[1282,4,1282,59],"8495":[1282,4,1282,59],"8496":[1283,50,1283,51],"8498":[1283,11,1283,26],"8500":[1283,27,1283,35],"8502":[1283,11,1283,36],"8503":[1283,11,1283,36],"8505":[1283,11,1283,36],"8506":[1283,11,1283,36],"8508":[1283,11,1283,36],"8509":[1283,11,1283,36],"8511":[1283,11,1283,36],"8513":[1283,11,1283,36],"8517":[1283,11,1283,47],"8518":[1283,11,1283,47],"8519":[1283,11,1283,47],"8520":[1283,11,1283,51],"8521":[1283,11,1283,51],"8522":[1283,4,1283,51],"8523":[1283,4,1283,51],"8526":[1283,4,1283,51],"8527":[1286,50,1286,67],"8529":[1284,11,1284,75],"8530":[1284,11,1284,26],"8532":[1284,27,1284,35],"8534":[1284,11,1284,36],"8535":[1284,11,1284,36],"8537":[1284,11,1284,36],"8538":[1284,11,1284,36],"8540":[1284,11,1284,36],"8541":[1284,11,1284,36],"8543":[1284,11,1284,36],"8545":[1284,11,1284,36],"8549":[1284,11,1284,54],"8550":[1284,11,1284,54],"8551":[1284,11,1284,54],"8552":[1284,11,1284,75],"8554":[1284,4,1284,75],"8557":[1284,4,1284,75],"8558":[1286,50,1286,67],"8560":[1285,4,1285,67],"8561":[1285,4,1285,19],"8563":[1285,20,1285,28],"8565":[1285,4,1285,29],"8566":[1285,4,1285,29],"8568":[1285,4,1285,29],"8569":[1285,4,1285,29],"8571":[1285,4,1285,29],"8572":[1285,4,1285,29],"8574":[1285,4,1285,29],"8576":[1285,4,1285,29],"8580":[1285,4,1285,47],"8581":[1285,4,1285,47],"8582":[1285,4,1285,47],"8583":[1285,4,1285,67],"8584":[1286,40,1286,48],"8586":[1286,4,1286,68],"8587":[1286,4,1286,68],"859":[300,24,300,55],"86":[258,0,318,92],"8620":[1286,50,1286,67],"8628":[1286,4,1286,68],"8630":[1286,4,1286,68],"8632":[1269,0,1286,68],"864":[300,24,300,55],"8640":[1290,0,1306,62],"8643":[1290,0,1306,62],"8655":[1291,4,1291,21],"8657":[1291,4,1291,21],"8658":[1302,25,1302,40],"8660":[1302,11,1302,40],"8661":[1302,11,1302,21],"8662":[1302,4,1302,40],"8663":[1302,4,1302,40],"8666":[1302,4,1302,40],"8667":[1303,29,1303,40],"867":[300,24,300,55],"8670":[1306,47,1306,61],"8672":[1303,11,1303,40],"8674":[1303,4,1303,40],"8677":[1303,4,1303,40],"8678":[1304,50,1304,51],"868":[300,24,300,55],"8680":[1304,11,1304,26],"8682":[1304,27,1304,35],"8684":[1304,11,1304,36],"8685":[1304,11,1304,36],"8687":[1304,11,1304,36],"8688":[1304,11,1304,36],"8690":[1304,11,1304,36],"8691":[1304,11,1304,36],"8693":[1304,11,1304,36],"8695":[1304,11,1304,36],"8699":[1304,11,1304,47],"8700":[1304,11,1304,47],"8701":[1304,11,1304,47],"8702":[1304,11,1304,51],"8703":[1304,11,1304,51],"8704":[1304,4,1304,51],"8705":[1304,4,1304,51],"8708":[1304,4,1304,51],"8709":[1306,47,1306,61],"871":[300,4,300,55],"8711":[1305,4,1305,61],"8712":[1305,4,1305,19],"8714":[1305,20,1305,28],"8716":[1305,4,1305,29],"8717":[1305,4,1305,29],"8719":[1305,4,1305,29],"872":[300,4,300,55],"8720":[1305,4,1305,29],"8722":[1305,4,1305,29],"8723":[1305,4,1305,29],"8725":[1305,4,1305,29],"8727":[1305,4,1305,29],"8728":[1305,4,1305,61],"8729":[1306,37,1306,45],"8731":[1306,4,1306,62],"8732":[1306,4,1306,62],"875":[300,4,300,55],"876":[301,20,301,28],"8765":[1306,47,1306,61],"8773":[1306,4,1306,62],"8775":[1306,4,1306,62],"8777":[1290,0,1306,62],"8785":[1317,0,1363,18],"8788":[1317,0,1363,18],"879":[301,4,301,28],"880":[301,4,301,17],"8800":[1317,20,1317,39],"8802":[1317,20,1317,39],"8814":[1317,41,1317,60],"8816":[1317,41,1317,60],"8817":[1331,25,1331,40],"8819":[1331,11,1331,40],"882":[301,4,301,28],"8820":[1331,11,1331,21],"8821":[1331,4,1331,40],"8822":[1331,4,1331,40],"8825":[1331,4,1331,40],"8826":[1332,25,1332,37],"8828":[1332,11,1332,21],"883":[302,22,302,25],"8830":[1332,11,1332,37],"8832":[1332,4,1332,37],"8835":[1332,4,1332,37],"8836":[1333,52,1333,53],"8838":[1333,11,1333,26],"8840":[1333,27,1333,37],"8842":[1333,11,1333,38],"8843":[1333,11,1333,38],"8845":[1333,11,1333,38],"8846":[1333,11,1333,38],"8848":[1333,11,1333,38],"8849":[1333,11,1333,38],"8851":[1333,11,1333,38],"8853":[1333,11,1333,38],"8857":[1333,11,1333,49],"8858":[1333,11,1333,49],"8859":[1333,11,1333,49],"886":[302,11,302,19],"8860":[1333,11,1333,53],"8861":[1333,11,1333,53],"8862":[1333,4,1333,53],"8863":[1333,4,1333,53],"8866":[1333,4,1333,53],"8867":[1334,11,1334,26],"8869":[1334,27,1334,37],"8871":[1334,11,1334,38],"8872":[1334,11,1334,38],"8874":[1334,11,1334,38],"8875":[1334,11,1334,38],"8877":[1334,11,1334,38],"8878":[1334,11,1334,38],"8880":[1334,11,1334,38],"8882":[1334,11,1334,38],"8886":[1334,11,1334,49],"8887":[1334,11,1334,49],"8888":[1334,11,1334,49],"8889":[1334,11,1334,54],"889":[302,11,302,25],"8890":[1334,4,1334,54],"8893":[1334,4,1334,54],"8894":[1336,31,1336,46],"8896":[1336,47,1336,57],"8898":[1336,31,1336,58],"8899":[1336,31,1336,58],"890":[302,11,302,25],"8901":[1336,31,1336,58],"8902":[1336,31,1336,58],"8904":[1336,31,1336,58],"8905":[1336,31,1336,58],"8907":[1336,31,1336,58],"8909":[1336,31,1336,58],"891":[302,4,302,25],"892":[302,4,302,25],"895":[302,4,302,25],"896":[304,22,304,32],"898":[304,4,304,32],"8985":[1336,4,1336,58],"8986":[1338,25,1338,35],"899":[304,4,304,19],"8995":[1338,4,1338,36],"8998":[1338,4,1338,36],"8999":[1338,4,1338,36],"9000":[1340,4,1340,18],"9002":[1340,4,1340,40],"9003":[1340,22,1340,40],"901":[304,4,304,32],"9018":[1340,4,1340,40],"9019":[1340,4,1340,40],"902":[305,4,305,36],"9020":[1340,4,1340,40],"9021":[1340,4,1340,40],"9022":[1340,4,1340,18],"9024":[1340,4,1340,40],"9025":[1342,44,1342,45],"9027":[1342,4,1342,19],"9029":[1342,20,1342,30],"9031":[1342,4,1342,31],"9032":[1342,4,1342,31],"9034":[1342,4,1342,31],"9035":[1342,4,1342,31],"9037":[1342,4,1342,31],"9038":[1342,4,1342,31],"9040":[1342,4,1342,31],"9042":[1342,4,1342,31],"9046":[1342,4,1342,41],"9047":[1342,4,1342,41],"9048":[1342,4,1342,41],"9049":[1342,4,1342,45],"9050":[1344,4,1344,19],"9052":[1344,20,1344,30],"9054":[1344,4,1344,31],"9055":[1344,4,1344,31],"9057":[1344,4,1344,31],"9058":[1344,4,1344,31],"9060":[1344,4,1344,31],"9061":[1344,4,1344,31],"9063":[1344,4,1344,31],"9065":[1344,4,1344,31],"9066":[1345,24,1345,47],"9071":[1347,20,1347,39],"9080":[1348,19,1348,37],"9088":[1349,27,1349,53],"9097":[1350,27,1350,53],"9106":[1351,20,1351,39],"9115":[1352,19,1352,37],"9124":[1353,19,1353,20],"9131":[1354,19,1354,20],"9138":[1344,4,1355,6],"9147":[1357,4,1357,44],"9148":[1357,33,1357,43],"9155":[1357,4,1357,24],"9159":[1357,4,1357,44],"9160":[1357,4,1357,44],"9163":[1357,4,1357,44],"9175":[1357,4,1357,24],"9180":[1357,4,1357,44],"9183":[1357,4,1357,44],"9194":[1357,4,1357,44],"9195":[1358,37,1358,47],"9197":[1358,4,1358,48],"9198":[1358,25,1358,35],"9200":[1358,4,1358,48],"9201":[1358,4,1358,48],"9236":[1358,4,1358,48],"9239":[1358,4,1358,48],"9240":[1360,4,1363,18],"9242":[1360,4,1363,18],"9244":[1360,4,1363,18],"9245":[1360,4,1363,18],"9251":[1361,40,1361,50],"9253":[1361,11,1361,50],"9254":[1361,32,1361,35],"9260":[1361,11,1361,36],"9261":[1361,11,1361,36],"9262":[1361,11,1361,36],"9263":[1361,11,1361,36],"9266":[1361,11,1361,36],"9267":[1361,11,1361,31],"9269":[1361,11,1361,36],"9270":[1361,11,1361,50],"9271":[1361,8,1363,18],"9272":[1360,4,1363,18],"9275":[1361,8,1363,18],"9276":[1362,40,1362,50],"9278":[1362,12,1362,50],"9279":[1362,33,1362,36],"9285":[1362,12,1362,37],"9286":[1362,12,1362,37],"9287":[1362,12,1362,37],"9288":[1362,12,1362,37],"9291":[1362,12,1362,37],"9292":[1362,12,1362,32],"9294":[1362,12,1362,37],"9295":[1362,12,1362,50],"9296":[1363,12,1363,18],"9297":[1363,12,1363,18],"9298":[1363,12,1363,18],"9301":[1363,12,1363,18],"9302":[1360,4,1363,18],"9303":[1360,4,1363,18],"9305":[1360,4,1363,18],"9306":[1360,4,1363,18],"9307":[1360,4,1363,18],"9308":[1360,4,1363,18],"9309":[1360,4,1363,18],"9312":[1360,4,1363,18],"9313":[1360,4,1363,18],"9314":[1360,4,1363,18],"9317":[1317,0,1363,18],"9325":[1367,0,1388,34],"9328":[1367,0,1388,34],"9329":[1367,39,1367,49],"9330":[1367,19,1367,36],"9332":[1367,19,1367,36],"9337":[1367,0,1388,34],"9345":[1367,0,1388,34],"9348":[1367,0,1388,34],"935":[305,25,305,35],"9360":[1367,19,1367,36],"9362":[1367,19,1367,36],"9364":[1385,11,1385,21],"9365":[1385,26,1385,34],"9371":[1385,36,1385,51],"9377":[1385,53,1385,66],"94":[258,0,318,92],"9434":[1385,11,1385,67],"9435":[1385,11,1385,67],"9436":[1385,4,1385,67],"9437":[1385,4,1385,67],"944":[305,4,305,36],"9440":[1385,4,1385,67],"9441":[1386,50,1386,51],"9443":[1386,11,1386,26],"9445":[1386,27,1386,35],"9447":[1386,11,1386,36],"9448":[1386,11,1386,36],"9450":[1386,11,1386,36],"9451":[1386,11,1386,36],"9453":[1386,11,1386,36],"9454":[1386,11,1386,36],"9456":[1386,11,1386,36],"9458":[1386,11,1386,36],"9462":[1386,11,1386,46],"9463":[1386,11,1386,46],"9464":[1386,11,1386,46],"9465":[1386,11,1386,51],"9467":[1386,4,1386,51],"947":[305,4,305,36],"9470":[1386,4,1386,51],"9471":[1388,25,1388,33],"948":[306,22,306,32],"9480":[1388,4,1388,34],"9483":[1388,4,1388,34],"9486":[1367,0,1388,34],"9494":[1392,0,1417,38],"9497":[1392,0,1417,38],"9509":[1392,23,1392,40],"951":[306,4,306,32],"9511":[1392,23,1392,40],"9512":[1402,11,1402,21],"9513":[1402,26,1402,41],"9519":[1402,43,1402,58],"952":[306,4,306,19],"954":[306,4,306,32],"955":[307,4,307,36],"9577":[1402,11,1402,59],"9578":[1402,11,1402,59],"9579":[1402,4,1402,59],"9580":[1402,4,1402,59],"9583":[1402,4,1402,59],"9584":[1404,50,1404,51],"9586":[1404,11,1404,26],"9588":[1404,27,1404,35],"9590":[1404,11,1404,36],"9591":[1404,11,1404,36],"9593":[1404,11,1404,36],"9594":[1404,11,1404,36],"9596":[1404,11,1404,36],"9597":[1404,11,1404,36],"9599":[1404,11,1404,36],"9601":[1404,11,1404,36],"9605":[1404,11,1404,47],"9606":[1404,11,1404,47],"9607":[1404,11,1404,47],"9608":[1404,11,1404,51],"9609":[1404,11,1404,51],"9610":[1404,4,1404,51],"9611":[1404,4,1404,51],"9614":[1404,4,1404,51],"9615":[1406,24,1406,25],"9617":[1406,4,1406,25],"9619":[1406,4,1406,25],"9624":[1407,4,1411,21],"9625":[1407,4,1411,21],"9627":[1407,13,1407,33],"9634":[1408,11,1408,12],"9636":[1408,11,1408,28],"9637":[1408,8,1409,17],"9640":[1408,8,1409,17],"9641":[1409,12,1409,17],"9644":[1409,12,1409,17],"9645":[1408,8,1409,17],"9646":[1410,20,1410,28],"9648":[1410,15,1410,28],"9649":[1410,15,1410,16],"9651":[1410,15,1410,28],"9653":[1410,8,1410,28],"9656":[1410,8,1410,28],"9657":[1411,8,1411,16],"9659":[1411,8,1411,21],"9660":[1411,20,1411,21],"9674":[1411,8,1411,21],"9675":[1411,8,1411,21],"9676":[1411,8,1411,21],"9677":[1411,8,1411,21],"9678":[1411,8,1411,16],"9680":[1411,8,1411,21],"9681":[1407,4,1411,21],"9683":[1407,4,1411,21],"9684":[1407,4,1411,21],"9685":[1407,4,1411,21],"9686":[1407,4,1411,21],"9687":[1407,4,1411,21],"9690":[1407,4,1411,21],"9691":[1407,4,1411,21],"9692":[1407,4,1411,21],"9693":[1407,4,1411,21],"9694":[1413,22,1413,40],"9696":[1413,11,1413,19],"9698":[1413,11,1413,40],"9699":[1413,11,1413,40],"97":[258,0,318,92],"9700":[1413,4,1413,40],"9701":[1413,4,1413,40],"9704":[1413,4,1413,40],"9705":[1415,51,1415,59],"9707":[1415,4,1415,59],"9708":[1415,4,1415,48],"9710":[1415,4,1415,59],"9714":[1416,4,1416,35],"9717":[1416,4,1416,35],"9718":[1416,4,1416,35],"9719":[1417,29,1417,37],"9721":[1417,4,1417,38],"9722":[1417,4,1417,38],"9757":[1417,4,1417,38],"9759":[1417,4,1417,38],"9761":[1392,0,1417,38],"9769":[1421,0,1438,9],"9772":[1421,0,1438,9],"9784":[1421,28,1421,45],"9786":[1421,28,1421,45],"9787":[1431,11,1431,21],"9788":[1431,26,1431,41],"9794":[1431,43,1431,58],"9852":[1431,11,1431,59],"9853":[1431,11,1431,59],"9854":[1431,4,1431,59],"9855":[1431,4,1431,59],"9858":[1431,4,1431,59],"9859":[1432,4,1437,18],"9861":[1432,4,1437,18],"9863":[1432,4,1437,18],"9864":[1432,4,1437,18],"9869":[1433,40,1433,48],"9871":[1433,11,1433,48],"9872":[1433,32,1433,35],"9877":[1433,11,1433,36],"9878":[1433,11,1433,36],"9879":[1433,11,1433,36],"988":[307,25,307,35],"9880":[1433,11,1433,36],"9883":[1433,11,1433,36],"9884":[1433,11,1433,31],"9886":[1433,11,1433,36],"9887":[1433,11,1433,48],"9888":[1433,8,1437,18],"9889":[1432,4,1437,18],"9892":[1433,8,1437,18],"9893":[1434,40,1434,52],"9895":[1434,33,1434,36],"9900":[1434,12,1434,37],"9901":[1434,12,1434,37],"9902":[1434,12,1434,37],"9903":[1434,12,1434,37],"9906":[1434,12,1434,37],"9907":[1434,12,1434,32],"9909":[1434,12,1434,37],"9910":[1434,12,1434,52],"9914":[1435,12,1435,43],"9917":[1435,12,1435,43],"9918":[1435,12,1435,43],"9919":[1436,41,1436,49],"9921":[1436,12,1436,50],"9922":[1436,12,1436,50],"9957":[1436,12,1436,50],"9959":[1436,12,1436,50],"9960":[1437,12,1437,18],"9961":[1437,12,1437,18],"9962":[1437,12,1437,18],"9965":[1437,12,1437,18],"9966":[1432,4,1437,18],"9967":[1432,4,1437,18],"9969":[1432,4,1437,18],"9970":[1432,4,1437,18],"9971":[1432,4,1437,18],"9972":[1432,4,1437,18],"9973":[1432,4,1437,18],"9976":[1432,4,1437,18],"9977":[1432,4,1437,18],"9978":[1432,4,1437,18],"9979":[1438,4,1438,9],"998":[307,4,307,36],"9981":[1438,4,1438,9],"9983":[1438,4,1438,9],"9986":[1421,0,1438,9],"9994":[1465,0,1473,42],"9997":[1465,0,1473,42],"9998":[1465,40,1465,50],"9999":[1465,20,1465,37]},"runtimeBytecode":{"bytecode":""},"sourceId":"YearnVault.vy","sourcemap":"-1:-1:0:-;;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;9514:2664;:::-;9683:10;9663:17;;9722:10;9699:19;;-1:-1;:::-;9514:2664::-;-1:-1;;;9514:2664;:::-;-1:-1;;;;;;:::-;9663:17;;9722:10;9699:19;;-1:-1;:::-;9514:2664::-;-1:-1;;;9514:2664;:::-;-1:-1;;;;;;:::-;9663:17;;-1:-1;;;;;;:::-;9699:19;;-1:-1::-;;;;;;;:::-;9534:14;;-1:-1;;;;;;:::-;9554:19;;-1:-1;;;;;;:::-;9579:16;;-1:-1;;;9601:24;-1:-1;;;;;:::-;;;;;;;;;;;;;;;9601:24;-1:-1;;;9631:26;-1:-1;;;;;:::-;;;;;;;;;;;;;;;9631:26;11050:15;:20;11043:27;:::-;11109:12;11096:25;:10;:25;-1:-1;;11145:2;;-1:-1;;;;;;11129:18;;:12;-1:-1;;11129:18;11126:134;;:::-;11169:48;-1:-1;;11176:29;-1:-1;;;;11176:20;-1:-1;;;11176:29;:::-;-1:-1;;;;;;;11176:29::-;-1:-1;;;11176:29;:::-;-1:-1;;;;;;;;;:::-;;;;;;;;;;;;;;;;11176:29;-1:-1;;;;;;;;;;;;;;;;;;;;;;;11207:9;-1:-1;;11207:9;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;11169:48;;-1:-1;;;11157:9;-1:-1;;;;;;;;;11157:60;;11126:134;:::-;:::-;11248:12;11236:24;-1:-1;11236:9;-1:-1;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;11236:24;11126:134::-;-1:-1;;11286:2;;-1:-1;;;;;;11268:20;;:14;-1:-1;;11268:20;11265:137;;:::-;11312:43;-1:-1;;11319:4;-1:-1;;11319:4;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;11325:29;-1:-1;;;;11325:20;-1:-1;;;11325:29;:::-;-1:-1;;;;;;;11325:29::-;-1:-1;;;11325:29;:::-;-1:-1;;;;;;;;;:::-;;;;;;;;;;;;;;;;11325:29;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;11312:43;;-1:-1;;;11298:11;-1:-1;;;;;;;;;11298:57;;11265:137;:::-;:::-;11388:14;11374:28;-1:-1;11374:11;-1:-1;;;;;11374:28;11265:137::-;-1:-1;;11427:31;-1:-1;;;;11427:20;-1:-1;;;11427:31;:::-;-1:-1;;;;;;;11427:31::-;-1:-1;;;11427:31;:::-;;11407:51;;;11479:8;11463:24;:13;:24;11510:3;11499:8;:14;;11492:21;;:::-;11562:10;11544:28;:15;:28;11577:32;11598:10;-1:-1;;;;11577:32;;11632:10;11614:28;:15;:28;11647:32;11668:10;-1:-1;;;;11647:32;;11699:7;11684:22;:12;:22;11711:26;11729:7;-1:-1;;;;11711:26;;11758:8;11742:24;:13;:24;11771:28;11790:8;-1:-1;;;;11771:28;;11826:4;11804:19;:26;11866:48;11891:22;-1:-1;;;11866:48;;11940:3;11919:18;:24;11963:46;11987:21;-1:-1;;;11963:46;;12032:15;12014;:33;12070:15;12052;:33;12121:57;12090:28;:88;-1:-1;9514:2664::-;-1:-1;;;12231:490;:::-;-1:-1;;;;;;12710:11;-1:-1;;12710:11;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12703:18;-1:-1;12231:490::-;-1:-1;;;13064:69;:::-;13103:30;-1:-1;;13110:23;:::i;:::-;;-1:-1;13064:69::-;-1:-1;;;13145:248;:::-;-1:-1;;;13157:16;-1:-1;;;;;:::-;;;;;;;;;;;;;;;13157:16;13357:15;13343:29;:10;13336:36;;:::-;13389:4;13377:16;-1:-1;13377:9;-1:-1;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;13377:16;-1:-1;13145:248::-;-1:-1;;;13406:262;:::-;-1:-1;;;13420:18;-1:-1;;;;;:::-;;;;;;;;;;;;;;;13420:18;13628:15;13614:29;:10;13607:36;;:::-;13662:6;13648:20;-1:-1;13648:11;-1:-1;;;;;13648:20;-1:-1;13406:262::-;-1:-1;;;13725:606;:::-;-1:-1;;;;;;:::-;13743:19;;14235:15;14221:29;:10;14214:36;;:::-;14280:10;14255:36;;-1:-1;14255:36;;14321:10;14296:35;:22;:35;-1:-1;13725:606::-;-1:-1;;;14344:584;:::-;14836:22;14822:36;:10;14815:43;;:::-;14881:10;14863:15;:28;14896:32;14917:10;-1:-1;;;14896:32;;-1:-1;14344:584::-;-1:-1;;;14941:403;:::-;-1:-1;;;;;;:::-;14959:19;;15259:15;15245:29;:10;15238:36;;:::-;15297:10;15279:28;:15;:28;15312:32;15333:10;-1:-1;;;;15312:32;;-1:-1;14941:403::-;-1:-1;;;15357:626;:::-;-1:-1;;;;;;:::-;15372:16;;15861:15;15847:29;:10;15840:36;;:::-;15893:7;:31;15905:4;-1:-1;;15911:12;-1:-1;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;15893:31;;15881:44;:::-;15945:7;15930:22;:12;:22;15957:26;15975:7;-1:-1;;;;15957:26;;-1:-1;15357:626::-;-1:-1;;;15996:479;:::-;16235:15;16221:29;:10;16214:36;;:::-;16353:23;16463:11;16338:38;-1:-1;16331:45;:::-;16463:11;16381:42;:28;:42;16428:47;16463:11;-1:-1;;;;16428:47;;-1:-1;15996:479::-;-1:-1;;;16489:496;:::-;16906:15;16892:29;:10;16885:36;;:::-;16979:5;16926:25;:17;:25;16956:29;16979:5;-1:-1;;;;16956:29;;-1:-1;16489:496::-;-1:-1;;;16998:423;:::-;17312:15;17298:29;:10;17291:36;;:::-;17346:11;17417:3;17339:18;-1:-1;17332:25;:::-;17417:3;17362:25;:19;:25;17392:29;17417:3;-1:-1;;;;17392:29;;-1:-1;16998:423::-;-1:-1;;;17434:338;:::-;17669:15;17655:29;:10;17648:36;;:::-;17703:7;17768:3;17696:14;-1:-1;17689:21;:::-;17768:3;17715:24;:18;:24;17744:28;17768:3;-1:-1;;;;17744:28;;-1:-1;17434:338::-;-1:-1;;;17785:358;:::-;-1:-1;;;;;;:::-;17801:17;;18035:10;18050:13;-1:-1;;;18065:15;-1:-1;;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;18035:46;;18028:53;;:::-;18102:8;18086:24;:13;:24;18115:28;18134:8;-1:-1;;;;18115:28;;-1:-1;17785:358::-;-1:-1;;;18156:959;:::-;-1:-1;;;;;;:::-;18181:12;;18921:6;-1:-1;18918:127;:::-;19030:15;19016:29;:10;19009:36;;:::-;18918:127;:::-;:::-;18944:10;18959:13;-1:-1;;;18974:15;-1:-1;;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;18944:46;;18937:53;;:::-;18918:127::-;19075:6;19050:31;:22;:31;19086:29;19108:6;-1:-1;;;;19086:29;;-1:-1;18156:959::-;-1:-1;;;19128:2461;:::-;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;-1:-1;;;;;;:::-;;19151:34;20236:10;20251:15;-1:-1;;;20268:15;-1:-1;;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;20236:48;;20229:55;;:::-;20356:75;;;;20436:1116;;;:::-;-1:-1;;;20516:1;-1:-1;;20495:23;;;;:::-;:20;:23;20480:38;-1:-1;20490:1;-1:-1;;;;;;:::-;20480:12;:9;:12;:38;-1:-1;20537:1;-1:-1;;;;;;:::-;20531:8;:5;:8;:24;20528:170;:::-;-1:-1;20662:1;-1:-1;;;;;;:::-;20652:12;:9;:12;:28;20645:35;:::-;20693:5;:::-;20528:170::-;20802:12;-1:-1;20796:1;-1:-1;;;;;;:::-;20786:12;:9;:12;:28;-1:-1;20779:35;:::-;20870:1;20831:15;-1:-1;20853:1;-1:-1;;;;;;:::-;20847:8;:5;:8;20831:25;;;;;;;;-1:-1;;20831:36;;;:40;;20824:47;;:::-;20906:5;20881:30;;20920:482;;;:::-;-1:-1;;;;20977:1;-1:-1;;;;;;:::-;20971:8;:5;:8;:24;20968:90;:::-;21032:4;21013:16;:23;21053:5;:::-;20968:90::-;-1:-1;21096:1;-1:-1;;;;;;:::-;21086:12;:9;:12;21074:24;-1:-1;21080:1;-1:-1;;;;;;:::-;21074:8;:5;:8;:24;21071:156;;:::-;21223:4;21204:16;:23;21071:156::-;21249:1;21244:6;:1;:6;-1:-1;21241:121;:::-;21354:8;:::-;21241:121::-;-1:-1;21400:1;-1:-1;;;;;;:::-;21394:8;:5;:8;21382:20;-1:-1;21388:1;-1:-1;;;;;;:::-;21382:8;:5;:8;:20;-1:-1;21375:27;:::-;20920:482::-;;;;;;;:::-;:::-;;;21459:16;21452:23;;;:::-;-1:-1;21550:1;-1:-1;;;;;;:::-;21544:8;:5;:8;21518:34;21539:1;-1:-1;;21518:23;;;;:::-;:20;:23;:34;20436:1116;;;;;;:::-;:::-;;;21557:32;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21557:32;;-1:-1;19128:2461::-;-1:-1;;;23119:687;:::-;-1:-1;;;;;;:::-;23132:17;;23761:10;-1:-1;;23773:8;-1:-1;;;23783:6;-1:-1;;;;23746:44;:::i;:::-;23802:4;-1:-1;;;23795:11;-1:-1;23119:687::-;-1:-1;;;23819:1281;:::-;-1:-1;;;;;;:::-;23836:15;;-1:-1;;;;;;:::-;23853:17;;24764:11;24727:14;24742:6;24727:22;;;;;;;;-1:-1;24750:10;24727:34;;;;;;;;;:48;;24723:316;;:::-;24807:14;24822:6;24807:22;;;;;;;;-1:-1;24830:10;24807:34;;;;;;;;;:43;25077:6;-1:-1;;;;;:::-;;;;24807:43;;;;24786:64;;24896:9;24859:46;:14;24874:6;24859:22;;;;;;;;-1:-1;24882:10;24859:34;;;;;;;;;:46;25017:10;25009:6;24996:43;;25029:9;-1:-1;;;;24996:43;;24723:316::-;25059:6;-1:-1;;;25067:8;-1:-1;;;25077:6;-1:-1;;;;25044:40;:::i;:::-;25096:4;-1:-1;;;25089:11;-1:-1;23819:1281::-;-1:-1;;;25113:653;:::-;-1:-1;;;;;;:::-;25125:16;;25743:6;25660:44;:14;25675:10;25660:26;;;;;;;-1:-1;25687:7;-1:-1;25660:35;;;;;;;;;:44;25734:7;25709:41;25722:10;25709:41;25743:6;-1:-1;;;;25709:41;;25762:4;-1:-1;;;25755:11;-1:-1;25113:653::-;-1:-1;;;25779:686;:::-;-1:-1;;;;;;:::-;25801:16;;26329:14;26344:10;26329:26;;;;;;;-1:-1;26356:7;-1:-1;26329:35;;;;;;;;;-1:-1;26329:45;26368:6;-1:-1;;;;;;;:::-;;;;26329:45;;;;-1:-1;26329:45;;26404:7;26379:70;26392:10;26379:70;26413:14;26428:10;26413:26;;;;;;;-1:-1;26440:7;-1:-1;26413:35;;;;;;;;;-1:-1;;;;26379:70;;26461:4;-1:-1;;;26454:11;-1:-1;25779:686::-;-1:-1;;;26478:686;:::-;-1:-1;;;;;;:::-;26500:16;;27028:14;27043:10;27028:26;;;;;;;-1:-1;27055:7;-1:-1;27028:35;;;;;;;;;-1:-1;27028:45;27067:6;-1:-1;;;;;:::-;;;;27028:45;;;;-1:-1;27028:45;;27103:7;27078:70;27091:10;27078:70;27112:14;27127:10;27112:26;;;;;;;-1:-1;27139:7;-1:-1;27112:35;;;;;;;;;-1:-1;;;;27078:70;;27160:4;-1:-1;;;27153:11;-1:-1;26478:686::-;-1:-1;;;27177:1742;:::-;-1:-1;;;;;;:::-;27188:14;;-1:-1;;;;;;:::-;27204:16;;-1:-1;;;27256:20;-1:-1;;;;;:::-;;;;;;;;;;;;;;;27256:20;27882:12;27873:5;:21;-1:-1;27866:28;:::-;27938:15;28424:6;27928:25;-1:-1;27921:32;:::-;27998:11;28010:5;27998:18;;;;;;;;27981:35;;;28058:425;-1:-1;;28078:11;-1:-1;;28078:11;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;28103:23;:::i;:::-;;-1:-1;;;;;;;;;;28167:292;28195:16;-1:-1;;;;;;;;;28241:5;28233:23;-1:-1;;;;;;;;;28286:7;28278:25;-1:-1;;;;;;;;;28896:6;28325:24;-1:-1;;;;;;;;;28379:5;28371:23;-1:-1;;;;;;;;;28424:6;28416:24;-1:-1;;;;;;;;;;;;;28167:292;;-1:-1;;;;;28140:333;;;-1:-1;;;;;;;;;;;;;28058:425;;-1:-1;;;;;28039:450;;;28021:468;;28564:9;-1:-1;;;28558:23;:::-;-1:-1;;;28558:23;28578:2;-1:-1;28558:23;;-1:-1;;;;;;;;;;28550:41;;;28537:54;;28623:9;-1:-1;;;28617:24;:::-;-1:-1;;;28617:24;28638:2;-1:-1;28617:24;;-1:-1;;;;;;;;;;28609:42;;;28596:55;;28683:9;-1:-1;;;28677:23;:::-;-1:-1;;;28677:23;28698:1;-1:-1;28677:23;;-1:-1;;;;;;;;;;28669:41;;;28656:54;;28752:5;28722:35;28732:6;-1:-1;;28722:26;28740:1;-1:-1;;28722:26;28743:1;-1:-1;;28722:26;28746:1;-1:-1;;28722:26;-1:-1;;;;;;;28722:26;-1:-1;28722:26;28715:42;;:::-;28896:6;28788:39;:14;28803:5;28788:21;;;;;;;;-1:-1;28810:7;-1:-1;28788:30;;;;;;;;;:39;28853:5;:9;28861:1;-1:-1;;;;;;:::-;;;;28853:9;;;;28832:11;28844:5;28832:18;;;;;;;;:30;28887:7;28867:36;28880:5;28867:36;;28896:6;-1:-1;;;;28867:36;;28915:4;-1:-1;;;28908:11;-1:-1;27177:1742::-;-1:-1;;;29065:314;:::-;29353:26;-1:-1;;29360:19;:::i;:::-;;-1:-1;29065:314::-;-1:-1;;;30987:2827;:::-;31018:11;30999:16;;31052:10;31031:18;;-1:-1;:::-;30987:2827::-;-1:-1;;;30987:2827;:::-;-1:-1;30999:16;;;31052:10;31031:18;;-1:-1;:::-;30987:2827::-;-1:-1;;;30987:2827;:::-;-1:-1;30999:16;;;-1:-1;;;;;;:::-;31031:18;;-1:-1::-;;;;:::-;;;;32749:22;32745:26;32738:33;:::-;32810:9;:37;32828:4;-1:-1;;32834:12;-1:-1;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;32810:37;;32803:44;;:::-;32871:7;32853:25;;;32988:11;32978:6;:21;32975:275;;:::-;33035:17;:39;-1:-1;;33055:19;:::i;:::-;;-1:-1;;;;;:::-;;;;33035:39;;;;-1:-1;;33088:32;33109:10;-1:-1;;;;;;33088:10;-1:-1;;;33088:32;:::-;-1:-1;;;;;;;33088:32::-;-1:-1;;;33088:32;:::-;;-1:-1;;;;;;;;;;33018:113;;;;33009:6;:122;32975:275;:::-;:::-;33233:17;33201:49;-1:-1;;33201:19;:::i;:::-;;:28;33223:6;-1:-1;;;;;;;:::-;;;;33201:28;;;;-1:-1;33194:56;:::-;32975:275::-;33313:1;33304:6;:10;;33297:17;;:::-;33544:9;-1:-1;;;33555:6;-1:-1;;;;;33517:45;:::i;:::-;;33499:63;;;33677:18;-1:-1;;;33697:10;-1:-1;;33709:4;-1:-1;;33715:6;-1:-1;;;;33648:74;:::i;:::-;33727:14;:24;33745:6;-1:-1;;;;;;;:::-;;;;33727:24;;;;:14;:24;33769:9;33757:38;;33780:6;-1:-1;;;33788:6;-1:-1;;;;33757:38;;33801:13;33808:6;-1:-1;;;;30987:2827::-;-1:-1;;;34695:1011;:::-;35497:14;-1:-1;;;;;35475:37;:::i;:::-;;35457:55;;;-1:-1;;35518:169;:::-;-1:-1;35534:20;-1:-1;;;;35567:8;:24;35564:46;:::-;35605:5;:::-;35564:46::-;35619:6;:68;35651:15;35667:8;35651:25;;;;;;;;-1:-1;;35651:35;;;-1:-1;;;;;35629:58;:::i;:::-;;-1:-1;;;;;;;:::-;;;;35619:68;;;;:6;:68;35518:169;;;;;;:::-;:::-;;;35693:13;35700:6;-1:-1;34695:1011::-;-1:-1;;;36887:6745;:::-;36926:11;36905:18;;36964:10;36943:18;;36999:1;36980:16;;-1:-1;:::-;36887:6745::-;-1:-1;;;36887:6745;:::-;-1:-1;36905:18;;;36964:10;36943:18;;36999:1;36980:16;;-1:-1;:::-;36887:6745::-;-1:-1;;;36887:6745;:::-;-1:-1;36905:18;;;-1:-1;;;;;;:::-;36943:18;;36999:1;36980:16;;-1:-1;:::-;36887:6745::-;-1:-1;;;36887:6745;:::-;-1:-1;36905:18;;;-1:-1;;;;;;:::-;36943:18;;-1:-1;36980:16;;;-1:-1::-;;;;:::-;;;;39495:9;39477:27;;;39603:7;39592;:18;-1:-1;39585:25;:::-;39689:11;39679:6;:21;39676:69;;:::-;39719:14;39734:10;39719:26;;;;;;;39710:35;:6;:35;39676:69::-;39808:14;39823:10;39808:26;;;;;;;39798:36;:6;:36;-1:-1;39791:43;:::-;39898:1;39889:6;:10;;39882:17;;:::-;39967:6;-1:-1;;;;;39950:24;:::i;:::-;;39933:41;;;40004:14;39979:39;;;40035:13;40027:21;:5;:21;;40024:3169;;:::-;40079:1;40058:22;;-1:-1;;40704:1692;:::-;-1:-1;40720:20;-1:-1;;;;40757:8;:24;40754:50;:::-;40799:5;:::-;40754:50::-;40859:13;40850:22;:5;:22;-1:-1;40847:48;:::-;40890:5;:::-;40847:48::-;40959:5;:21;40967:13;-1:-1;;;;;:::-;;;;40959:21;;;;40935:45;;41329:12;41325:54;41343:15;41359:8;41343:25;;;;;;;;-1:-1;;41343:35;;;-1:-1;;;;;;;;;;41325:54;;;;41310:12;:69;41395:12;:17;41392:46;:::-;41430:8;:::-;41392:46::-;-1:-1;;41620:26;41641:4;-1:-1;;;;;;41620:10;-1:-1;;;41620:26;:::-;-1:-1;;;;;;;41620:26::-;-1:-1;;;41620:26;:::-;;41598:48;;;-1:-1;;41675:41;41703:12;-1:-1;;;;;;;;41675:18;-1:-1;;;41675:41;:::-;-1:-1;;;;;;;41675:41::-;-1:-1;;;41675:41;:::-;;41659:57;;;-1:-1;;41750:26;41771:4;-1:-1;;;;;;41750:10;-1:-1;;;41750:26;:::-;-1:-1;;;;;;;41750:26::-;-1:-1;;;41750:26;:::-;;:39;41779:10;-1:-1;;;;;:::-;;;;41750:39;;;;41729:60;;41802:13;:26;41819:9;-1:-1;;;;;;;:::-;;;;41802:26;;;;:13;:26;41918:1;41911:4;:8;;41908:125;;:::-;41937:5;:13;41946:4;-1:-1;;;;;:::-;;;;41937:13;;;;:5;:13;41967:9;:17;41980:4;-1:-1;;;;;;;:::-;;;;41967:17;;;;:9;:17;42018:8;-1:-1;;;42028:4;-1:-1;;;41908:125;42001:32;:::i;41908:125::-;42218:15;42234:8;42218:25;;;;;;;;-1:-1;;42218:35;;;-1:-1;42218:48;42257:9;-1:-1;;;;;:::-;;;;42218:48;;;;-1:-1;42218:48;;42279:14;:27;42297:9;-1:-1;;;;;:::-;;;;42279:27;;;;:14;:27;42344:8;42319:77;;42354:15;42370:8;42354:25;;;;;;;;-1:-1;;42354:35;;;-1:-1;;;42391:4;-1:-1;;;;42319:77;;40704:1692::-;;;;;;;:::-;:::-;;;42423:13;42406:30;:14;:30;42697:13;42689:21;:5;:21;;42686:287;;:::-;42732:13;42724:21;:5;:21;42955:5;:17;42963:9;-1:-1;;;;;;;:::-;;;;42955:17;;;;-1:-1;;;;42933:40;:::i;:::-;;42924:49;:6;:49;42686:287::-;43154:7;:29;43165:5;:17;43173:9;-1:-1;;;;;;;:::-;;;;43165:17;;;;-1:-1;;;;;;;;;;;;;:::-;43154:29;;;;43186:7;-1:-1;;;43154:39;;;;43141:9;:52;-1:-1;43134:59;:::-;40024:3169::-;43257:16;:26;43277:6;-1:-1;;;;;:::-;;;;43257:26;;;;:16;:26;43288:14;43303:10;43288:26;;;;;;;-1:-1;43288:36;43318:6;-1:-1;;;;;:::-;;;;43288:36;;;;-1:-1;43288:36;;43354:12;43342:10;43329:46;43368:6;-1:-1;;;;43329:46;;43385:14;:23;43403:5;-1:-1;;;;;:::-;;;;43385:23;;;;:14;:23;43530:18;-1:-1;;;43550:9;-1:-1;;;43561:5;-1:-1;;;;43505:62;:::i;:::-;43585:9;43572:38;;43596:6;-1:-1;;;43604:5;-1:-1;;;;43572:38;;43620:12;43627:5;-1:-1;;;;36887:6745::-;-1:-1;;;43651:228;:::-;43835:44;-1:-1;43865:13;-1:-1;;43859:19;;:::-;43865:13;-1:-1;43859:2;:19;-1:-1;;;;43842:37;:::i;:::-;;-1:-1;43651:228::-;-1:-1;;;44553:2176;:::-;-1:-1;;;;;;:::-;44574:17;;45442:44;:60;45435:67;:::-;45550:22;45546:26;45539:33;:::-;45598:15;45584:29;:10;45577:36;;:::-;45673:12;45661:8;:24;-1:-1;45654:31;:::-;45697:15;45713:8;45697:25;;;;;;;;-1:-1;;45697:36;;;:41;45690:48;:::-;-1:-1;;45758:26;-1:-1;;;;45758:18;-1:-1;;;45758:26;:::-;-1:-1;;;;;;;45758:26::-;-1:-1;;;45758:26;:::-;-1:-1;;;;;;:::-;;;45758:26;45750:34;:4;45743:41;;:::-;-1:-1;;45818:25;-1:-1;;;;45818:18;-1:-1;;;45818:25;:::-;-1:-1;;;;;;;45818:25::-;-1:-1;;;45818:25;:::-;-1:-1;;;;;;:::-;;;45818:25;45796:47;:18;:47;45789:54;;:::-;45918:7;45888:14;:26;46569:9;-1:-1;;;;;;;:::-;;;;45888:26;;;;-1:-1;45881:44;:::-;46481:17;45937:38;46462:17;45937:38;-1:-1;45930:45;:::-;46005:11;46500:14;45987:29;-1:-1;45980:36;:::-;46065:15;46081:8;46065:25;;;;;;;;46500:14;-1:-1;;;46170:15;-1:-1;;;;46569:9;-1:-1;;;;;46462:17;-1:-1;;;;;46481:17;-1:-1;;;;;46329:15;-1:-1;;;;46365:1;-1:-1;;;;46387:1;-1:-1;;;;46409:1;-1:-1;;;;46065:353;46441:8;46423:92;;46569:9;-1:-1;;;46462:17;-1:-1;;;46481:17;-1:-1;;;46500:14;-1:-1;;;;46423:92;;46551:14;:27;46569:9;-1:-1;;;;;;;:::-;;;;46551:27;;;;:14;:27;46685:8;46638:55;:44;:55;-1:-1;46698:31;:::i;-1:-1::-;;44553:2176::-;-1:-1;;;46742:766;:::-;-1:-1;;;;;;:::-;46775:17;;47092:10;47107:15;-1:-1;;;47124:15;-1:-1;;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;47092:48;;47085:55;;:::-;47191:1;47152:15;47168:8;47152:25;;;;;;;;-1:-1;;47152:36;;;:40;;47145:47;;:::-;-1:-1;;47204:34;-1:-1;;;;47204:18;-1:-1;;;47204:34;:::-;-1:-1;;;;;;;47204:34::-;-1:-1;;;47204:34;:::-;-1:-1;;;;;;:::-;;;47204:34;:43;47197:50;:::-;47281:14;:53;47299:15;47315:8;47299:25;;;;;;;;-1:-1;;47299:35;;;-1:-1;;;;;:::-;;;;47281:53;;;;:14;:53;47498:9;47339:47;:15;47355:8;47339:25;;;;;;;;-1:-1;;47339:35;;;:47;47391:14;:27;47498:9;-1:-1;;;;;;;:::-;;;;47391:27;;;;:14;:27;47448:7;47430:14;:25;-1:-1;47423:32;:::-;47488:8;47460:48;;47498:9;-1:-1;;;;47460:48;;-1:-1;46742:766::-;-1:-1;;;47521:752;:::-;-1:-1;;;;;;:::-;47562:17;;47960:10;47975:15;-1:-1;;;47992:15;-1:-1;;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;47960:48;;47953:55;;:::-;48059:1;48020:15;48036:8;48020:25;;;;;;;;-1:-1;;48020:36;;;:40;;48013:47;;:::-;48255:17;48072:64;:15;48088:8;48072:25;;;;;;;;-1:-1;;48072:43;;;:64;-1:-1;48065:71;:::-;48255:17;48141:63;:15;48157:8;48141:25;;;;;;;;-1:-1;;48141:43;;;:63;48245:8;48209:64;;48255:17;-1:-1;;;;48209:64;;-1:-1;47521:752::-;-1:-1;;;48286:752;:::-;-1:-1;;;;;;:::-;48327:17;;48725:10;48740:15;-1:-1;;;48757:15;-1:-1;;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;48725:48;;48718:55;;:::-;48824:1;48785:15;48801:8;48785:25;;;;;;;;-1:-1;;48785:36;;;:40;;48778:47;;:::-;49020:17;48837:64;:15;48853:8;48837:25;;;;;;;;-1:-1;;48837:43;;;:64;-1:-1;48830:71;:::-;49020:17;48906:63;:15;48922:8;48906:25;;;;;;;;-1:-1;;48906:43;;;:63;49010:8;48974:64;;49020:17;-1:-1;;;;48974:64;;-1:-1;48286:752::-;-1:-1;;;49051:627;:::-;-1:-1;;;;;;:::-;49089:17;;49445:15;49431:29;:10;49424:36;;:::-;49490:11;49663:14;49472:29;-1:-1;49465:36;:::-;49552:1;49513:15;49529:8;49513:25;;;;;;;;-1:-1;;49513:36;;;:40;;49506:47;;:::-;49663:14;49558:57;:15;49574:8;49558:25;;;;;;;;:57;49653:8;49620:58;;49663:14;-1:-1;;;;49620:58;;-1:-1;49051:627::-;-1:-1;;;49879:1840;:::-;-1:-1;;;;;;:::-;49899:19;;-1:-1;;;;;;:::-;49920:19;;50532:15;50518:29;:10;50511:36;;:::-;50573:12;50559:10;:26;-1:-1;50552:33;:::-;50638:1;50597:15;50613:10;50597:27;;;;;;;;-1:-1;;50597:38;;;:42;;50590:49;;:::-;50651:15;50667:10;50651:27;;;;;;;;-1:-1;;50651:38;;;:43;50644:50;:::-;50727:15;50743:10;50727:27;;;;;;;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50700:54;50781:10;-1:-1;;;;50760:32;:::i;:::-;50844:14;:36;50862:18;-1:-1;;;;;;;:::-;;;;50844:36;;;;:14;:36;50964:1;50924:15;50940:10;50924:27;;;;;;;;-1:-1;;50924:37;;;:41;50971:15;50987:10;50971:27;;;;;;;;51042:23;-1:-1;;;51159:19;-1:-1;;;;;51199:18;-1:-1;;;;;51246:26;-1:-1;;;;;51301:26;-1:-1;;;;;51349:19;-1:-1;;;;;51389:18;-1:-1;;;;;51428:1;-1:-1;;;;51450:1;-1:-1;;;;50971:488;-1:-1;;51465:40;51494:10;-1:-1;;;51465:20;-1:-1;;51465:40;;:::-;-1:-1;;;;;51465:20;-1:-1;;;51465:40;:::-;-1:-1;;;;;;;51465:40::-;51543:10;51510:44;51531:10;51510:44;;-1:-1;51510:44;;51560:159;;;:::-;-1:-1;;;51638:10;51609:39;51630:3;-1:-1;;51609:25;;;;:::-;:20;:25;:39;51606:113;51560:159;51606:113::-;51690:10;51662:38;51683:3;-1:-1;;51662:25;;;;:::-;:20;:25;:38;51713:6;;;:::-;51560:159::-;;;;;;;:::-;;;-1:-1::-;;49879:1840::-;-1:-1;;;51785:1151;:::-;51824:10;51804:17;;-1:-1;:::-;51785:1151::-;-1:-1;;;51785:1151;:::-;-1:-1;;;;;;:::-;51804:17;;-1:-1::-;52772:10;52787:8;-1:-1;;;52797:15;-1:-1;;;52814:13;-1:-1;;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;52772:56;;52765:63;;:::-;52879:1;52840:15;52856:8;52840:25;;;;;;;;-1:-1;;52840:35;;;:40;-1:-1;52833:47;:::-;52927:8;-1:-1;;;;52906:30;:::i;-1:-1::-;;51785:1151::-;-1:-1;;;52949:889;:::-;-1:-1;;;;;;:::-;52972:17;;53303:10;53318:15;-1:-1;;;53335:15;-1:-1;;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;53303:48;;53296:55;;:::-;53435:1;53396:15;53412:8;53396:25;;;;;;;;-1:-1;;53396:36;;;:40;;53389:47;;:::-;53497:1;53477:21;;-1:-1;;53503:129;:::-;-1:-1;53512:20;-1:-1;;;;53545:1;:17;53542:39;:::-;53576:5;:::-;53542:39::-;53602:8;53597:13;:1;:13;-1:-1;53590:20;:::-;53619:8;:13;53631:1;-1:-1;;;;;;:::-;;;;53619:13;;;;:8;:13;53503:129;;;;;;:::-;:::-;;;53684:18;53673:8;:29;;53666:36;;:::-;53755:8;53708:55;:44;:55;-1:-1;53768:31;:::i;:::-;53829:8;53804:34;;-1:-1;53804:34;;-1:-1;52949:889::-;-1:-1;;;53851:752;:::-;-1:-1;;;;;;:::-;53879:17;;54240:10;54255:15;-1:-1;;;54272:15;-1:-1;;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;54240:48;;54233:55;;:::-;54293:254;;;:::-;-1:-1;;;54371:8;54342:37;54363:3;-1:-1;;54342:25;;;;:::-;:20;:25;:37;54339:208;54293:254;54339:208::-;54421:12;54414:3;-1:-1;;54393:25;;;;:::-;:20;:25;:40;-1:-1;54446:31;:::i;:::-;54519:8;54490:38;;-1:-1;54490:38;;54541:6;;;:::-;54293:254::-;;;;;;;:::-;;;54598:5;;;-1:-1::-;;53851:752::-;-1:-1;;;55258:365;:::-;55298:10;55278:17;;-1:-1;:::-;55258:365::-;-1:-1;;;55258:365;:::-;-1:-1;;;;;;:::-;55278:17;;-1:-1::-;55585:38;55614:8;-1:-1;;;;;55592:31;:::i;:::-;;-1:-1;55258:365::-;-1:-1;;;57467:619;:::-;57507:10;57487:17;;-1:-1;:::-;57467:619::-;-1:-1;;;57467:619;:::-;-1:-1;;;;;;:::-;57487:17;;-1:-1::-;58048:38;58077:8;-1:-1;;;;;58055:31;:::i;:::-;;-1:-1;57467:619::-;-1:-1;;;59039:169;:::-;-1:-1;;59106:19;:::i;:::-;;59086:39;:17;:39;;59083:125;:::-;59207:1;-1:-1;;;59200:8;;:::-;-1:-1;59083:125::-;:::-;59142:17;:39;-1:-1;;59162:19;:::i;:::-;;-1:-1;;;;;:::-;;;;59142:39;;;;-1:-1;;;59135:46;;:::-;-1:-1::-;;59039:169::-;-1:-1;;;59227:527;:::-;59266:10;59246:17;;-1:-1;:::-;59227:527::-;-1:-1;;;59227:527;:::-;-1:-1;;;;;;:::-;59246:17;;-1:-1::-;59717:37;59745:8;-1:-1;;;;;59724:30;:::i;:::-;;-1:-1;59227:527::-;-1:-1;;;62443:5451;:::-;64307:1;64266:15;64282:10;64266:27;;;;;;;-1:-1;;64266:38;;;:42;;64259:49;;:::-;67243:4;64406:19;65167:12;-1:-1;;;;;;;:::-;;;;64406:19;;;;-1:-1;;64370:32;64391:10;-1:-1;;;;;;64370:10;-1:-1;;;64370:32;:::-;-1:-1;;;;;;;64370:32::-;-1:-1;;;64370:32;:::-;;:55;-1:-1;64363:62;:::-;64515:1;67257:4;64508:8;;64505:55;;:::-;64543:10;-1:-1;;67257:4;-1:-1;;;64505:55;64526:34;:::i;64505:55::-;64696:10;-1:-1;;67243:4;-1:-1;;;;;64679:34;:::i;:::-;;64658:55;;;64761:15;64777:10;64761:27;;;;;;;-1:-1;;64761:37;;;-1:-1;64761:45;67243:4;-1:-1;;;;;;;:::-;;;;64761:45;;;;-1:-1;64761:45;;64934:10;-1:-1;;;;64912:33;:::i;:::-;;64894:51;;;65124:10;-1:-1;;;;65102:33;:::i;:::-;;65086:49;;;65167:12;65163:23;65181:4;-1:-1;;;;;;;;;;65163:23;;;;65140:46;;65209:1;65195:11;:15;;65192:146;;:::-;65220:15;65236:10;65220:27;;;;;;;-1:-1;;65220:37;;;-1:-1;65220:52;65261:11;-1:-1;;;;;:::-;;;;65220:52;;;;-1:-1;65220:52;;65281:14;:29;65299:11;-1:-1;;;;;:::-;;;;65281:29;;;;:14;:29;65319:4;:19;65327:11;-1:-1;;;;;:::-;;;;65319:19;;;;:4;:19;65192:146::-;65703:1;65694:6;:10;;65691:103;;:::-;65714:15;65730:10;65714:27;;;;;;;-1:-1;;65714:37;;;-1:-1;65714:47;65755:6;-1:-1;;;;;;;:::-;;;;65714:47;;;;-1:-1;65714:47;;65770:14;:24;65788:6;-1:-1;;;;;;;:::-;;;;65770:24;;;;:14;:24;65691:103::-;67243:4;66219:18;66226:11;-1:-1;;;;;;;:::-;;;;66219:18;;;;66197:40;;66258:6;66245:19;:10;:19;;66242:401;:::-;66456:6;66443:19;:10;:19;;66438:205;66242:401;66438:205::-;66510:14;:37;66528:10;:19;66541:6;-1:-1;;;;;:::-;;;;66528:19;;;;-1:-1;;;;;;:::-;;;;66510:37;;;;:14;:37;66585:18;-1:-1;;;66605:10;-1:-1;;66617:4;-1:-1;;66623:10;:19;66636:6;-1:-1;;;;;:::-;;;;66623:19;;;;-1:-1;;66242:401;66556:87;:::i;66242:401;:::-;:::-;66310:14;:37;66328:6;:19;66337:10;-1:-1;;;;;:::-;;;;66328:19;;;;-1:-1;;;;:::-;;;;66310:37;;;;:14;:37;66381:18;-1:-1;;;66401:10;-1:-1;;66413:6;:19;66422:10;-1:-1;;;;;:::-;;;;66413:19;;;;-1:-1;;66242:401;66356:77;:::i;66242:401::-;-1:-1;;66874:29;:::i;:::-;;:36;67243:4;-1:-1;;;;;;;:::-;;;;66874:36;;;;66913:9;-1:-1;;;;;:::-;;;;66874:48;;;;66840:82;;67257:4;66930:29;:22;:29;;66927:132;:::-;67058:1;67038:17;:21;66927:132;:::-;:::-;66990:22;:29;67257:4;-1:-1;;;;;:::-;;;;66990:29;;;;66970:17;:49;66927:132::-;67134:15;67093;67109:10;67093:27;;;;;;;-1:-1;;67093:38;;;:56;67172:15;67154;:33;67223:10;67193:300;-1:-1;;;;67271:11;-1:-1;;;67292:15;67308:10;67292:27;;;;;;;-1:-1;;67292:37;;;-1:-1;;;67339:15;67355:10;67339:27;;;;;;;-1:-1;;67339:37;;;-1:-1;;;67386:15;67402:10;67386:27;;;;;;;-1:-1;;67386:37;;;-1:-1;;;67433:6;-1:-1;;;67449:15;67465:10;67449:27;;;;;;;-1:-1;;67449:37;;;-1:-1;;;;67193:300;;67502:15;67518:10;67502:27;;;;;;;-1:-1;;67502:37;;;:42;:68;;:::-;67548:22;67502:68;;:::-;:::-;;:::-;67499:395;:::-;67883:11;67890:4;67883:11;:::-;-1:-1;67499:395::-;:::-;67748:50;-1:-1;;67755:43;-1:-1;;;;67755:20;-1:-1;;67755:43;:::-;-1:-1;;;;;;;67755:43::-;-1:-1;;;67755:43;:::-;;67748:50;:::-;-1:-1::-;;62443:5451::-;-1:-1;;;67907:977;:::-;67951:11;67933:15;;-1:-1;:::-;67907:977::-;-1:-1;;;67907:977;:::-;-1:-1;67933:15;;;-1:-1::-;;;;;;;:::-;67917:14;;68522:15;68508:29;:10;68501:36;;:::-;68618:6;68601:23;;;68641:11;68632:5;:20;68629:69;;:::-;-1:-1;;68670:28;68693:4;-1:-1;;;;;;68670:12;-1:-1;;;68670:28;:::-;-1:-1;;;;;;;68670:28::-;-1:-1;;;68670:28;:::-;;68662:36;:5;:36;68629:69::-;68716:18;68707:27;:5;:27;68704:91;;:::-;-1:-1;;68752:26;68773:4;-1:-1;;;;;;68752:10;-1:-1;;;68752:26;:::-;-1:-1;;;;;;;68752:26::-;-1:-1;;;68752:26;:::-;;:43;68781:14;-1:-1;;;;;:::-;;;;68752:43;;;;68744:5;:51;68704:91::-;68811:5;68801:23;;68818:5;-1:-1;;;;68801:23;;68854:5;-1:-1;;;68861:15;-1:-1;;;68878:5;-1:-1;;;;68829:55;:::i;-1:-1::-;;67907:977::-;-1:-1;;;2395:18;:::-;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2395:18;-1:-1;2395:18::-;-1:-1;;;2422:18;:::-;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:18;-1:-1;2422:18::-;-1:-1;;;2451:15;:::-;-1:-1;;;;;2451:15;-1:-1;2451:15::-;-1:-1;;;2479:33;:::-;-1:-1;;;;;;:::-;;;;;;;;;;;;;;;;;2479:33;-1:-1;2479:33::-;-1:-1;;;2524:51;:::-;-1:-1;;;;;;:::-;;;;;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2524:51;-1:-1;2524:51::-;-1:-1;;;2589:15;:::-;-1:-1;;;;;2589:15;-1:-1;2589:15::-;-1:-1;;;2613:13;:::-;-1:-1;;;;;2613:13;-1:-1;2613:13::-;-1:-1;;;2639:15;:::-;-1:-1;;;;;2639:15;-1:-1;2639:15::-;-1:-1;;;2667:15;:::-;-1:-1;;;;;2667:15;-1:-1;2667:15::-;-1:-1;;;2693:15;:::-;-1:-1;;;;;2693:15;-1:-1;2693:15::-;-1:-1;;;6999:40;:::-;-1:-1;;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6999:40;-1:-1;6999:40::-;-1:-1;;;7730:35;:::-;-1:-1;;;;;;;:::-;;;;;;;7730:35;-1:-1;7730:35::-;-1:-1;;;7786:12;:::-;-1:-1;;;;;7786:12;-1:-1;7786:12::-;-1:-1;;;7814:15;:::-;-1:-1;;;;;7814:15;-1:-1;7814:15::-;-1:-1;;;7885:15;:::-;-1:-1;;;;;7885:15;-1:-1;7885:15::-;-1:-1;;;7979:15;:::-;-1:-1;;;;;7979:15;-1:-1;7979:15::-;-1:-1;;;8048:15;:::-;-1:-1;;;;;8048:15;-1:-1;8048:15::-;-1:-1;;;8130:15;:::-;-1:-1;;;;;8130:15;-1:-1;8130:15::-;-1:-1;;;8192:15;:::-;-1:-1;;;;;8192:15;-1:-1;8192:15::-;-1:-1;;;8264:15;:::-;-1:-1;;;;;8264:15;-1:-1;8264:15::-;-1:-1;;;8355:15;:::-;-1:-1;;;;;8355:15;-1:-1;8355:15::-;-1:-1;;;8455:15;:::-;-1:-1;;;;;8455:15;-1:-1;8455:15::-;-1:-1;;;8602:15;:::-;-1:-1;;;;;8602:15;-1:-1;8602:15::-;-1:-1;;;8697:15;:::-;-1:-1;;;;;8697:15;-1:-1;8697:15::-;-1:-1;;;9200:33;:::-;-1:-1;;;;;;:::-;;;;;;;;;;;;;;;;;9200:33;-1:-1;9200:33::-;-1:-1;:::-;;;;12739:307::-;12804:236;12824:16;-1:-1;;;;;;;;;;;12872:13;-1:-1;;12872:13;;-1:-1;;;;;12854:44;;;-1:-1;;;;;;;;;;;12930:11;-1:-1;;12930:11;;-1:-1;;;;;12912:42;;;-1:-1;;;;;;;;;12976:8;-1:-1;;;;;;;;;13016:4;-1:-1;;;;;;;;;;;;;12804:236;;-1:-1;;;;;12785:261;;;-1:-1;12778:268;;-1:-1::-;21602:533::-;21872:147;-1:-1;;21892:38;-1:-1;;21892:38;;-1:-1;;;;;;;;;;;;;;;;;;;;;21952:8;21944:26;-1:-1;;;;;;;;;21992:6;21984:24;-1:-1;;;;;;;;;;;;;21872:147;-1:-1;;;;;;;21857:5;-1:-1;;;21839:211;:::-;-1:-1;;;;;;;21839:211::-;-1:-1;;;;;;;:::-;;;:::-;:::-;;:::-;;;;;;;;;;;;;;;;;;;;21817:233;;22074:1;22062:8;22058:13;:17;22055:80;-1:-1;22055:80::-;-1:-1;;22100:8;-1:-1;;;;;;;22085:50::-;-1:-1;;22117:18;-1:-1;;22117:18;;22085:50;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21602:533::-;-1:-1::-;22148:604::-;22439:197;-1:-1;;22459:50;-1:-1;;22459:50;;-1:-1;;;;;;;;;;;;;;;;;;;;;22531:6;22523:24;-1:-1;;;;;;;;;22569:8;22561:26;-1:-1;;;;;;;;;22609:6;22601:24;-1:-1;;;;;;;;;;;;;22439:197;-1:-1;;;;;;;22424:5;-1:-1;;;22406:261;:::-;-1:-1;;;;;;;22406:261::-;-1:-1;;;;;;;:::-;;;:::-;:::-;;:::-;;;;;;;;;;;;;;;;;;;;22384:283;;22691:1;22679:8;22675:13;:17;22672:80;-1:-1;22672:80::-;-1:-1;;22717:8;-1:-1;;;;;;;22702:50::-;-1:-1;;22734:18;-1:-1;;22734:18;;22702:50;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22148:604::-;-1:-1::-;22765:341::-;22951:8;:36;22968:4;-1:-1;;22974:12;-1:-1;;;;;;;;:::-;;;;;;;;;;:::-;;;;;:::-;:::-;;;;;;;:::-;:::-;;;;;22951:36;;22944:43;;:::-;22992:14;23007:6;22992:22;;;;;;;;-1:-1;22992:32;23018:6;-1:-1;;;;;:::-;;;;22992:32;;;;-1:-1;22992:32;;23029:14;23044:8;23029:24;;;;;;;;-1:-1;23029:34;23057:6;-1:-1;;;;;;;:::-;;;;23029:34;;;;-1:-1;23029:34;;23089:8;23068:38;23081:6;23068:38;;23099:6;-1:-1;;;;23068:38;;-1:-1::-;28938:108::-;29015:14;:31;29032:14;-1:-1;;;;;;;:::-;;;;29015:31;;;;-1:-1;29008:38;;-1:-1::-;29398:429::-;29472:15;29490;-1:-1;;;;;:::-;;;;29472:33;;;;29509:28;-1:-1;;;;;;;;;;;;;;:::-;29471:66;;;;29443:94;;29565:23;29546:16;:42;;29543:284;:::-;29826:1;-1:-1;29819:8;;;:::o;29398:429;29543:284::o;:::-;29623:17;29599:41;;;29656:12;:136;29689:16;:47;29724:12;-1:-1;;;;;;;;;;;;;;:::-;29689:47;;;;29755:23;-1:-1;;;29689:89;;;;-1:-1;;;;:::-;;;;29656:136;;;;-1:-1;29649:143;;;:::o;29398:429::-;-1:-1::-;29845:91::-;-1:-1;;29885:19;:::i;:::-;;:51;-1:-1;;29907:29;:::i;:::-;;-1:-1;;;;;:::-;;;;29885:51;;;;-1:-1;29878:58;;-1:-1::-;29948:1000::-;30285:1;30267:19;;30365:16;30342:39;;;30403:1;30389:11;:15;;30386:335;:::-;30715:6;30706:15;:6;:15;30386:335;:::-;:::-;30583:6;:20;30592:11;-1:-1;;;;;;;;;;;;;;:::-;30583:20;;;;-1:-1;;30606:17;:::i;:::-;;-1:-1;;;;;:::-;;;30583:40;;;;30573:6;:50;30386:335::-;30743:1;30733:6;:11;-1:-1;30726:18;:::-;30833:11;:20;30847:6;-1:-1;;;;;;;:::-;;;;30833:20;;;;30814:16;:39;30858:14;30873:2;30858:18;;;;;;;;-1:-1;30858:28;30880:6;-1:-1;;;;;;;:::-;;;;30858:28;;;;-1:-1;30858:28;;30920:1;30891:38;30904:12;30891:38;30922:6;-1:-1;;;;30891:38;;30942:6;-1:-1;;30935:13;;-1:-1::-;33868:360::-;33964:16;:21;33961:47;:::-;34002:6;-1:-1;;33995:13;;;:::o;33961:47::-;34161:6;:34;-1:-1;;34178:17;:::i;:::-;;-1:-1;;;;;;;;;;;;;;:::-;34161:34;;;;34206:16;-1:-1;;;;;:::-;;;34161:61;;;;-1:-1;34144:84;;33868:360::-;-1:-1::-;34247:429::-;-1:-1;;34422:17;:::i;:::-;;34400:39;;;34460:1;34447:10;:14;;34444:232;:::-;34675:1;-1:-1;34668:8;;;:::o;34247:429;34444:232::o;:::-;34576:6;:37;34597:16;-1:-1;;;;;;;;;;;;;;:::-;34576:37;;;;34628:10;-1:-1;;;;;:::-;;;34576:62;;;;-1:-1;34554:95;;;:::o;34247:429::-;-1:-1::-;35719:1129::-;35859:15;35875:8;35859:25;;;;;;;;-1:-1;;35859:35;;;35838:56;;;35919:4;35906:17;:9;:17;-1:-1;35899:24;:::-;36032:1;36014:14;:19;-1:-1;36011:643;:::-;36457:4;:21;36464:14;-1:-1;;;;;;;;;;;;;;:::-;36457:21;;;;36481:14;-1:-1;;;;;:::-;;;36457:38;;;;36509:15;36525:8;36509:25;;;;;;;;-1:-1;;36509:35;;;-1:-1;;;;;;;;;;36328:227;;;;36304:251;;36564:15;36580:8;36564:25;;;;;;;;-1:-1;;36564:35;;;-1:-1;36564:51;36603:12;-1:-1;;;;;:::-;;;;36564:51;;;;-1:-1;36564:51;;36624:14;:30;36642:12;-1:-1;;;;;:::-;;;;36624:30;;;;:14;:30;36011:643::-;36719:15;36735:8;36719:25;;;;;;;;-1:-1;;36719:35;;;-1:-1;36719:43;36758:4;-1:-1;;;;;;;:::-;;;;36719:43;;;;-1:-1;36719:43;;36805:9;:16;36817:4;-1:-1;;;;;:::-;;;;36805:16;;;;36767:15;36783:8;36767:25;;;;;;;;-1:-1;;36767:35;;;:54;36826:14;:22;36844:4;-1:-1;;;;;:::-;;;;36826:22;;;;:14;:22;-1:-1::-;43892:648::-;44193:1;44175:19;;44199:341;;;:::-;-1:-1;;;44286:3;-1:-1;;44265:25;;;;:::-;:20;:25;44245:45;;;44302:8;:24;44299:241;;:::-;44427:1;44418:6;:10;;44413:127;44199:341;44413:127::-;44479:8;44442:45;44463:3;:12;44469:6;-1:-1;;;;;:::-;;;;44463:12;;;;-1:-1;44442:34;;;;:::-;:20;:34;:45;44528:12;44521:3;-1:-1;;44500:25;;;;:::-;:20;:25;:40;44199:341;44299:241::-;:::-;44340:6;:11;44350:1;-1:-1;;;;;;:::-;;;;44340:11;;;;:6;:11;44199:341::-;;;;;;;:::-;;;-1:-1::-;49691:175::-;49735:14;:53;49753:15;49769:8;49753:25;;;;;;;;-1:-1;;49753:35;;;-1:-1;;;;;:::-;;;;49735:53;;;;:14;:53;49831:1;49793:15;49809:8;49793:25;;;;;;;;-1:-1;;49793:35;;;:39;49857:8;49837:29;;-1:-1;49837:29;;-1:-1::-;54666:573::-;54764:14;:19;54761:74;:::-;54800:15;54816:8;54800:25;;;;;;;;-1:-1;;54800:35;;;-1:-1;;54793:42;;;:::o;54761:74::-;54881:15;54897:8;54881:25;;;;;;;;-1:-1;;54881:35;;;:65;-1:-1;;54927:19;:::i;:::-;;-1:-1;;;;;;;;;;;;;;:::-;54881:65;;;;54957:7;-1:-1;;;54881:83;;;;54841:129;;55005:15;55021:8;55005:25;;;;;;;;-1:-1;;55005:35;;;54975:65;;;55049:22;-1:-1;55046:193;:::-;55138:18;55116:40;:18;:40;-1:-1;55111:128;;:::-;55200:18;:39;55221:18;-1:-1;;;;;:::-;;;;55200:39;;;;-1:-1;55193:46;;;:::o;54666:573;55111:128::o;:::-;55173:1;-1:-1;55166:8;;;:::o;54666:573;55046:193::o;:::-;55088:18;-1:-1;;55081:25;;;:::o;54666:573::-;-1:-1::-;55642:1807::-;55740:22;55737:43;;;:::-;55779:1;-1:-1;55772:8;;;:::o;55737:43::-;-1:-1;;55814:19;:::i;:::-;;55785:48;;;55866:14;:34;55883:17;-1:-1;;;;;;;;;;;;;;:::-;55866:34;;;;55903:7;-1:-1;;;55866:44;;;;55838:72;;55943:14;55916:41;;;55992:15;56008:8;55992:25;;;;;;;;-1:-1;;55992:35;;;:55;56030:17;-1:-1;;;;;;;;;;;;;;:::-;55992:55;;;;56050:7;-1:-1;;;55992:65;;;;55962:95;;56092:15;56108:8;56092:25;;;;;;;;-1:-1;;56092:35;;;56062:65;;;56170:15;56186:8;56170:25;;;;;;;;-1:-1;;56170:43;;;56132:81;;;56256:15;56272:8;56256:25;;;;;;;;-1:-1;;56256:43;;;56218:81;;;56358:18;56336:40;:18;:40;-1:-1;56336:78;;:::-;56399:15;56380:34;:15;:34;-1:-1;;56336:78;:::-;:::-;;:::-;56333:99;;:::-;56431:1;-1:-1;56424:8;;;:::o;56333:99::-;56509:18;:39;56530:18;-1:-1;;;;;:::-;;;;56509:39;;;;56488:60;;56613:9;56609:49;56624:15;:33;56642:15;-1:-1;;;;;:::-;;;;56624:33;;;;-1:-1;;;;;;;;;56609:49;;;;56597:9;:61;56786:9;56782:30;56797:14;-1:-1;;;;;;;;;;56782:30;;;;56770:9;:42;57337:26;57325:38;:9;:38;;57322:127;:::-;57411:9;57407:42;57422:26;-1:-1;;;;;;;;;;57407:42;;;;-1:-1;57400:49;;;:::o;55642:1807;57322:127::o;:::-;57380:1;-1:-1;57373:8;;;:::o;55642:1807::-;-1:-1::-;58105:857::-;58229:15;58245:8;58229:25;;;;;;;;-1:-1;;58229:36;;;58198:67;;;58302:15;58320:19;-1:-1;;;;;:::-;;;;58302:37;;;;58270:69;;58372:19;:58;58394:15;58410:8;58394:25;;;;;;;;-1:-1;;58394:36;;;-1:-1;;;;;:::-;;;;58372:58;;;;58344:86;;58563:1;58540:20;:24;;:83;:::-;;;:::-;:::-;58588:1;58569:16;:20;;58540:83;:::-;-1:-1;58540:83;:::-;:::-;-1:-1;;58594:29;-1:-1;;;;58594:18;-1:-1;;;58594:29;:::-;-1:-1;;;;;;;58594:29::-;-1:-1;;;58594:29;:::-;-1:-1;;;;;;:::-;;;58594:29;-1:-1;58540:83::-;58537:425;:::-;58961:1;-1:-1;58954:8;;;:::o;58105:857;58537:425::o;:::-;58824:15;58840:8;58824:25;;;;;;;;-1:-1;;58824:35;;;:70;58874:20;-1:-1;;;;;;;;;;;;;;:::-;58824:70;;;;58909:16;-1:-1;;;;;:::-;;;58824:101;;;;-1:-1;58803:132;;;:::o;58105:857::-;-1:-1::-;59767:2663::-;60077:15;60037;60053:8;60037:25;;;;;;;;-1:-1;;60037:36;;;:55;60034:76;;:::-;60109:1;-1:-1;60102:8;;;:::o;60034:76::-;60175:15;60193;60209:8;60193:25;;;;;;;;-1:-1;;60193:36;;;-1:-1;;;;;:::-;;;;60175:54;;;;60155:74;;60253:1;60241:8;:13;-1:-1;60234:20;:::-;60310:4;:9;60307:111;:::-;60417:1;-1:-1;60410:8;;;:::o;60307:111::-;60475:15;60491:8;60475:25;;;;;;;;-1:-1;;60475:35;;;:74;-1:-1;;60513:36;-1:-1;;;;60513:18;-1:-1;;;60513:36;:::-;-1:-1;;;;;;;60513:36::-;-1:-1;;;60513:36;:::-;;-1:-1;;;;;:::-;;;;60475:74;;;;60565:8;-1:-1;;;;;;;;;;;;;;:::-;60474:99;;;;60589:18;-1:-1;;;;;;;;;;;;;;:::-;60474:133;;;;60628:7;-1:-1;;;60460:175;;;;60646:13;-1:-1;;;60460:199;;;;60424:241;;60887:4;:55;60902:15;60918:8;60902:25;;;;;;;;-1:-1;;;;;;;;;;;;;;:::-;60887:55;;;;60953:7;-1:-1;;;60887:73;;;;60851:115;;61073:4;:26;61080:19;-1:-1;;;;;;;;;;;;;;:::-;61073:26;;;;61102:7;-1:-1;;;61073:36;;;;61046:63;;61385:15;:32;61403:14;-1:-1;;;;;;;:::-;;;;61385:32;;;;61420:14;-1:-1;;;;;;;:::-;;;;61385:49;;;;61364:70;;61499:4;61487:16;:9;:16;;61484:45;;:::-;61525:4;61513:16;:9;:16;61484:45::-;61549:1;61537:9;:13;;61534:798;;:::-;61665:4;-1:-1;;61671:9;-1:-1;;;;;61638:43;:::i;:::-;;61620:61;;;61770:1;61753:14;:18;;61750:327;;:::-;61934:14;:39;61967:6;-1:-1;;;;;;;;;;;;;;:::-;61934:39;;;;61992:9;-1:-1;;;;;:::-;;;61934:67;;;;61887:128;;62043:4;-1:-1;;62049:8;-1:-1;;;62059:17;-1:-1;;;61750:327;62028:49;:::i;61750:327::-;62261:1;62238:14;62253:4;62238:20;;;;;;;:24;;62235:97;61534:798;62235:97::-;62291:4;-1:-1;;62297:12;-1:-1;;;62311:14;62326:4;62311:20;;;;;;;-1:-1;;;61534:798;62276:56;:::i;61534:798::-;62337:72;62351:14;-1:-1;;;62367:15;-1:-1;;;62384:14;-1:-1;;;62400:8;-1:-1;;;;62337:72;;62421:9;-1:-1;;62414:16;;59767:2663::-;-1:-1::-;:::-;;;;","userdoc":{"methods":{"acceptGovernance()":{"notice":"Once a new governance address has been proposed using setGovernance(), this function may be called by the proposed address to accept the responsibility of taking over governance for this contract. This may only be called by the proposed governance address."},"addStrategy(address,uint256,uint256,uint256,uint256)":{"notice":"Add a Strategy to the Vault. This may only be called by governance."},"addStrategyToQueue(address)":{"notice":"Adds `strategy` to `withdrawalQueue`. This may only be called by governance or management."},"apiVersion()":{"notice":"Used to track the deployed version of this contract. In practice you can use this version number to compare with Yearn's GitHub and determine which version of the source matches this deployed contract."},"creditAvailable()":{"notice":"Amount of tokens in Vault a Strategy has access to as a credit line. This will check the Strategy's debt limit, as well as the tokens available in the Vault, and determine the maximum amount of tokens (if any) the Strategy may draw on. In the rare case the Vault is in emergency shutdown this will return 0."},"debtOutstanding()":{"notice":"Determines if `strategy` is past its debt limit and if any tokens should be withdrawn to the Vault."},"deposit()":{"notice":"Deposits `_amount` `token`, issuing shares to `recipient`. If the Vault is in Emergency Shutdown, deposits will not be accepted and this call will fail."},"expectedReturn()":{"notice":"Provide an accurate expected value for the return this `strategy` would provide to the Vault the next time `report()` is called (since the last time it was called)."},"initialize(address,address,address,string,string)":{"notice":"Initializes the Vault, this is called only once, when the contract is deployed. The performance fee is set to 10% of yield, per Strategy. The management fee is set to 2%, per year. The initial deposit limit is set to 0 (deposits disabled); it must be updated after initialization."},"maxAvailableShares()":{"notice":"Determines the maximum quantity of shares this Vault can facilitate a withdrawal for, factoring in assets currently residing in the Vault, as well as those deployed to strategies on the Vault's balance sheet."},"migrateStrategy(address,address)":{"notice":"Migrates a Strategy, including all assets from `oldVersion` to `newVersion`. This may only be called by governance."},"permit(address,address,uint256,uint256,bytes)":{"notice":"Approves spender by owner's signature to expend owner's tokens. See https://eips.ethereum.org/EIPS/eip-2612."},"pricePerShare()":{"notice":"Gives the price for a single Vault share."},"removeStrategyFromQueue(address)":{"notice":"Remove `strategy` from `withdrawalQueue`. This may only be called by governance or management."},"report(uint256,uint256,uint256)":{"notice":"Reports the amount of assets the calling Strategy has free (usually in terms of ROI). The performance fee is determined here, off of the strategy's profits (if any), and sent to governance. The strategist's fee is also determined here (off of profits), to be handled according to the strategist on the next harvest. This may only be called by a Strategy managed by this Vault."},"revokeStrategy()":{"notice":"Revoke a Strategy, setting its debt limit to 0 and preventing any future deposits. This function should only be used in the scenario where the Strategy is being retired but no migration of the positions are possible, or in the extreme scenario that the Strategy needs to be put into \"Emergency Exit\" mode in order for it to exit as quickly as possible. The latter scenario could be for any reason that is considered \"critical\" that the Strategy exits its position as fast as possible, such as a sudden change in market conditions leading to losses, or an imminent failure in an external dependency. This may only be called by governance, the guardian, or the Strategy itself. Note that a Strategy will only revoke itself during emergency shutdown."},"setDepositLimit(uint256)":{"notice":"Changes the maximum amount of tokens that can be deposited in this Vault. Note, this is not how much may be deposited by a single depositor, but the maximum amount that may be deposited across all depositors. This may only be called by governance."},"setEmergencyShutdown(bool)":{"notice":"Activates or deactivates Vault mode where all Strategies go into full withdrawal. During Emergency Shutdown: 1. No Users may deposit into the Vault (but may withdraw as usual.) 2. Governance may not add new Strategies. 3. Each Strategy must pay back their debt as quickly as reasonable to minimally affect their position. 4. Only Governance may undo Emergency Shutdown. See contract level note for further details. This may only be called by governance or the guardian."},"setGovernance(address)":{"notice":"Nominate a new address to use as governance. The change does not go into effect immediately. This function sets a pending change, and the governance address is not updated until the proposed governance address has accepted the responsibility. This may only be called by the current governance address."},"setGuardian(address)":{"notice":"Used to change the address of `guardian`. This may only be called by governance or the existing guardian."},"setLockedProfitDegradation(uint256)":{"notice":"Changes the locked profit degradation."},"setManagement(address)":{"notice":"Changes the management address. Management is able to make some investment decisions adjusting parameters. This may only be called by governance."},"setManagementFee(uint256)":{"notice":"Used to change the value of `managementFee`. This may only be called by governance."},"setName(string)":{"notice":"Used to change the value of `name`. This may only be called by governance."},"setPerformanceFee(uint256)":{"notice":"Used to change the value of `performanceFee`. Should set this value below the maximum strategist performance fee. This may only be called by governance."},"setRewards(address)":{"notice":"Changes the rewards address. Any distributed rewards will cease flowing to the old address and begin flowing to this address once the change is in effect. This will not change any Strategy reports in progress, only new reports made after this change goes into effect. This may only be called by governance."},"setSymbol(string)":{"notice":"Used to change the value of `symbol`. This may only be called by governance."},"setWithdrawalQueue(address[20])":{"notice":"Updates the withdrawalQueue to match the addresses and order specified by `queue`. There can be fewer strategies than the maximum, as well as fewer than the total number of strategies active in the vault. `withdrawalQueue` will be updated in a gas-efficient manner, assuming the input is well- ordered with 0x0 only at the end. This may only be called by governance or management."},"sweep(address)":{"notice":"Removes tokens from this Vault that are not the type of token managed by this Vault. This may be used in case of accidentally sending the wrong kind of token to this Vault. Tokens will be sent to `governance`. This will fail if an attempt is made to sweep the tokens that this Vault manages. This may only be called by governance."},"totalAssets()":{"notice":"Returns the total quantity of all assets under control of this Vault, whether they're loaned out to a Strategy, or currently held in the Vault."},"transfer(address,uint256)":{"notice":"Transfers shares from the caller's address to `receiver`. This function will always return true, unless the user is attempting to transfer shares to this contract's address, or to 0x0."},"transferFrom(address,address,uint256)":{"notice":"Transfers `amount` shares from `sender` to `receiver`. This operation will always return true, unless the user is attempting to transfer shares to this contract's address, or to 0x0. Unless the caller has given this contract unlimited approval, transfering shares will decrement the caller's `allowance` by `amount`."},"updateStrategyDebtRatio(address,uint256)":{"notice":"Change the quantity of assets `strategy` may manage. This may be called by governance or management."},"updateStrategyMaxDebtPerHarvest(address,uint256)":{"notice":"Change the quantity assets per block this Vault may deposit to or withdraw from `strategy`. This may only be called by governance or management."},"updateStrategyMinDebtPerHarvest(address,uint256)":{"notice":"Change the quantity assets per block this Vault may deposit to or withdraw from `strategy`. This may only be called by governance or management."},"updateStrategyPerformanceFee(address,uint256)":{"notice":"Change the fee the strategist will receive based on this Vault's performance. This may only be called by governance."},"withdraw()":{"notice":"Withdraws the calling account's tokens from this Vault, redeeming amount `_shares` for an appropriate amount of tokens. See note on `setWithdrawalQueue` for further details of withdrawal ordering and behavior."}},"notice":"Yearn Token Vault. Holds an underlying token, and allows users to interact with the Yearn ecosystem through Strategies connected to the Vault. Vaults are not limited to a single Strategy, they can have as many Strategies as can be designed (however the withdrawal queue is capped at 20.) Deposited funds are moved into the most impactful strategy that has not already reached its limit for assets under management, regardless of which Strategy a user's funds end up in, they receive their portion of yields generated across all Strategies. When a user withdraws, if there are no funds sitting undeployed in the Vault, the Vault withdraws funds from Strategies in the order of least impact. (Funds are taken from the Strategy that will disturb everyone's gains the least, then the next least, etc.) In order to achieve this, the withdrawal queue's order must be properly set and managed by the community (through governance). Vault Strategies are parameterized to pursue the highest risk-adjusted yield. There is an \"Emergency Shutdown\" mode. When the Vault is put into emergency shutdown, assets will be recalled from the Strategies as quickly as is practical (given on-chain conditions), minimizing loss. Deposits are halted, new Strategies may not be added, and each Strategy exits with the minimum possible damage to position, while opening up deposits to be withdrawn by users. There are no restrictions on withdrawals above what is expected under Normal Operation. For further details, please refer to the specification: https://github.com/iearn-finance/yearn-vaults/blob/main/SPECIFICATION.md"}}},"manifest":"ethpm/3","sources":{"BondManager.vy":{"checksum":{"algorithm":"md5","hash":"0x1e41d8b068f013723bebb6cc0b401c02"},"content":"# @version ^0.3.7\n\n\n# https://github.com/liquity/ChickenBond\n\n\n# Main Contracts\n\nenum BOND_STATUS:\n    NULL\n    ACTIVE\n    CHIKKIN_OUT\n    CHIKKIN_IN\n\nCHICKEN_IN_AMM_FEE: immutable(uint256)\npending_reserves: public(uint256)        # Total pending LUSD. It will always be in SP (B.Protocol)\npermanent_reserves: public(uint256)      # Total permanent LUSD\nbamm_token_debt: public(uint256)       # Amount \u201cowed\u201d by B.Protocol to ChickenBonds, equals deposits - withdrawals + rewards\n# yTokensHeldByCBM: uint256   # Computed balance of Y-tokens of LUSD-3CRV vault owned by this contract\n                            # (to prevent certain attacks where attacker increases the balance and thus the backing ratio)\n\n# Karen ass bitch managing the dope Debt Dominatrix Bondage Babe's\n#                 ,-`'-.\n#                /    , \\\n#               (   ((_)))\n#               )  /  a a\n#              /  C     >\n#             (    \\   =(\n#            /      )  ( )\n#           (   .--'.   ;-.\n#           )  '     `''   `\n#          /   |  , .--\\|-(|\n#         (    |  |'       `\n#          `(  |  |     )   )\n#            `.|  |       .'\n#              |  |       ||\n#              (  ()      ||\n#               \\  \\      \\|\n#                \\  \\      `\n#               /  \\ \\      \\\n#              '    \\ \\      `\n#             /      | )>     \\\n#            '       /\\/\\      `\n#           /       (_.,_)      \\\n#          '       /      \\      `\n#         (       (        )      )\n#          `-=.__  `--==--' __.=-'\n# gpyy           |`-.__.._.'\n#  &             |     |   |\n# jnj            `     |   |\n#  &              \\    /   )\n# VK               :   )  /\n#                 /   '   |\n#                |    |   |\n#                `    |   |\n#                 \\   |\\  |\n#                  \\  |)_ (\n#                  )  (_ \\ \\\n#                 / \\  \\\\ \\_\\_\n#                 l\\ \\__\\`____>\n#                   \\____>\n\n\n@external\ndef __init__(\n    _owner: address\n):\n    \"\"\"\n    @param _owner - Debt DAO Pool Delegate for bond base yield source that will manage this contract\n    \"\"\"\n    CHICKEN_IN_AMM_FEE = 0\n\n# Chicken Bond Factory\n# takes pool and computs chicken bond addresss + curve pool for ddp + bddp tokens\n# I think main issue btw us and normal chicken bond is all our yield is internalized inside of the base token itself. \\\n# This might make it difficuly/impossible to have the reserve vs permanent pool. Or we will have to extra accounting logic around 4626 pool shares\n\n# importnat functions \n# _calcUpdatedAccrualParameter\n\n# does a lot of farming management but we dont need to do that because all the farming is inherintly inside the pool 4626. \n# https://github.com/liquity/ChickenBond/blob/main/LUSDChickenBonds/src/ChickenBondManager.sol\n\n# Mainly just an NFT contract. Has a bunch of randomg farmingstuff (crv guages,pickle jars, LQTY farms)\n# for this random `setFinalExtraData()`` function\n# controlled by manager contract\n# https://github.com/liquity/ChickenBond/blob/main/LUSDChickenBonds/src/BondNFT.sol\n\n#important functions\n# setFinalExtraData\n# getHalfDna\n\n# simple ERC20 that can only be mint/burned by Manager contract\n# https://github.com/liquity/ChickenBond/blob/main/LUSDChickenBonds/src/BLUSDToken.sol\n\n\n# TODO should add the ability for owner to add yearn strategy. \n","imports":[],"references":[],"urls":[]},"BondNFT.vy":{"checksum":{"algorithm":"md5","hash":"0xb02b00a09599ee62db004e393ddcd9c7"},"content":"# @version ^0.3.7\n\n# TODO make sure u check all logic in contracts inherited by OG BindNFT.sol\n# TODO implement ERC721Enumberable. Look at snekmate\n\n\n# \"\"\"\n# @title \tDebt Dominatrix Bondage Contract\n# @author Kiba Gateaux\n# @notice \t\n# @dev \t\n#                                   *\n#                                 /\"^\"\\\n#                                \"\"==\"7|             *\n#                              .\"  .' :            /\"^^\\\n#                             :   *   :           (\"   \")\n#                            .'  .'   `.         (\"    \")\n#                            '`\"\"    `\",`--_.._--\"\"   \")\n\n\n# # uncomment lines for cat vs bunny girl\n\n\n#                          ___ .~- ` `' \"' ` -~. ____\n#                          :~+.-`  .-\"-.  .-\"~._  `-.+~:\n#                          !  /  -`     `       `'--~:.l\n#                          :'=:      ^       ^     :='.:\n#                         $$SS$$                   SS$$P\"        \n#                         :$S$$;  .=/==.   .==\\=.  :SS$$          \n#                         /SSSS$$                  $S$S$;         \n#                       -':$$$$$$; .mPm.     .mPm. :$S$$S$-'       \n#                         $$$$$$$$                 $$S$$S$;        \n#                        :$$S$$$$;       d:       :$SS$$S$$        \n#                        $$$S$$$$$\\      \"\"       $$S$$$S$$.       \n#                        $$$S$$$$N \\  ._..._.    d$S$$$$S$$$$p._.  \n#                        $$SS$$$MMm.j         .d$S$$$$S;\"\"^^\"\"    \n#                        :SS$$$$MMMMMb.     .d$$S$$$$SS$          \n#                      '-'S$$$$MMMMMMMMMmmmMMSSS$$$$SS$;          \n#                         :$mMOMMMMMMMMMMMMMMS$$$S$SS$$'-'        \n#                  __..mmMMMMMMOOMMMMMMMMMMMOSSSS$SS$$;           \n#              .mMMMMMMMMMMMMMMMMOOOMMMMMMOOMMS$SSS$$P            \n#            .dMMMMMMMMMMMMMMMMMMMMMOOOOOOMMMMMMMSSSP             \n#           dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMm.          \n#          dMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMb         \n#         :MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM;        \n#         MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM        \n#        :MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM;        \n#        MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM         \n#       :MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM;         \n#       MMMMMMMMMMOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMOM;          \n#      :MMMMMMMMMMOMMOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO;          \n#      MMMMMMMMMMOMMMMOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMb          \n#     :MMMMMMMMMMOMMMMOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM;         \n#     MMMMMMMMMMMMMMMMOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM         \n#     M^\"MMMMMMM;:MMMMOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM;         \n#    :     \"\"^^:  MMMMMOMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMP          \n#    |         ;  :MMMMMOOMMMMMMMMMMMMMMMMMMMMMMMMMMMP'           \n#    ;        :    MMMMMMMOBUGMMMMMMMMMMMMMMMMMMMMMM'             \n#   :         ;    :MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM              \n#   :        :      TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM;              \n#   |        ;       TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM              \n#   |       :         TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMb             \n#   ;       ;          TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMb            \n#   :       :           TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMb           \n#    ;       `.          TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMb          \n#    :         \\          TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMb.        \n#     \\         \\          TMMMMMMMMMMMMMMMMMMMMMMMMMMMMMb`.      \n#      \\         \\         ;MMMMMMMMMMMMMMMMMMMMMMMMMMMMM8b \\     \n#       \\         ;        ;MMMMMMMMMMMMMMMMMMMMMMMMMMMM888; ;    \n#        \\        :        8MMMMMMMMMMMMMMMMMMMMM88888888888.^.   \n#         \\        \\       88MMMMMMMMM8888888888888888888Pd8b  \\  \n#          `.       \\  bug T8888888888888888888888888888Pd888b._; \n#            `.      \\   __J88888888888888888888888888888888888; ;\n#              `.     `-' _,`T8888888888888888888888888888888888/ \n#                `.      .gb.88888888888888888888888888888888Pd8  \n#                  `.   d88888bT888888888888888888888888888P8d88  \n#                    `.d8888888888888888888888888888888888888888  \n#                     :88888888888888888888888888888888888888888  \n#                      T888888888888888888888888888888888888888;  \n#                       \"^8888Pd8888888888888888888888888888888  \n# \"\"\"\n\nenum BOND_STATUS:\n    NULL\n    ACTIVE\n    CHIKKIN_OUT\n    CHIKKIN_IN\n\ninterface IBondManager:\n    def get_bond_data(_tokenID: uint256) -> (uint256, uint64, uint64, uint64, BOND_STATUS): nonpayable\n\ninterface IBondNFT:\n    def mint(_bonder: address, _permanentSeed: uint256) -> (uint256, uint80): nonpayable\n    def set_final_extra_data(_bonder: address, _tokenID: uint256, _permanentSeed: uint256) -> uint80: nonpayable\n    def bond_manager() -> address: nonpayable\n    def get_bond_amount(_tokenID: uint256) -> uint256: nonpayable\n    def get_bond_start_time(_tokenID: uint256) -> uint256: nonpayable\n    def get_bond_end_time(_tokenID: uint256) -> uint256: nonpayable\n    def get_bond_initial_half_dna(_tokenID: uint256) -> uint80: nonpayable\n    def get_bond_initial_dna(_tokenID: uint256) -> uint256: nonpayable\n    def get_bond_final_half_dna(_tokenID: uint256) -> uint80: nonpayable\n    def get_bond_final_dna(_tokenID: uint256) -> uint256: nonpayable\n    def get_bond_status(_tokenID: uint256) -> uint8: nonpayable\n    def get_bond_extra_data(_tokenID: uint256) -> (uint80, uint80, uint32, uint32, uint32): nonpayable\n    # OG chicken bon solidity interface for backwards compatability\n    def setFinalExtraData(_bonder: address, _tokenID: uint256, _permanentSeed: uint256) -> uint80: nonpayable\n    def chickenBondManager() -> address: nonpayable\n    def getBondAmount(_tokenID: uint256) -> uint256: nonpayable\n    def getBondStartTime(_tokenID: uint256) -> uint256: nonpayable\n    def getBondEndTime(_tokenID: uint256) -> uint256: nonpayable\n    def getBondInitialHalfDna(_tokenID: uint256) -> uint80: nonpayable\n    def getBondInitialDna(_tokenID: uint256) -> uint256: nonpayable\n    def getBondFinalHalfDna(_tokenID: uint256) -> uint80: nonpayable\n    def getBondFinalDna(_tokenID: uint256) -> uint256: nonpayable\n    def getBondStatus(_tokenID: uint256) -> uint8: nonpayable\n    def getBondExtraData(_tokenID: uint256) -> (uint80, uint80, uint32, uint32, uint32): nonpayable\n\nevent Transfer:\n    _from: indexed(address)\n    _to: indexed(address)\n    _tokenID: indexed(uint256)\n\nstruct BondData:\n    initial_half_dna: uint80 \n    final_half_dna: uint80 \n    trove_size: uint32          # Debt in ddp token\n    # DONT NEED lqtyAmount: uint32         # Holding LQTY, staking or deposited into Pickle\n    # DONT KNOW YET curveGaugeSlopes: uint32   # For 3CRV and Frax pools combined\n\n# from vyper.interfaces import ERC721 as IERC721\n# implements: IBondNFT\n# implements: IERC721\n\n# ERC721_RECEIVER: constant(bytes4) = method_id(\"onERC721Received(address,address,uint256,bytes)\")\nERC721_RECEIVER: constant(bytes4) = 0x150b7a02\n\n# IERC721 vars\ntotal_supply: public(uint256)\nowners: HashMap[uint256, address]\napprovals: HashMap[uint256, address] # singular approved spender for token\noperators: HashMap[address, HashMap[address, bool]] # opproved operators for an owner\n# IERC721Enumerable\nbalances: HashMap[address, uint256]\n\n# Chikkin Bond vars\ntransfer_lockout_period_seconds: immutable(uint256)\nbond_manager: immutable(address)\nbond_data: HashMap[uint256, BondData]\n\n@external\ndef __init__(\n        _name: String[30],\n        _symbol: String[18],\n        _troveManagerAddress: address,\n        # _initialArtworkAddress: address ,\n        _transfer_lockout_epoch_seconds: uint256,\n        _bond_manager: address\n):\n    bond_manager = _bond_manager\n    transfer_lockout_period_seconds = _transfer_lockout_epoch_seconds\n    assert True\n\n@external\ndef mint(_bonder: address, _permanentSeed: uint256) -> (uint256, uint80):\n    assert msg.sender == bond_manager\n\n    # We actually inc total_supply in `_mint`\n    tokenID: uint256 = self.total_supply + 1\n    # //Record first half of DNA\n    initial_half_dna: uint80 = self.get_half_dna(tokenID, _permanentSeed)\n    self.bond_data[tokenID] = BondData({\n        initial_half_dna: initial_half_dna,\n        final_half_dna: 0,\n        trove_size: 0,\n    })\n\n    self._mint(_bonder, tokenID)\n\n    return (tokenID, initial_half_dna)\n\n### Normie NFT Shit\n@external \ndef transfer(_to: address, _tokenID: uint256):\n    self._transfer(msg.sender, _to, _tokenID)\n\n@external \ndef transferFrom(_from: address, _to: address, _tokenID: uint256):\n    self._transfer(_from, _to, _tokenID)\n\n\n### internal Chikkin Bond logic\n\n@view\n@internal\ndef get_half_dna(_tokenID: uint256, _permanentSeed: uint256) -> uint80:\n    return convert(convert(keccak256(_abi_encode(_tokenID, block.timestamp, _permanentSeed)), uint256), uint80)\n\n@external\ndef set_final_extra_data(_bonder: address, _tokenID: uint256, _permanentSeed: uint256) -> uint80:\n    assert msg.sender == bond_manager\n\n    # // let\u2019s build the struct first in memory\n    bond_data: BondData = self.bond_data[_tokenID]\n\n    new_dna: uint80  = self.get_half_dna(_tokenID, _permanentSeed)\n    bond_data.final_half_dna = new_dna\n\n    # // Liquity Data\n    # // Trove\n    # bond_data.troveSize = convert(troveManager.getTroveDebt(_bonder), uint32)\n    # // LQTY\n    # uint256 pickleLQTYAmount\n    # if (pickleLQTYJar.total_supply() > 0) {\n    #     pickleLQTYAmount = (pickleLQTYJar.balanceOf(_bonder) + pickleLQTYFarm.balanceOf(_bonder)) * pickleLQTYJar.getRatio()\n    # }\n    # bond_data.lqtyAmount = _uint256ToUint32(\n    #     lqtyToken.balanceOf(_bonder) + lqtyStaking.stakes(_bonder) + pickleLQTYAmount\n    # )\n    # // Curve Gauge votes\n    # (uint256 curveLUSD3CRVGaugeSlope,,) = curveGaugeController.vote_user_slopes(_bonder, curveLUSD3CRVGauge)\n    # (uint256 curveLUSDFRAXGaugeSlope,,) = curveGaugeController.vote_user_slopes(_bonder, curveLUSDFRAXGauge)\n    # bond_data.curveGaugeSlopes = _uint256ToUint32((curveLUSD3CRVGaugeSlope + curveLUSDFRAXGaugeSlope) * CURVE_GAUGE_SLOPES_PRECISION)\n\n    # // finally copy from memory to storage\n    # self.bond_data[_tokenID] = bond_data\n\n    return new_dna\n\n### IERC721\n\n@internal\ndef _mint(_to: address,_tokenID: uint256):\n    assert _to != empty(address) # dev: \"ERC721: mint _to the zero address\"\n    assert not self._is_existant(_tokenID) # dev: \"ERC721: token already minted\"\n\n    self.total_supply += 1\n    self._transfer(empty(address), _to, _tokenID)\n    # _addTokenToAllTokensEnumeration(_tokenId)\n\n@internal\ndef _burn(_tokenID: uint256):\n    # OZ ERC721\n    # https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.0/contracts/token/ERC721/ERC721.sol\n    owner: address = self._owner_of(_tokenID)\n\n    self.total_supply -= 1\n    self._transfer(owner, empty(address), _tokenID)\n    # _removeTokenFromAllTokensEnumeration(_tokenId)\n\n@internal\ndef _transfer(_from: address, _to: address, _tokenID: uint256, _batch_size: uint256 = 1):\n    self._is_approved_or_owner(_from, _tokenID)\n    #clear approvals from previous owner\n    self.approvals[_tokenID] = empty(address)\n\n    # OZ ERC721\n    # https://github.com/OpenZeppelin/openzeppelin-contracts/blob/49c0e4370d0cc50ea6090709e3835a3091e33ee2/contracts/token/ERC721/ERC721.sol#L467-L482\n    if _batch_size != 0:\n        if _from != empty(address):\n            self.balances[_from] -= _batch_size\n            # _removeTokenFromOwnerEnumeration(_from, _tokenId)\n        if _to != empty(address):\n            self._assert_can_accept_erc721(_to, _tokenID)\n                # transfer token post approval checks\n            self.balances[_to] += _batch_size\n            # _addTokenToOwnerEnumeration(_to, _tokenId)\n\n    self.owners[_tokenID] = _to\n\n    # BondNFT._beforeTokenTransfer\n    # https://github.com/liquity/ChickenBond/blob/89c10d777bb1fabdce6ec54dbf67265984c9724f/LUSDChickenBonds/src/BondNFT.sol#L158-L170\n    if _from != empty(address) :\n        _: uint256 = empty(uint256)\n        __: uint64 = empty(uint64)\n        ___: uint64 = empty(uint64)\n        endTime: uint64 = empty(uint64)\n        status: BOND_STATUS = empty(BOND_STATUS)\n        (_, __, ___, endTime, status) = IBondManager(bond_manager).get_bond_data(_tokenID)\n\n        assert status == BOND_STATUS.ACTIVE or block.timestamp >= convert(endTime, uint256) + transfer_lockout_period_seconds\n            # \"BondNFT: cannot transfer during lockout period\"\n\n        # super._beforeTokenTransfer(_from, _to, _tokenID)\n\n@internal\ndef _assert_can_accept_erc721(_to: address, _tokenID: uint256):\n    \"\"\"\n    @notice     Stolen from OZ ERC721 https://github.com/OpenZeppelin/openzeppelin-contracts/blob/49c0e4370d0cc50ea6090709e3835a3091e33ee2/contracts/token/ERC721/ERC721.sol#L429-L451\n    \"\"\"\n    if _to.is_contract:\n        response: Bytes[32] = raw_call(\n            _to,\n            method_id(\"onERC721Received(address,address,uint256,bytes)\"),\n            max_outsize=32,\n            revert_on_failure=True ,\n        )\n\n        assert ERC721_RECEIVER == _abi_decode(response, bytes4)\n\n@view\n@internal\ndef _is_approved_or_owner(_caller: address, _tokenID: uint256) -> bool:\n    return self.owners[_tokenID] == _caller or self.approvals[_tokenID] == _caller\n\n@view\n@internal\ndef _owner_of(_tokenID: uint256) -> address:\n    return self.owners[_tokenID]\n\n@view\n@internal\ndef _is_existant(_tokenID: uint256) -> bool:\n    return empty(address) != self.owners[_tokenID]\n\n\n","imports":[],"references":[],"urls":[]},"BondToken.vy":{"checksum":{"algorithm":"md5","hash":"0x0e8e9dc2bba1b5a0cdaed5ab0dc1a47f"},"content":"# @version 0.3.7\n# \"\"\"\n# @notice Simple ERC20 for tracking Chicken Bond tokens. Only controllable by chicken bond manager\n# \"\"\"\n\nevent Transfer:\n    _from: indexed(address)\n    _to: indexed(address)\n    _value: uint256\n\nevent Approval:\n    _owner: indexed(address)\n    _spender: indexed(address)\n    _value: uint256\n\nname: immutable(String[64])\nsymbol: immutable(String[32])\ndecimals: immutable(uint256)\nbalanceOf: public(HashMap[address, uint256])\nallowances: HashMap[address, HashMap[address, uint256]]\ntotal_supply: uint256\n\nmanager: immutable(address)\n\n@external\ndef __init__(_name: String[64], _symbol: String[32], _decimals: uint256, manager_: address):\n    manager = manager_\n    name = _name\n    symbol = _symbol\n    decimals = _decimals\n\n\n@external\n@view\ndef totalSupply() -> uint256:\n    return self.total_supply\n\n\n@external\n@view\ndef allowance(_owner : address, _spender : address) -> uint256:\n    return self.allowances[_owner][_spender]\n\n\n@internal\ndef _transfer(_from: address, _to : address, _value : uint256) -> bool:\n    self.balanceOf[_from] -= _value\n    self.balanceOf[_to] += _value\n    log Transfer(_from, _to, _value)\n    return True\n\n@external\ndef transfer(_to : address, _value : uint256) -> bool:\n    return self._transfer(msg.sender, _to, _value)\n\n\n@external\ndef transferFrom(_from : address, _to : address, _value : uint256) -> bool:\n    allowance: uint256 = self.allowances[_from][_to]\n    # MAX = unlimited approval (saves an SSTORE)\n    if (allowance < max_value(uint256)):\n        allowance = allowance - _value\n        self.allowances[_from][_to] = allowance\n        # NOTE: Allows log filters to have a full accounting of allowance changes\n        log Approval(_from, _to, allowance)\n\n    return self._transfer(_from, _to, _value)\n\n@external\ndef approve(_spender : address, _value : uint256) -> bool:\n    self.allowances[msg.sender][_spender] = _value\n    log Approval(msg.sender, _spender, _value)\n    return True\n\n\n@external\ndef mint(_target: address, _value: uint256) -> bool:\n    assert msg.sender == manager\n    return self._transfer(empty(address), _target, _value)\n\n@external\ndef burn(_target: address, _value: uint256) -> bool:\n    assert msg.sender == manager\n    return self._transfer(_target, empty(address), _value)","imports":[],"references":[],"urls":[]},"PoolDelegate.vy":{"checksum":{"algorithm":"md5","hash":"0x33c70bceeb9218ed78e78990da61688c"},"content":"# @version ^0.3.7\n\n# \"\"\"\n# @title \tDebt DAO Lending Pool\n# @author Kiba Gateaux\n# @desc \tTokenized, liquid 4626 pool allowing depositors to collectively lend to Debt DAO Line of Credit contracts\n# @dev \tAll investment decisions and pool paramters are controlled by the pool owner aka \"Delegate\"\n# \"\"\"\n\n# interfaces defined at bottom of file\nimplements: IERC20\nimplements: IERC2612\nimplements: IERC3156\nimplements: IERC4626\nimplements: IERC4626R\nimplements: IPoolDelegate\n\n# this contracts interface for reference\ninterface IPoolDelegate:\n\t# getters\n\tdef APR() -> int256: view\n\tdef price() -> uint256: view\n\n\t# investments\n\tdef unlock_profits() -> uint256: nonpayable\n\tdef collect_interest(line: address, id: bytes32) -> uint256: nonpayable\n\tdef increase_credit( line: address, id: bytes32, amount: uint256) -> bool: nonpayable\n\tdef set_rates( line: address, id: bytes32, drate: uint128, frate: uint128) -> bool: nonpayable\n\tdef add_credit( line: address, drate: uint128, frate: uint128, amount: uint256) -> bytes32: nonpayable\n\n\t# divestment and loss\n\tdef impair(line: address, id: bytes32) -> (uint256, uint256): nonpayable\n\tdef reduce_credit(line: address, id: bytes32, amount: uint256) -> (uint256, uint256): nonpayable\n\tdef use_and_repay(line: address, repay: uint256, withdraw: uint256) -> (uint256, uint256): nonpayable\n\t\n\t# external 4626 interactions\n\tdef divest_4626(vault: address, amount: uint256) -> bool: nonpayable\n\tdef invest_4626(vault: address, amount: uint256) -> uint256: nonpayable\n\n\t# Pool Admin\n\tdef accept_owner() -> bool: nonpayable\n\tdef update_owner(new_owner_: address) -> bool: nonpayable\n\tdef update_max_assets(new_max: uint256) -> bool: nonpayable\n\tdef update_min_deposit(new_min: uint256) -> bool: nonpayable\n\tdef update_profit_degredation(degradation: uint256): nonpayable\n\n\t# fees\n\tdef update_fee_recipient(newRecipient: address) -> bool: nonpayable\n\tdef accept_fee_recipient(newRecipient: address) -> bool: nonpayable\n\tdef update_performance_fee(fee: uint16) -> bool: nonpayable\n\tdef update_collector_fee(fee: uint16) -> bool: nonpayable\n\tdef update_withdraw_fee(fee: uint16) -> bool: nonpayable\n\tdef update_deposit_fee(fee: uint16) -> bool: nonpayable\n\tdef update_flash_fee(fee: uint16) -> bool: nonpayable\n\tdef claim_fees(amount: uint256) -> bool: nonpayable\n\n\n### Constants\n\n# @notice LineLib.STATUS.INSOLVENT\nINSOLVENT_STATUS: constant(uint256) = 4\n# @notice 8 decimals. padding when calculating for better accuracy\nPRICE_DECIMALS: constant(uint256) = 10**8\n# @notice 100% in bps. Used to divide after multiplying bps fees. Also max performance fee.\nFEE_COEFFICIENT: constant(uint16) = 10000\n# @notice 30% in bps. snitch gets 1/3  of owners fees when liquidated to repay impairment.\n# IF owner fees exist when snitched on. Pool depositors are *guaranteed* to see a price increase, hence heavy incentive to snitches.\nSNITCH_FEE: constant(uint16) = 3000\n# @notice 5% in bps. Max fee that can be charged for non-performance fee\nMAX_PITTANCE_FEE: constant(uint16) = 200\n# @notice EIP712 contract name\nCONTRACT_NAME: constant(String[13]) = \"Debt DAO Pool\"\n# @notice EIP712 contract version\nAPI_VERSION: constant(String[7]) = \"0.0.001\"\n# @notice EIP712 type hash\nDOMAIN_TYPE_HASH: constant(bytes32) = keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)')\n# @notice EIP712 permit type hash\nPERMIT_TYPE_HASH: constant(bytes32) = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")\n# TODO rename DEGRADATION_COEFFICIENT\n# rate per block of profit degradation. DEGRADATION_COEFFICIENT is 100% per block\nDEGRADATION_COEFFICIENT: constant(uint256) = 10 ** 18\n\n# IERC20 vars\nname: public(immutable(String[50]))\nsymbol: public(immutable(String[18]))\ndecimals: public(immutable(uint8))\n# total amount of shares in pool\ntotal_supply: public(uint256)\n# balance of pool vault shares\nbalances: HashMap[address, uint256]\n# owner -> spender -> amount approved\nallowances: HashMap[address, HashMap[address, uint256]]\n\n# IERC4626 vars\n# underlying token for pool/vault\nasset: public(immutable(address))\n# total notional amount of underlying token owned by pool (may not be currently held in pool)\ntotal_assets: public(uint256)\n\n# share price logic stolen from yearn vyper vaults\n# vars - https://github.com/yearn/yearn-vaults/blob/74364b2c33bd0ee009ece975c157f065b592eeaf/contracts/Vault.vy#L239-L242\nlast_report: public(uint256) \t# block.timestamp of last report\nlocked_profit: public(uint256) \t# how much profit is locked and cant be withdrawn\nlocked_profit_degradation: public(uint256) # The rate of degradation in percent per second scaled to 1e18.  DEGRADATION_COEFFICIENT is 100% per block\n\n# IERC2612 Variables\nnonces: public(HashMap[address, uint256])\n# cheap retrieval of domain separator if no chainforks\nCACHED_CHAIN_ID: public(immutable(uint256))\nCACHED_COMAIN_SEPARATOR: public(immutable(bytes32))\n\n\n# Pool Delegate Variables\n\n# asset manager who directs funds into investment strategies\nowner: public(address)\n# address to migrate delegate powers to. Must be accepted before transfer occurs\npending_owner: public(address)\n# address that can claim pool delegates fees\nfee_recipient: public(address)\n# address to migrate revenuestream to. Must be accepted before transfer occurs\npending_fee_recipient: public(address)\n# minimum amount of assets that can be deposited at once. whales only, fuck plebs.\nmin_deposit: public(uint256)\n# maximum amount of asset deposits to allow into pool\nmax_assets: public(uint256)\n# amount of asset held externally in lines or vaults\ntotal_deployed: public(uint256)\n# shares earned by Delegate for managing pool\naccrued_fees: public(uint256)\n\nstruct Fees:\n\t# Fee types #0-2 go to pool owner\n\n\t# % (in bps) of profit that delegate keeps to align incentives\n\tperformance: uint16\n\t# % fee (in bps) to charge pool depositors and give to delegate\n\tdeposit: uint16\n\t# % fee (in bps) on share redemption for underlying assets\n\twithdraw: uint16\n\n\t# Fee type #3 go to pool shares directly\n\n\t# % fee (in bps) to charge flash borrowers\n\tflash: uint16\n\t\n\t# Fee types #4-5 go to ecosystem service providers\n\n\t# % (in bps) of performance fee to give to caller for automated collections\n\tcollector: uint16\n\t# % fee (in bps) to charge pool depositors and give to referrers\n\treferral: uint16\n\nenum FEE_TYPES:\n\t# should be same order as Fees struct\n\tPERFORMANCE\n\tDEPOSIT\n\tWITHDRAW\n\tFLASH\n\tCOLLECTOR\n\tREFERRAL\n\tSNITCH\n\nfees: public(Fees)\n\n\n@external\ndef __init__(\n  \t_delegate: address,\n\t_asset: address,\n\t_name: String[34],\n\t_symbol: String[15],\n\t_fees: Fees,\n):\n\t\"\"\"\n\t@dev configure data for contract owners and initial revenue contracts.\n\t\tOwner/operator/treasury can all be the same address\n\t@param _delegate\twho will own and control the pool\n\t@param _asset \t\tERC20 token to deposit and lend. Must verify asset is supported by oracle on Lines you want to invest in.\n\t@param _name \t\tcustom pool name. first 0-13 chars are templated  \"Debt DAO Pool - {_name}\"\n\t@param _symbol \t\tcustom pool symbol. first 5 chars are templated  \"dd{token.symbol}-{_symbol}\"\n\t@param _fees \t\tfees to charge on pool\n\t\"\"\"\n\tself.owner = msg.sender # set owner to deployer for validation functions\n\tassert _delegate != empty(address)\n\tassert self._assert_max_fee(_fees.performance, FEE_TYPES.PERFORMANCE) # max 100% performance fee\n\tassert self._assert_pittance_fee(_fees.collector, FEE_TYPES.COLLECTOR)\n\tassert self._assert_pittance_fee(_fees.flash, FEE_TYPES.FLASH)\n\tassert self._assert_pittance_fee(_fees.referral, FEE_TYPES.REFERRAL)\n\tassert self._assert_pittance_fee(_fees.deposit, FEE_TYPES.DEPOSIT)\n\tassert self._assert_pittance_fee(_fees.withdraw, FEE_TYPES.WITHDRAW)\n\n\t# Setup Pool variables\n\tself.owner = _delegate\n\tself.fees = _fees\n\n\t# IERC20 vars\n\tname = self._get_pool_name(_name)\n\tsymbol = self._get_pool_symbol(_symbol)\n\n\t# 4626 recommendation is to mimic decimals of underlying assets so less likely to be conversion errors\n\t# TODO what happens if asset_ hs no decimals? revert if decimals fails\n\tdecimals = IERC20Detailed(_asset).decimals()\n\t# IERC4626\n\tasset = _asset\n\n\t# NOTE: Yearn - set profit to bedistributed every 6 hours\n\t# self.locked_profit_degradation = convert(DEGRADATION_COEFFICIENT * 46 / 10 ** 6 , uint256)\n\n\t# NOTE: Debt DAO - set profit to bedistributed every 7 days\n\t# 604_800 sec. in 7 days. 50_400 blocks at 12 seconds / block\n\tself.locked_profit_degradation = convert(DEGRADATION_COEFFICIENT * 46 / 10 ** 6 , uint256)\n\n\t#ERC2612\n\tCACHED_CHAIN_ID = chain.id # cache before compute\n\tCACHED_COMAIN_SEPARATOR = self.domain_separator()\n\n\n### Investing functions\n\n@internal\ndef _assert_delegate_has_available_funds(amount: uint256):\n\tassert msg.sender == self.owner\n\tassert self.total_assets - self.total_deployed >= amount\n\n@external\n@nonreentrant(\"lock\")\ndef add_credit(line: address, drate: uint128, frate: uint128, amount: uint256) -> bytes32:\n\tself._assert_delegate_has_available_funds(amount)\n\t\n\tself.total_deployed += amount\n\t\n\t# no need to log, Line emits events already\n\treturn ISecuredLine(line).addCredit(drate, frate, amount, asset, self)\n\n@external\n@nonreentrant(\"lock\")\ndef increase_credit(line: address, id: bytes32, amount: uint256) -> bool:\n\tself._assert_delegate_has_available_funds(amount)\n\n\tself.total_deployed += amount\n\t\n\t# no need to log, Line emits events already\n\treturn ISecuredLine(line).increaseCredit(id, amount)\n\n@external\ndef set_rates(line: address, id: bytes32, drate: uint128, frate: uint128) -> bool:\n\tassert msg.sender == self.owner\n\t# no need to log, Line emits events already\n\treturn ISecuredLine(line).setRates(id, drate, frate)\n\n@external\n@nonreentrant(\"lock\")\ndef collect_interest(line: address, id: bytes32) -> uint256:\n  return self._reduce_credit(line, id, 0)[1]\n\n@external\n@nonreentrant(\"lock\")\ndef reduce_credit(line: address, id: bytes32, amount: uint256) -> (uint256, uint256):\n\tassert msg.sender == self.owner\n\treturn self._reduce_credit(line, id, amount)\n\n@external\n@nonreentrant(\"lock\")\ndef use_and_repay(line: address, repay: uint256, withdraw: uint256) -> (uint256, uint256):\n\tassert msg.sender == self.owner\n\n\t# Assume we are next lender in queue. \n\t# save id for later incase we repay full amount and stepQ\n\tid: bytes32 = ISecuredLine(line).ids(0)\n\n\t# no need to log, Line emits events already\n\tassert ISecuredLine(line).useAndRepay(repay)\n\n\treturn self._reduce_credit(line, id, withdraw)\n\n@external\n@nonreentrant(\"lock\")\ndef impair(line: address, id: bytes32) -> (uint256, uint256):\n\t\"\"\"\n\t@notice     - markdown the value of an insolvent loan reducing vault share price over time\n\t\t\t\t- Callable by anyone to prevent delegate from preventing numba go down\n\t@param line - line of credit contract to call\n\t@param id   - credit position on line controlled by this pool \n\t\"\"\"\n\tassert ISecuredLine(line).status() == INSOLVENT_STATUS\n\n\tposition: Position = ISecuredLine(line).credits(id)\n\n\trecoverable: uint256 = position.deposit - position.principal\n\n\tISecuredLine(line).withdraw(id, recoverable + position.interestRepaid) # claim all funds left in line\n\n\t# snapshot APR before updating share prices\n\told_apr: int256 = self._get_share_APR()\n\tshare_price: uint256 = self._get_share_price()\n\tfees_burned: uint256 = 0\n\n\t# If available, take performance fee from delegate to offset impairment and protect depositors\n\t# TODO currently callable by anyone. Give % of delegates fees to caller for impairing?\n\tif self.accrued_fees >= position.principal:\n\t\tfees_burned = position.principal / share_price\n\n\t\t# burn fees to offset losses\n\t\tself.accrued_fees -= fees_burned\n\t\tself.total_supply -= fees_burned\n\t\t# doesnt reducing supply mean share price goes UP during impairment?\n\telse:\n\t\t# else take what we can from delegate and socialize losses\n\t\tfees_burned = self.accrued_fees\n\t\tself.total_supply -= fees_burned # burn what fees we can\n\t\tself._update_shares(position.principal - (fees_burned * share_price), True)\n\t\tself.accrued_fees = 0\n\n\n\t# we deduct lost principal but add gained interest\n\tif position.interestRepaid != 0:\n\t\tself._update_shares(position.interestRepaid)\n\n\t# snitch was successful\n\tif fees_burned != 0 and msg.sender != self.owner:\n\t\tself._calc_and_mint_fee(self, msg.sender, fees_burned, SNITCH_FEE, FEE_TYPES.SNITCH)\n\n\tlog Impair(id, recoverable, position.principal, old_apr, self._get_share_APR(), share_price, fees_burned)\n\n\treturn (recoverable, position.principal)\n\n### External 4626 vault investing\n\n@external\n@nonreentrant(\"lock\")\ndef invest_4626(vault: address, amount: uint256) -> uint256:\n\tself._assert_delegate_has_available_funds(amount)\n\n\tself.total_deployed += amount\n\t# TODO add to vaults[vault] += amount\n\n\t# TODO check previewDeposit expected vs deposit actual for slippage\n\tshares: uint256 = IERC4626(vault).deposit(amount, self)\n\n\tlog Invest4626(vault, amount, shares) ## TODO shares\n\treturn shares\n\n\n@external\n@nonreentrant(\"lock\")\ndef divest_4626(vault: address, amount: uint256) -> bool:\n\tassert msg.sender == self.owner\n\tself.total_deployed += amount\n\n\t# TODO check previewWithdraw expected vs withdraw actual for slippage\n\tIERC4626(vault).withdraw(amount, self, self)\n\n\t# TODO how do we tell what is principal and what is profit??? need to update total_assets with yield\n\t# TBH a wee bit tracky to track all the different places they invested, entry price(s) for each, exit price(s) for each, calc profit over time, etc.\n\tlog Divest4626(vault, amount, 0)\n\t# if 4626 token balance is 0 but vaults[vault] > 0 then impair(vaults[vault])\n\t# if 4626 token balance is > 0 and vaults[vault] == 0 then log profit\n\n\t# delegate doesnt earn fees on 4626 strategies to incentivize line investment\n\treturn True\n\n\n@external\ndef sweep(token: address, amount: uint256 = max_value(uint256)):\n    \"\"\"\n    @notice\n        Removes tokens from this Vault that are not the type of token managed\n        by this Vault. This may be used in case of accidentally sending the\n        wrong kind of token to this Vault.\n        Tokens will be sent to `governance`.\n        This will fail if an attempt is made to sweep the tokens that this\n        Vault manages.\n        This may only be called by governance.\n    @param token The token to transfer out of this vault.\n    @param amount The quantity or tokenId to transfer out.\n    \"\"\"\n    assert msg.sender == self.owner\n    \n    value: uint256 = amount\n    if value == max_value(uint256):\n        value = IERC20(token).balanceOf(self)\n\n    if token == asset:\n\t\t# recover assets sent directly to pool\n\t\t# Can't be used to steal what this Vault is protecting\n        value = IERC20(asset).balanceOf(self) - self.total_assets\n\n    log Sweep(token, value)\n    self._erc20_safe_transfer(token, self.owner, value)\n\n\n### Pool Admin\n\n@external\ndef update_owner(new_owner: address) -> bool:\n\tassert msg.sender == self.owner\n\tself.pending_owner = new_owner\n\tlog NewPendingOwner(new_owner)\n\treturn True\n\n@external\ndef accept_owner() -> bool:\n\tassert msg.sender == self.pending_owner\n\tself.owner = self.pending_owner\n\tlog UpdateOwner(self.pending_owner)\n\treturn True\n\n@external\ndef update_min_deposit(new_min: uint256)  -> bool:\n\tassert msg.sender == self.owner\n\tself.min_deposit = new_min\n\tlog UpdateMinDeposit(new_min)\n\treturn True\n\n@external\ndef update_max_assets(new_max: uint256)  -> bool:\n\tassert msg.sender == self.owner\n\tself.max_assets = new_max\n\tlog UpdateMaxAssets(new_max)\n\treturn True\n\n\n### Manage Pool Fees\n\n@internal\ndef _assert_max_fee(fee: uint16, fee_type: FEE_TYPES) -> bool:\n  assert msg.sender == self.owner\n  assert fee <= FEE_COEFFICIENT # max 100% performance fee\n  log UpdateFee(fee, fee_type)\n  return True\n\n@external\n@nonreentrant(\"lock\")\ndef update_performance_fee(fee: uint16) -> bool:\n  self.fees.performance = fee\n  return self._assert_max_fee(fee, FEE_TYPES.PERFORMANCE)\n\n@internal\ndef _assert_pittance_fee(fee: uint16, fee_type: FEE_TYPES) -> bool:\n\tassert msg.sender == self.owner\n\tassert fee <= MAX_PITTANCE_FEE\n\tlog UpdateFee(fee, fee_type)\n\treturn True\n\n@external\n@nonreentrant(\"lock\")\ndef update_flash_fee(fee: uint16) -> bool:\n\tself.fees.flash = fee\n\treturn self._assert_pittance_fee(fee, FEE_TYPES.FLASH)\n\n@external\n@nonreentrant(\"lock\")\ndef update_collector_fee(fee: uint16) -> bool:\n\tself.fees.collector = fee\n\treturn self._assert_pittance_fee(fee, FEE_TYPES.COLLECTOR)\n\n@external\n@nonreentrant(\"lock\")\ndef update_deposit_fee(fee: uint16) -> bool:\n\tself.fees.collector = fee\n\treturn self._assert_pittance_fee(fee, FEE_TYPES.DEPOSIT)\n\n@external\n@nonreentrant(\"lock\")\ndef update_withdraw_fee(fee: uint16) -> bool:\n\tself.fees.collector = fee\n\treturn self._assert_pittance_fee(fee, FEE_TYPES.WITHDRAW)\n\n@external\ndef update_fee_recipient(new_recipient: address) -> bool:\n  assert msg.sender == self.fee_recipient\n  self.pending_fee_recipient = new_recipient\n  log NewPendingFeeRecipient(new_recipient)\n  return True\n\n@external\ndef accept_fee_recipient(newRecipient: address) -> bool:\n  assert msg.sender == self.pending_fee_recipient\n  self.fee_recipient = msg.sender\n  log AcceptFeeRecipient(msg.sender)\n  return True\n\n@external\n@nonreentrant(\"lock\")\ndef claim_fees(amount: uint256) -> bool:\n\tassert msg.sender == self.fee_recipient\n\t\n\tapr: int256 = self._get_share_APR()\n\tassert apr > 0 # TODO bitshift, cast uint, and check != 0 for cheaper gas ???\n\n\t# set amount to claim\n\tclaimed: uint256 = amount\n\tif amount == max_value(uint256):\n\t\tclaimed = self.accrued_fees # set to max available\n\t\n\t# transfer fee shares locked in pool to fee recipient\n\tself.accrued_fees -= claimed\n\tself._transfer(self, msg.sender, claimed)\n\n\tlog OwnerFeeClaimed(self.fee_recipient, claimed)\n\tprice: uint256 = self._get_share_price()\n\tlog TrackSharePrice(price, price, apr)\n\n\treturn True\n\n@external\n@nonreentrant(\"lock\")\ndef update_profit_degredation(degradation: uint256):\n    \"\"\"\n    @notice\n        Changes the locked profit degradation.\n    @param degradation The rate of degradation in percent per second scaled to 1e18.\n    \"\"\"\n    assert msg.sender == self.owner\n    # Since \"degradation\" is of type uint256 it can never be less than zero\n    assert degradation <= DEGRADATION_COEFFICIENT\n    self.locked_profit_degradation = degradation\n    log UpdateProfitDegredation(degradation) \n\n\n### ERC4626 Functions\n\n@external\n@nonreentrant(\"lock\")\ndef unlock_profits() -> uint256:\n\treturn self._unlock_profits()\n\n@external\n@nonreentrant(\"lock\")\ndef deposit(assets: uint256, receiver: address) -> uint256:\n\t\"\"\"\n\t\t@return - shares\n\t\"\"\"\n\treturn self._deposit(assets, receiver)\n\n@external\n@nonreentrant(\"lock\")\ndef depositWithReferral(assets: uint256, receiver: address, referrer: address) -> uint256:\n\t\"\"\"\n\t\t@return - shares\n\t\"\"\"\n\treturn self._deposit(assets, receiver, referrer)\n\n@external\n@nonreentrant(\"lock\")\ndef mint(shares: uint256, receiver: address) -> uint256:\n\t\"\"\"\n\t\t@return - assets\n\t\"\"\"\n\tshare_price: uint256 = self._get_share_price()\n\treturn self._deposit(shares * share_price, receiver) * share_price\n\n@external\n@nonreentrant(\"lock\")\ndef mintWithReferral(shares: uint256, receiver: address, referrer: address) -> uint256:\n\t\"\"\"\n\t\t@return - assets\n\t\"\"\"\n\tshare_price: uint256 = self._get_share_price()\n\treturn self._deposit(shares * share_price, receiver, referrer) * share_price\n\n@external\n@nonreentrant(\"lock\")\ndef withdraw(\n\tassets: uint256,\n\treceiver: address,\n\towner: address\n) -> uint256:\n\t\"\"\"\n\t\t@return - shares\n\t\"\"\"\n\treturn self._withdraw(assets, owner, receiver)\n\n@external\n@nonreentrant(\"lock\")\ndef redeem(shares: uint256, receiver: address, owner: address) -> uint256:\n\t\"\"\"\n\t\t@return - assets\n\t\"\"\"\n\tshare_price: uint256 = self._get_share_price()\n\treturn self._withdraw(shares * share_price, owner, receiver) * share_price\n\n### ERC20 Functions\n\n@external\n@nonreentrant(\"lock\")\ndef transfer(to: address, amount: uint256) -> bool:\n  return self._transfer(msg.sender, to, amount)\n\n@external\n@nonreentrant(\"lock\")\ndef transferFrom(sender: address, receiver: address, amount: uint256) -> bool:\n\tassert self._caller_has_approval(sender, amount)\n\treturn self._transfer(sender, receiver, amount)\n\n\n@external\ndef approve(spender: address, amount: uint256) -> bool:\n\tself.allowances[msg.sender][spender] = amount\n\tlog Approval(msg.sender, spender, amount)\n\treturn True\n\n@external\ndef increaseAllowance(spender: address, amount: uint256) -> bool:\n\tnewApproval: uint256 = self.allowances[msg.sender][spender] + amount\n\tself.allowances[msg.sender][spender] = newApproval\n\tlog Approval(msg.sender, spender, newApproval)\n\treturn True\n\n\n### Internal Functions \n\n# transfer + approve vault shares\n@internal\ndef _transfer(sender: address, receiver: address, amount: uint256) -> bool:\n\tif sender != empty(address):\n\t\t# if not minting, then ensure sender has balance\n\t\tself.balances[sender] -= amount\n\t\n\tif receiver != empty(address):\n\t\t# if not burning, add to receiver\n\t\t# on burns shares dissapear but we still have logs\n\t\tself.balances[receiver] += amount\n\t\n\n\tlog Transfer(sender, receiver, amount)\n\treturn True\n\n@internal\ndef _caller_has_approval(_owner: address, _amount: uint256) -> bool:\n\tif msg.sender != _owner:\n\t\tallowance: uint256 = self.allowances[_owner][msg.sender]\n\t\t# MAX = unlimited approval (saves an SSTORE)\n\t\tif (allowance < max_value(uint256)):\n\t\t\tallowance = allowance - _amount\n\t\t\tself.allowances[_owner][msg.sender] = allowance\n\t\t\t# NOTE: Allows log filters to have a full accounting of allowance changes\n\t\t\tlog Approval(_owner, msg.sender, allowance)\n\n\treturn True\n\n@internal\ndef _erc20_safe_transfer(_token: address, receiver: address, amount: uint256):\n    # Used only to send tokens that are not the type managed by this Vault.\n    # HACK: Used to handle non-compliant tokens like USDT\n    response: Bytes[32] = raw_call(\n        _token,\n        concat(\n            method_id(\"transfer(address,uint256)\"),\n            convert(receiver, bytes32),\n            convert(amount, bytes32),\n        ),\n        max_outsize=32,\n\t\trevert_on_failure=True\n    )\n    if len(response) > 0:\n        assert convert(response, bool), \"Transfer failed!\"\n\n\n# 4626 + Pool internal functions\n\n# inflate supply to take fees. reduce share price. tax efficient.\n\n\n@internal\ndef _mint(to: address, shares: uint256) -> bool:\n\t\"\"\"\n\t\"\"\"\n\tself.total_supply += shares\n\tself._transfer(empty(address), to, shares)\n\treturn True\n\n@internal\ndef _burn(owner: address, shares: uint256) -> bool:\n\t\"\"\"\n\t\"\"\"\n\tself.total_supply -= shares\n\tself._transfer(owner, empty(address), shares)\n\treturn True\n\n@internal\ndef _calc_and_mint_fee(\n\tpayer: address,\n\tto: address,\n\tshares: uint256,\n\tfee: uint16,\n\tfeeType: FEE_TYPES\n) -> uint256:\n\t\"\"\"\n\t\t@notice - inflate supply, reduce share price, and distribute new shares to ecosystem service provider.\n\t\t\t\t- more tax efficient to manipulate share price vs directly charge users a fee\n\t\"\"\"\n\tfees: uint256 = self._calc_fee(shares, fee)\n\tif(fees != 0):\n\t\tif(to == self.owner):\n\t\t\t# store delegate fees so we can slash if neccessary\n\t\t\tassert self._mint(self, fees)\n\t\t\tself.accrued_fees += fees\n\t\telse:\n\t\t\t# mint other ecosystem participants fees to them directly\n\t\t\tassert self._mint(to, fees)\n\t\t\n\tlog FeesGenerated(payer, to, fees, shares, feeType)\n\treturn fees\n\n\n@internal\n@pure\ndef _calc_fee(shares: uint256, fee: uint16) -> uint256:\n\t\"\"\"\n\t@dev\tdoes NOT emit `log FeesGenerated` like _mint_and_calc. Must manuualy log if using this function whil changing state\n\t\"\"\"\n\tif fee == 0:\n\t\treturn 0\n\telse:\n\t\treturn (shares * convert(fee, uint256)) / convert(FEE_COEFFICIENT, uint256)\n\n@internal \ndef _reduce_credit(line: address, id: bytes32, amount: uint256) -> (uint256, uint256):\n\t\"\"\"\n\t@notice\t\twithdraw deposit and/or interest from an external position\n\t@return \t(initial principal withdrawn, usurious interest earned)\n\t\"\"\"\n\twithdrawable: uint256 = amount\n\tinterest: uint256 = 0\n\tdeposit: uint256 = 0\n\t(deposit, interest) = ISecuredLine(line).available(id)\n\n\tif amount == 0:\n\t\t# 0 is shorthand for take maximum amount of interest\n\t\twithdrawable = interest\n\telif amount == max_value(uint256):\n\t\t# MAX is shorthand for all assets\n\t\twithdrawable = deposit + interest\n\n\t# set how much deposit vs interest we are collecting\n\t# @dev MUST come after `amount` shorthand checks\n\tif withdrawable < interest:\n\t\t# if we want less than claimable interest, reduce incoming interest\n\t\tinterest = withdrawable\n\t\tdeposit = 0\n\telse:\n\t\t# we are withdrawing initial deposit in addition to interest\n\t\tdeposit = withdrawable - interest\n\t\t# TODO TEST this random side effect here\n\t\tself.total_deployed -= deposit # return principal to liquid pool\n\n\t# no need to log, Line emits events already\n\tassert ISecuredLine(line).withdraw(id, withdrawable)\n\n\tif interest != 0:\n\t\t# update share price with new profits\n\t\tself._update_shares(interest, False)\n\n\t\t# payout fees with new share price\n\t\t# TODO TEST does taking fees before/after updating shares affect RDT ???\n\t\tfees: uint256 = self._take_performance_fee(interest)\n\n\treturn (deposit, interest)\n\n@internal\ndef _take_performance_fee(interest_earned: uint256) -> uint256:\n\t\"\"\"\n\t@notice takes total profits earned and takes fees for delegate and compounder\n\t@dev fees are stored as shares but input/ouput assets\n\t@param interest_earned - total amount of assets claimed from usurious activities\n\t@return total amount of assets taken as fees\n\t\"\"\"\n\tshare_price: uint256 = self._get_share_price()\n\tshares_earned: uint256 = interest_earned / self._get_share_price()\n\n\tperformance_fee: uint256 = self._calc_and_mint_fee(self, self.owner, shares_earned, self.fees.performance, FEE_TYPES.PERFORMANCE)\n\n\tcollector_fee: uint256 = self._calc_fee(shares_earned, self.fees.collector)\n\tif (collector_fee != 0 and msg.sender != self.owner):\n\t\t# only _calc not _mint_and_calc so caller gets collector fees in raw asset for easier mev\n\t\tlog FeesGenerated(self, msg.sender, collector_fee, shares_earned, FEE_TYPES.COLLECTOR)\n\t\tself.total_assets -= collector_fee * share_price # use pre-performance fee inflation price for payout\n\t\tself._erc20_safe_transfer(asset, msg.sender, collector_fee)\n\n\treturn performance_fee + collector_fee\n\n\n@internal\ndef _deposit(\n\tassets: uint256,\n\treceiver: address,\n\treferrer: address = empty(address)\n) -> uint256:\n\t\"\"\"\n\tadds shares to a user after depositing into vault\n\tpriviliged internal func\n\t\"\"\"\n\tassert assets >= self.min_deposit # dev: FUCK PLEBS\n\tassert self.total_assets + assets <= self.max_assets # dev: Pool max reached\n\t\n\tshare_price: uint256 = self._get_share_price()\n\tshares: uint256 = assets / share_price\n\n\tif self.fees.deposit != 0:\n\t\tself._calc_and_mint_fee(receiver, self.owner, shares, self.fees.deposit, FEE_TYPES.DEPOSIT)\n\n\tif referrer != empty(address) and self.fees.referral != 0:\n\t\tself._calc_and_mint_fee(receiver, referrer, shares, self.fees.referral, FEE_TYPES.REFERRAL)\n\n\t# TODO test how  deposit/refer fee inflatino affects the shares/asssets that they are *supposed* to lose\n\t\n\t# inc internal supply with new assets deposited and shares minted\n\t# use original price, opposite of _withdraw, requires them to deposit more assets than current price post fee inflation\n\tself.total_assets += assets\n\tself._mint(receiver, shares)\n\n\tassert IERC20(asset).transferFrom(msg.sender, self, assets) # dev: asset.transferFrom() failed on deposit\n\n\tlog Deposit(shares, receiver, msg.sender, assets)\n\t# log price change after deposit and fee inflation\n\tlog TrackSharePrice(share_price, self._get_share_price(), self._get_share_APR())\n\n\treturn shares\n\n@internal\ndef _withdraw(\n\tassets: uint256,\n\towner: address,\n\treceiver: address\n) -> uint256:\n\tassert assets <= self._get_max_liquid_assets() \t# dev: insufficient liquidity\n\tassert self._caller_has_approval(owner, assets) # dev: insufficient allowance\n\n\tshare_price: uint256 = self._get_share_price()\n\tshares: uint256 = assets / share_price\n\n\t# TODO test how  withdraw fee inflatino affects the shares/asssets that they are *supposed* to lose\n\t\t\n\t# use _calc not _mint_and_calc. minting does not affect withdrawer who should be penalized, only other pool depositors.\n\t# make them burn extra shares instead of inflating\n\twithdraw_fee: uint256 = self._calc_fee(shares, self.fees.withdraw)\n\tif self.fees.withdraw != 0: # only log if fee needed\n\t\tlog FeesGenerated(receiver, self.owner, withdraw_fee, shares,  FEE_TYPES.WITHDRAW)\n\n\t#  remove assets/shares from pool\n\tself.total_assets -= assets\n\tself._burn(receiver, shares + withdraw_fee)\n\t\n\t#  transfer assets to withdrawer\n\tself._erc20_safe_transfer(asset, receiver, assets)\n\n\tlog Withdraw(shares, owner, receiver, msg.sender, assets)\n\tlog TrackSharePrice(share_price, share_price, self._get_share_APR())\n\n\treturn shares\n\n\n@internal\ndef _update_shares(amount: uint256, impair: bool = False):\n\tshare_price: uint256 = self._get_share_price()\n\n\tif impair:\n\t\t# Profit is locked and gradually released per block\n\t\t# NOTE: compute current locked profit and replace with sum of current and new\n\t\tlocked_profit_before_loss: uint256 = self._calc_locked_profit() \n\t\t\n\t\t# reduce total assets held by lost amount\n\t\tself.total_assets -= amount\n\t\tif locked_profit_before_loss > amount: \n\t\t    self.locked_profit = locked_profit_before_loss - amount\n\t\telse:\n\t\t    self.locked_profit = 0\n\t\t\n\t\t# correct current share price and distributed dividends after eating losses\n\t\tself._unlock_profits()\n\n\t\t# TODO RDT logic\n\t\t# TODO log RDT rate change\n\telse:\n\t\t# correct current share price and distributed dividends before updating share valuation\n\t\tself._unlock_profits()\n\n\t\tself.total_assets += amount\n\t\tself.locked_profit += amount\n\t\t# TODO RDT logic\n\t\t# TODO  log RDT rate change\n\n\t# log price change after updates\n\tlog TrackSharePrice(share_price, self._get_share_price(), self._get_share_APR())\n\n\n@view\n@internal\ndef _free_assets() -> uint256:\n    return self.total_assets - self._calc_locked_profit()\n\n\n@view\n@internal\ndef _free_shares() -> uint256:\n    return (self.total_assets - self._calc_locked_profit()) / self._get_share_price()\n\n\n# @view\n# @internal\n# def _calc_free_profit() -> uint256:\n#     pct_profit_locked: uint256 = (block.timestamp - self.last_report) * self.locked_profit_degradation\n\n#     if(pct_profit_locked < DEGRADATION_COEFFICIENT):\n#         locked_profit: uint256 = self.locked_profit\n\n\n@view\n@internal\ndef _calc_locked_profit() -> uint256:\n    pct_profit_locked: uint256 = (block.timestamp - self.last_report) * self.locked_profit_degradation\n\n    if(pct_profit_locked < DEGRADATION_COEFFICIENT):\n        locked_profit: uint256 = self.locked_profit\n        return locked_profit - (\n                pct_profit_locked\n                * locked_profit\n                / DEGRADATION_COEFFICIENT\n            )\n    else:        \n        return 0\n\n\n@internal\ndef _unlock_profits() -> uint256:\n\tprofits: uint256 = self._calc_locked_profit()\n\n\n\t# TODO RDT logic\n\treturn 0\n\n@view\n@internal\ndef _get_share_price() -> uint256:\n\t# returns # of assets per share\n\n\t# TODO RDT logic\n\tprice: uint256 = self.total_assets / self.total_supply\n\tassert price != 0 # prevent division underflow\n\treturn price\n\n@view\n@internal\ndef _get_share_APR() -> int256:\n\t# returns rate of share price increase/decrease\n\t# TODO RDT logic\n\treturn 0\n\n@view\n@internal\ndef _get_max_liquid_assets() -> uint256:\n\t# TODO account for RDT locked profits\n\treturn self.total_assets - self.total_deployed\n\n@pure\n@internal\ndef _get_pool_name(_name: String[34]) -> String[50]:\n\treturn concat(CONTRACT_NAME, ' - ', _name)\n\n\n@pure\n@internal\ndef _get_pool_decimals(_token: address) -> uint8:\n\t\"\"\"\n\t@dev \t\t \t\tif we dont directly copy the `asset`'s decimals then we need to do decimal conversions everytime we calculate share price\n\t@param _token \t\tpool's asset to mimic decimals for pool's token\n\t\"\"\"\n\tsuccess: bool = False\n\tasset_decimals: Bytes[8] = b\"\"\n\tsuccess, asset_decimals = raw_call(\n\t\t_token,\n\t\t_abi_encode(b\"\",method_id=method_id(\"decimals()\")),\n\t\tmax_outsize=8,\n\t\tis_static_call=True,\n\t\trevert_on_failure=False\n\t)\n\n\tif success:\n\t\treturn convert(asset_decimals, uint8)\n\telse:\n\t\treturn 18\n\n@pure\n@internal\ndef _get_pool_symbol(_symbol: String[15]) -> String[18]:\n\t\"\"\"\n\t@dev \t\t \t\tif we dont directly copy the `asset`'s decimals then we need to do decimal conversions everytime we calculate share price\n\t@param _symbol\t \tcustom symbol input by pool creator\n\t\"\"\"\n\treturn concat(\"ddp\", _symbol)\n\n\n# \t IERC 3156 Flash Loan functions\n# \n#                    .-~*~--,.   .-.\n#           .-~-. ./OOOOOOOOO\\.'OOO`9~~-.\n#         .`OOOOOO.OOM.OLSONOOOOO@@OOOOOO\\\n#        /OOOO@@@OO@@@OO@@@OOO@@@@@@@@OOOO`.\n#        |OO@@@WWWW@@@@OOWWW@WWWW@@@@@@@OOOO).\n#      .-'OO@@@@WW@@@W@WWWWWWWWOOWW@@@@@OOOOOO}\n#     /OOO@@O@@@@W@@@@@OOWWWWWOOWOO@@@OOO@@@OO|\n#    lOOO@@@OO@@@WWWWWWW\\OWWWO\\WWWOOOOOO@@@O.'\n#     \\OOO@@@OOO@@@@@@OOW\\     \\WWWW@@@@@@@O'.\n#      `,OO@@@OOOOOOOOOOWW\\     \\WWWW@@@@@@OOO)\n#       \\,O@@@@@OOOOOOWWWWW\\     \\WW@@@@@OOOO.'\n#         `~c~8~@@@@WWW@@W\\       \\WOO|\\UO-~'\n#              (OWWWWWW@/\\W\\    ___\\WO)\n#                `~-~''     \\   \\WW=*'\n#                          __\\   \\\n#                          \\      \\\n#                           \\    __\\\n#                            \\  \\\n#                             \\ \\\n#                              \\ \\\n#                               \\\\\n#                                \\\\\n#                                 \\\n#                                  \\\n#\n\n@view\n@external\ndef maxFlashLoan(_token: address) -> uint256:\n\tif _token != asset:\n\t\treturn 0\n\telse:\n\t\treturn self._get_max_liquid_assets()\n\n@view\n@internal\ndef _getFlashFee(_token: address, _amount: uint256) -> uint256:\n\tif self.fees.flash == 0:\n\t\treturn 0\n\telse:\n\t\treturn self._calc_fee(min(_amount, self._get_max_liquid_assets()), self.fees.flash)\n\n@view\n@external\ndef flashFee(_token: address, _amount: uint256) -> uint256:\n\tassert _token == asset\n\treturn self._getFlashFee(_token, _amount)\n\n@external\n@nonreentrant(\"lock\")\ndef flashLoan(\n\treceiver: address,\n\t_token: address,\n\tamount: uint256,\n\tdata: Bytes[25000]\n) -> bool:\n\tassert amount <= self._get_max_liquid_assets()\n\n\t# give them the flashloan\n\tself._erc20_safe_transfer(asset, msg.sender, amount)\n\n\tfee: uint256 = self._getFlashFee(_token, amount)\n\t\n\t# ensure they can receive flash loan\n\t# TODO says onFlashLoan not on interface\n\tassert IERC3156FlashBorrower(receiver).onFlashLoan(msg.sender, _token, amount, fee, data) == keccak256(\"ERC3156FlashBorrower.onFlashLoan\")\n\t\n\t# receive payment\n\tIERC20(asset).transferFrom(msg.sender, self, amount + fee)\n\n\tself._update_shares(fee)\n\n\tlog FeesGenerated(msg.sender, self, fee, amount, FEE_TYPES.FLASH)\n\n\treturn True\n\n# EIP712 permit functionality\n\n@pure\n@external\ndef apiVersion() -> String[28]:\n\t\"\"\"\n\t@notice\n\t\tUsed to track the deployed version of this contract. In practice you\n\t\tcan use this version number to compare with Debt DAO's GitHub and\n\t\tdetermine which version of the source matches this deployed contract.\n\t@dev\n\t\tAll strategies must have an `apiVersion()` that matches the Vault's\n\t\t`API_VERSION`.\n\t@return API_VERSION which holds the current version of this contract.\n\t\"\"\"\n\treturn API_VERSION\n\n@view\n@internal\ndef domain_separator() -> bytes32:\n\treturn keccak256(\n\t\tconcat(\n\t\t\tDOMAIN_TYPE_HASH,\n\t\t\tkeccak256(convert(CONTRACT_NAME, Bytes[18])),\n\t\t\tkeccak256(convert(API_VERSION, Bytes[18])),\n\t\t\tconvert(chain.id, bytes32),\n\t\t\tconvert(self, bytes32)\n\t\t)\n\t)\n\n@view\n@external\ndef DOMAIN_SEPARATOR() -> bytes32:\n\tif chain.id == CACHED_CHAIN_ID:\n\t\treturn CACHED_COMAIN_SEPARATOR\n\telse:\n\t\treturn self.domain_separator()\n\n@nonpayable\n@external\ndef permit(owner: address, spender: address, amount: uint256, deadline: uint256, signature: Bytes[65]) -> bool:\n\t\"\"\"\n\t@notice\n\t\tApproves spender by owner's signature to expend owner's tokens.\n\t\tSee https://eips.ethereum.org/EIPS/eip-2612.\n\t\tStolen from Yearn Vault code\n\t\thttps://github.com/yearn/yearn-vaults/blob/74364b2c33bd0ee009ece975c157f065b592eeaf/contracts/Vault.vy#L765-L806\n\t@param owner The address which is a source of funds and has signed the Permit.\n\t@param spender The address which is allowed to spend the funds.\n\t@param amount The amount of tokens to be spent.\n\t@param deadline The timestamp after which the Permit is no longer valid.\n\t@param signature A valid secp256k1 signature of Permit by owner encoded as r, s, v.\n\t@return True, if transaction completes successfully\n\t\"\"\"\n\tassert owner != empty(address)  # dev: invalid owner\n\tassert deadline >= block.timestamp  # dev: permit expired\n\n\tnonce: uint256 = self.nonces[owner]\n\tdigest: bytes32 = keccak256(\n\t\tconcat(\n\t\t\tb'\\x19\\x01',\n\t\t\tself.domain_separator(),\n\t\t\tkeccak256(\n\t\t\t\tconcat(\n\t\t\t\t\tPERMIT_TYPE_HASH,\n\t\t\t\t\tconvert(owner, bytes32),\n\t\t\t\t\tconvert(spender, bytes32),\n\t\t\t\t\tconvert(amount, bytes32),\n\t\t\t\t\tconvert(nonce, bytes32),\n\t\t\t\t\tconvert(deadline, bytes32),\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n\t# NOTE: signature is packed as r, s, v\n\tr: uint256 = convert(slice(signature, 0, 32), uint256)\n\ts: uint256 = convert(slice(signature, 32, 32), uint256)\n\tv: uint256 = convert(slice(signature, 64, 1), uint256)\n\tassert ecrecover(digest, v, r, s) == owner  # dev: invalid signature\n\tself.allowances[owner][spender] = amount\n\tself.nonces[owner] = nonce + 1\n\tlog Approval(owner, spender, amount)\n\treturn True\n\n\n# IERC20 view functions\n\n@external\n@view\ndef balanceOf(account: address) -> uint256:\n\treturn self.balances[account]\n\n@external\n@view\ndef allowance(owner: address, spender: address) -> uint256:\n\treturn self.allowances[owner][spender]\n\n# IERC4626 view functions\n\n@view\n@external\ndef totalAssets() -> uint256:\n\treturn self.total_assets\n\n@view\n@external\ndef totalSupply() -> uint256:\n\treturn self.total_supply\n\n@view\n@external\ndef APR() -> int256:\n\treturn self._get_share_APR()\n\n@view\n@external\ndef price() -> uint256:\n\treturn self._get_share_price()\n\n\n@external\n@view\ndef convertToShares(_assets: uint256) -> uint256:\n\treturn _assets * (self.total_assets / self.total_supply)\n\n\n@external\n@view\ndef convertToAssets(_shares: uint256) -> uint256:\n\treturn _shares * (self.total_supply / self.total_assets)\n\n\n@external\n@view\ndef maxDeposit(_receiver: address) -> uint256:\n\t\"\"\"\n\t\tadd assets\n\t\"\"\"\n\treturn max_value(uint256) - self.total_assets\n\n@external\n@view\ndef maxMint(_receiver: address) -> uint256:\n\treturn (max_value(uint256) - self.total_assets) / self._get_share_price()\n\n@external\n@view\ndef maxWithdraw(_owner: address) -> uint256:\n\t\"\"\"\n\t\tremove shares\n\t\"\"\"\n\treturn self._get_max_liquid_assets()\n\n\n@external\n@view\ndef maxRedeem(_owner: address) -> uint256:\n\t\"\"\"\n\t\tremove assets\n\t\"\"\"\n\treturn self._get_max_liquid_assets() / self._get_share_price()\n\n@external\n@view\ndef previewDeposit(_assets: uint256) -> uint256:\n\t\"\"\"\n\t@notice\t\tReturns max amount that can be deposited which is min(maxDeposit, userRequested)\n\t\t\t\tSo if assets > maxDeposit then it returns maxDeposit\n\t@dev \t\tINCLUSIVE of deposit fees (should be same as without deposit fees bc of mintflation)\n\t@return \tshares returned when minting _assets\n\t\"\"\"\n\tshare_price: uint256 =  self._get_share_price()\n\tfree_shares: uint256 = min(max_value(uint256) - self.total_assets, _assets) / share_price\n\t# TODO Dont think we need to include fees here since they are inflationary they shouldnt affect return values\n\treturn free_shares - self._calc_fee(_assets / share_price, self.fees.deposit)\n\n@external\n@view\ndef previewMint(_shares: uint256) -> uint256:\n\t\"\"\"\n\t@notice\t\tReturns max amount that can be deposited which is min(maxDeposit, userRequested)\n\t\t\t\tSo if assets > maxDeposit then it returns maxDeposit\n\t@dev \t\tINCLUSIVE of deposit fees (should be same as without deposit fees bc of mintflation)\n\t@return \tassets required to mint _shares\n\t\"\"\"\n\tshare_price: uint256 =  self._get_share_price()\n\tfree_shares: uint256 = min(max_value(uint256) - self.total_assets, _shares * share_price)\n\t# TODO Dont think we need to include fees here since they are inflationary they shouldnt affect return values\n\treturn (free_shares - self._calc_fee(free_shares, self.fees.deposit)) * share_price\n\n@external\n@view\ndef previewWithdraw(_assets: uint256) -> uint256:\n\tshare_price: uint256 =  self._get_share_price()\n\tfree_shares: uint256 = min(self._get_max_liquid_assets(), (max_value(uint256) - _assets)) / share_price\n\t# TODO Dont think we need to include fees here since they are inflationary they shouldnt affect return values\n\treturn free_shares - self._calc_fee(_assets / share_price, self.fees.withdraw)\n\n@external\n@view\ndef previewRedeem(_shares: uint256) -> uint256:\n\tshare_price: uint256 =  self._get_share_price()\n\tfree_shares: uint256 = min(self._get_max_liquid_assets(), _shares * share_price)\n\t# TODO Dont think we need to include fees here since they are inflationary they shouldnt affect return values\n\treturn (free_shares - self._calc_fee(free_shares, self.fees.withdraw)) * share_price\n\n\n# 88                                            ad88                                   \n# \"\"              ,d                           d8\"                                     \n#                 88                           88                                      \n# 88 8b,dPPYba, MM88MMM ,adPPYba, 8b,dPPYba, MM88MMM ,adPPYYba,  ,adPPYba,  ,adPPYba,  \n# 88 88P'   `\"8a  88   a8P_____88 88P'   \"Y8   88    \"\"     `Y8 a8\"     \"\" a8P_____88  \n# 88 88       88  88   8PP\"\"\"\"\"\"\" 88           88    ,adPPPPP88 8b         8PP\"\"\"\"\"\"\"  \n# 88 88       88  88,  \"8b,   ,aa 88           88    88,    ,88 \"8a,   ,aa \"8b,   ,aa  \n# 88 88       88  \"Y888 `\"Ybbd8\"' 88           88    `\"8bbdP\"Y8  `\"Ybbd8\"'  `\"Ybbd8\"'  \n                                                                                     \n\nfrom vyper.interfaces import ERC20 as IERC20\n\ninterface IERC2612:\n\t# TODO: standard permit interface. Need to change yearn code for it.\n    # def permit(owner: address, spender: address, amount: uint256, deadline: uint256, v: uint8, r: bytes32, s: bytes32) -> bool: nonpayable\n    def permit(owner: address, spender: address, amount: uint256, deadline: uint256, signature: Bytes[65]) -> bool: nonpayable\n    def nonces(owner: address ) -> uint256: view\n    def DOMAIN_SEPARATOR() -> bytes32: view\n\ninterface IERC20Detailed: \n\tdef name() -> String[18]: view\n\tdef symbol() -> String[18]: view\n\tdef decimals() -> uint8: view\n\ninterface IERC4626:\n\n    def deposit(assets: uint256, receiver: address)  -> uint256: nonpayable\n    def withdraw(assets: uint256, receiver: address, owner: address) -> uint256: nonpayable\n    def mint(shares: uint256, receiver: address) -> uint256: nonpayable\n    def redeem(shares: uint256, receiver: address, owner: address) -> uint256: nonpayable\n\n    # autogenerated state getters\n\n    # def asset() -> address: view\n\n\t# manually generated getters\n\n    # @notice total underlying assets owned by the pool \n    def totalAssets() -> uint256: view\n    # @notice amount of shares that the Vault would exchange for the amount of assets provided\n    def convertToShares(assets: uint256) -> uint256: view \n    # @notice amount of assets that the Vault would exchange for the amount of shares provided\n    def convertToAssets(shares: uint256) -> uint256: view\n    # @notice maximum amount of assets that can be deposited into vault for receiver\n    def maxDeposit(receiver: address) -> uint256: view # @dev returns maxAssets\n    # @notice simulate the effects of their deposit() at the current block, given current on-chain conditions.\n    def previewDeposit(assets: uint256) -> uint256: view\n    # @notice maximum amount of shares that can be deposited into vault for receiver\n    def maxMint(receiver: address) -> uint256: view # @dev returns maxAssets\n    # @notice simulate the effects of their mint() at the current block, given current on-chain conditions.\n    def previewMint(shares: uint256) -> uint256: view\n    # @notice maximum amount of assets that can be withdrawn into vault for receiver\n    def maxWithdraw(receiver: address) -> uint256: view # @dev returns maxAssets\n    # @notice simulate the effects of their withdraw() at the current block, given current on-chain conditions.\n    def previewWithdraw(assets: uint256) -> uint256: view\n    # @notice maximum amount of shares that can be withdrawn into vault for receiver\n    def maxRedeem(receiver: address) -> uint256: view # @dev returns maxAssets\n    # @notice simulate the effects of their redeem() at the current block, given current on-chain conditions.\n    def previewRedeem(shares: uint256) -> uint256: view\n\n# 4626 extension for referrals\ninterface IERC4626R:\n    def depositWithReferral(assets: uint256, receiver: address, referrer: address)  -> uint256: nonpayable\n    def mintWithReferral(shares: uint256, receiver: address, referrer: address) -> uint256: nonpayable\n\n# Flashloans\ninterface IERC3156:\n    # /**\n    # * @dev The amount of currency available to be lent.\n    # * @param token The loan currency.\n    # * @return The amount of `token` that can be borrowed.\n    # */\n    def maxFlashLoan(token: address) -> uint256: view\n\n    # /**\n    # * @dev The fee to be charged for a given loan.\n    # * @param token The loan currency.\n    # * @param amount The amount of tokens lent.\n    # * @return The amount of `token` to be charged for the loan, on top of the returned principal.\n    # */\n    def flashFee(token: address, amount: uint256) -> uint256: view\n\n    # /**\n    # * @dev Initiate a flash loan.\n    # * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\n    # * @param token The loan currency.\n    # * @param amount The amount of tokens lent.\n    # * @param data Arbitrary data structure, intended to contain user-defined parameters.\n    # */\n    def flashLoan(\n        receiver: address,\n        token: address,\n        amount: uint256,\n        data: Bytes[25000]\n    ) -> bool: payable\n\n\ninterface IERC3156FlashBorrower:\n    def onFlashLoan(\n        initiator: address,\n        token: address,\n        amount: uint256,\n        fee: uint256,\n        data:  Bytes[25000]\n    ) -> bytes32: payable\n\n\n# Debt DAO interfaces\n\ninterface ISecuredLine:\n    def ids(index: uint256) -> bytes32: view\n    def status() -> uint256: view\n    def credits(id: bytes32) -> Position: view\n    def available(id: bytes32) -> (uint256, uint256): view\n\n\t# invest\n    def addCredit(\n        drate: uint128,\n        frate: uint128,\n        amount: uint256,\n        token: address,\n        lender: address\n    )-> bytes32: payable\n    def setRates(id: bytes32, drate: uint128, frate: uint128) -> bool: nonpayable\n    def increaseCredit(id: bytes32,  amount: uint256) -> bool: payable\n\n    # self-repay\n    def useAndRepay(amount: uint256) -> bool: nonpayable\n\n    # divest\n    def withdraw(id: bytes32,  amount: uint256) -> bool: nonpayable\n\n# (uint256, uint256, uint256, uint256, uint8, address, address)\nstruct Position:\n    deposit: uint256\n    principal: uint256\n    interestAccrued: uint256\n    interestRepaid: uint256\n    decimals: uint8\n    token: address\n    lender: address\n\n### Events\n\n# IERC20 Events\nevent Transfer:\n\tsender: indexed(address)\n\treceiver: indexed(address)\n\tvalue: uint256\n\nevent Approval:\n\towner: indexed(address)\n\tspender: indexed(address)\n\tvalue: uint256\n\n# IERC4626 Events\nevent Deposit:\n\tshares: indexed(uint256)\n\towner: indexed(address)\n\tsender: address\n\tassets: uint256\n\nevent Withdraw:\n\tshares: indexed(uint256)\n\towner: indexed(address)\n\treceiver: indexed(address)\n\tsender: address\n\tassets: uint256\n\n# Pool Events\nevent TrackSharePrice:\n\tpre_op_price: uint256 \t# price before doing pool actions and price updates \n\tpost_op_price: uint256 \t# price after doing pool actions and price updates\n\ttrans_change: int256 \t# transitory change in share price denominated in APR bps. + for good boi, - for bad gurl\n\n# Investing Events\nevent Impair:\n\tid: indexed(bytes32)\n\trecovered: indexed(uint256)\n\tlost: indexed(uint256)\n\told_apr: int256\n\tnew_apr: int256\n\tshare_price: uint256\n\tfees_burned: uint256\n\nevent Invest4626:\n\tvault: indexed(address)\n\tassets: indexed(uint256)\n\tshares: indexed(uint256)\n\nevent Divest4626:\n\tvault: indexed(address)\n\tassets: indexed(uint256)\n\tshares: indexed(uint256)\n\n# fees\nevent UpdateFee:\n\tfee_bps: indexed(uint16)\n\tfee_type: indexed(FEE_TYPES)\n\nevent NewPendingFeeRecipient:\n\tnewRecipient: address # New active management fee\n\nevent AcceptFeeRecipient:\n\tnewRecipient: address # New active management fee\n\nevent FeesGenerated:\n\tpayer: indexed(address)\n\treceiver: indexed(address)\n\tfee: indexed(uint256)\n\tshares: uint256 # total shares fees were generated on (interest, deposit, flashloan)\n\tfeeType: FEE_TYPES # self.fees enum index\n\nevent OwnerFeeClaimed:\n\trecipient: indexed(address)\n\tfees: indexed(uint256)\n\n\n# Admin updates\n\nevent NewPendingOwner:\n\tpendingOwner: indexed(address)\n\nevent UpdateOwner:\n\towner: indexed(address) # New active governance\n\nevent UpdateMinDeposit:\n\tminimum: indexed(uint256) # New active deposit limit\n\nevent UpdateMaxAssets:\n\tmaximum: indexed(uint256) # New active deposit limit\n\nevent Sweep:\n\ttoken: indexed(address) # New active deposit limit\n\tamount: indexed(uint256) # New active deposit limit\n\nevent UpdateProfitDegredation:\n\tdegredation: indexed(uint256)","imports":[],"references":[],"urls":[]},"PoolFactory.vy":{"checksum":{"algorithm":"md5","hash":"0x3781d3c1c741b00f52c49a385e9bf3f6"},"content":"# @version ^0.3.7\n\n\n# \"\"\"\n# @title \tDebt DAO Lending Pool Factory\n# @author Kiba Gateaux\n# @notice Tokenized, liquid 4626 pool allowing depositors to collectively lend to Debt DAO Line of Credit contracts\n# @dev \tAutomiatically deploys a chicken bond for each new pool.\n# \"\"\"\n\nstruct Fees: # from PoolDelegate.vy\n\tperformance: uint16\n\tdeposit: uint16\n\twithdraw: uint16\n\tflash: uint16\n\tcollector: uint16\n\treferral: uint16\n\ninterface Oracle:\n    def getLatestAnswer(token: address) -> uint256: nonpayable\n\ninterface CurveFactory:\n     def deploy_metapool(_base_pool: address, _name: String[32], _symbol: String[10], _coin: address, _A: uint256, _fee: uint256) -> address: nonpayable\n\ninterface IERC20:\n     def decimals() -> uint8: nonpayable\n     def symbol() -> String[18]: nonpayable\n\ninterface ERC4626:\n    def deposit(): nonpayable\n\ninterface ChickenBond:\n\n    def deposit() : nonpayable\n\n\nevent DeployPool:\n    pool: indexed(address)\n    delegate: indexed(address)\n    token: indexed(address)\n\nevent DeployPoolChikkinBondz:\n    bond_manager: indexed(address)\n    bond_token: indexed(address)\n\nevent DeployPoolCrvAMMs:\n    bond_crv_pool: indexed(address)\n    meta_crv_pool: indexed(address)\n\nevent ShitcoinListChanged:\n    new_list: DynArray[address, MAX_TOKEN_PER_CLASS]\n\nevent EthListChanged:\n    new_list: DynArray[address, MAX_TOKEN_PER_CLASS]\n\n# default Debt DAO Pool init config\nDEFAULT_FLASH_FEE: constant(uint16) = 5     # 5 bps. 0.05% per flashloan. Similar Aave rate.\nDEFAULT_REFERRAL_FEE: constant(uint16) = 20 # 20 bps, 0.2% of deposit goes to incentivizing chicken bond liquidity\n# Minimum amounts to deposit from deployer to instantiate new pool/bond system\nMIN_ETH_DELEGATE_STAKE: constant(uint256) = 100\nMIN_USD_DELEGATE_STAKE: constant(uint256) = 100_000\n\nDEFAULT_CRV_A: constant(uint256) = 6 # A = 6. Not pegged assets\nDEFAULT_CRV_FEE: constant(uint256) = 15000000 # 0.15%. 10 decimals\nCRV_POOL_FACTORY: constant(address) = 0xB9fC157394Af804a3578134A6585C0dc9cc990d4\n# TODO make bLUDS-LUSD-3pool ? Nah having synths in every pool makes it way more lit.\nCRV_META_POOL_USD: constant(address) = 0xA5407eAE9Ba41422680e2e00537571bcC53efBfD # susdv2 pool\nCRV_META_POOL_ETH: constant(address) = 0xc5424B857f758E906013F3555Dad202e4bdB4567 # sETH pool\n\nMAX_TOKEN_PER_CLASS: constant(uint256) = 5\n\nETHLIKE_COINS: public(DynArray[address, MAX_TOKEN_PER_CLASS])\nUSD_SHITCOINS: public(DynArray[address, MAX_TOKEN_PER_CLASS])\n\noracle: public(immutable(Oracle))\ngod: public(immutable(address))\n\npool_implementation: public(immutable(address))\nbond_token_implementation: public(immutable(address))\nchicken_bond_implementation: public(immutable(address))\n\n@external\ndef __init__(god_: address, pool_impl: address, bond_token_impl: address, chicken_impl: address, oracle_: address,\n            eth_coins: DynArray[address, MAX_TOKEN_PER_CLASS], usd_coins: DynArray[address, MAX_TOKEN_PER_CLASS]):\n    \"\"\"\n    @dev    MUST ensure `pool_imoplementation` was deployed properly.\n            MUST follow instructions at https://github.com/vyperlang/vyper/blob/2adc34ffd3bee8b6dee90f552bbd9bb844509e19/tests/base_conftest.py#L130-L160\n    @param pool_impl    Debt DAO Pool logic\n    @param chicken_impl Debt DAO Pool Chicken Bond Factory contract to create bonds for credit pools\n    \n    \"\"\"\n    assert god_ != empty(address) # god must not be dead\n\n    god = god_\n\n    pool_implementation = pool_impl\n    bond_token_implementation = bond_token_impl\n    chicken_bond_implementation = chicken_impl\n\n    self._update_shitcoins(eth_coins)\n    self._update_eth_tokens(usd_coins)\n\n    oracle = Oracle(oracle_)\n\n@external\ndef deploy_pool(_owner: address, _token: address, _name: String[50], _symbol: String[18],\n                _performance_fee: uint16, _deposit_fee: uint16, _initial_deposit: uint256) -> address:\n    assert oracle.getLatestAnswer(_token) != 0\n\n    fees: Fees = Fees({\n        performance: _performance_fee,\n        deposit: _deposit_fee,\n        withdraw: 0,    # no penalty for withdrawals\n        flash: DEFAULT_FLASH_FEE,       # passive income\n        collector: 0,   # no automated collections\n        referral: DEFAULT_REFERRAL_FEE, # bootstrap bond liquidity\n    })\n\n    # https://vyper.readthedocs.io/en/latest/built-in-functions.html?highlight=create_from_blueprint#create_from_blueprint\n    pool: address = create_from_blueprint(\n        pool_implementation,\n        _owner, _token, _name, _symbol, fees, # args\n        code_offset=0, # tbh dont know what this does\n        salt=keccak256(_abi_encode(self, msg.sender, _token)) # similiar composite index as lines for pool CREATE2. (contract-actor-token)\n    )\n\n    log DeployPool(pool, _owner, _token)\n    \n    if _initial_deposit != 0:\n        self._assert_initial_deposit(_token, _initial_deposit)\n\n        manager: address = empty(address)\n        bond_token: address = empty(address)\n        (manager, bond_token) = self._deplot_ze_chikkins(pool, _token)\n        \n        base_crv_pool: address = empty(address)\n        meta_crv_pool: address = empty(address)\n        bond_crv_pool: address = empty(address)\n        # pools may be null if deployment wasnt successful\n        (base_crv_pool, meta_crv_pool, bond_crv_pool) = self._deploy_crv_pools(_token, pool, bond_token)\n\n        self._seed_all_pools(\n            _token, pool, bond_token,\n            base_crv_pool, meta_crv_pool, bond_crv_pool,\n            manager, _initial_deposit\n        )\n\n    return pool\n\n@internal\ndef _assert_initial_deposit(_base_token: address, _initial_deposit: uint256):\n    isUSD: bool = CRV_META_POOL_USD == self._get_meta_pool_for_base_token(_base_token)\n    normalized_val: uint256 = _initial_deposit / (10 ** convert(IERC20(_base_token).decimals(), uint256))\n\n    if isUSD:\n        assert normalized_val >= MIN_USD_DELEGATE_STAKE\n    else:\n        assert normalized_val >= MIN_ETH_DELEGATE_STAKE\n\n    self._erc20_safe_transfer(_base_token, self, _initial_deposit)\n\n@internal\ndef _erc20_safe_transfer(token: address, receiver: address, amount: uint256):\n    response: Bytes[32] = raw_call(\n        token,\n        concat(\n            method_id(\"transfer(address,uint256)\"),\n            convert(receiver, bytes32),\n            convert(amount, bytes32),\n        ),\n        max_outsize=32,\n\t\trevert_on_failure=True\n    )\n\n    if len(response) > 0:\n        assert convert(response, bool), \"Transfer failed!\"\n\n\n\n### EVERYTHING BELOW IS NON-ESSENTIAL FUNCTIONALITY\n\n@internal\ndef _deplot_ze_chikkins(pool: address, base_token: address) -> (address, address):\n    \"\"\"\n    @notice         the plot thickens with another chicken. May your bonds be forever unbroken\n    @param pool     pool/pool-token to deploy chicken bond for\n    @param token    token that pool and chicken bond are denominated in\n    \"\"\"\n\n    # TODO precompute the bddp token address so can ciircular references can be immutable in both contracts\n    \n    # https://vyper.readthedocs.io/en/latest/built-in-functions.html?highlight=create_from_blueprint#create_from_blueprint\n    chikkin_manager: address = create_from_blueprint(\n        chicken_bond_implementation,\n        code_offset=0, # tbh dont know what this does\n        salt=keccak256(_abi_encode(pool)) # similiar composite index as lines for chikkin_manager CREATE2. (contract-actor-token)\n    )\n\n    # deploy bddp token\n    bddp_token: address = create_from_blueprint(\n        bond_token_implementation,\n        chikkin_manager,\n        code_offset=0, # tbh dont know what this does\n        salt=keccak256(_abi_encode(pool)) # similiar composite index as lines for chikkin_manager CREATE2. (contract-actor-token)\n    )\n\n    log DeployPoolChikkinBondz(chikkin_manager, bddp_token)\n\n    return (chikkin_manager, bddp_token)\n\n@internal\ndef _deploy_crv_pools(base_token: address, ddp_token: address, bddp_token: address) -> (address, address, address):\n    \"\"\"\n    @notice         The plot thickens with another chicken. May your bonds be forever unbroken\n                    Deploys a new CRV pool with ddp + bddp token. Tries to find a base pool to match them with\n    @param pool     Pool to deploy chicken bond for\n    @param token    Token that pool and chicjken bond are denominated in\n    @return        bond_crv_pool - Pool where newly deployed bond token can be traded.\n                    meta_crv_pool - May be null. Crv pool that bond token is paired with for deeper liquidity\n    \"\"\"\n    meta_pool: address = self._get_meta_pool_for_base_token(base_token)\n\n    if meta_pool == empty(address):\n        # no metapool. create pool with just ddp and bddptokens\n        _name: String[32] = \"\" # TODO\n        _symbol: String[10] = \"\" # TODO\n        crv_pool: address = CurveFactory(CRV_POOL_FACTORY).deploy_metapool(meta_pool, _name, _symbol, ddp_token, DEFAULT_CRV_A, DEFAULT_CRV_FEE)\n\n        log DeployPoolCrvAMMs(crv_pool, empty(address))\n\n        return (crv_pool, empty(address), empty(address))\n    else:\n        _name: String[32] = \"\" # TODO\n        _symbol: String[10] = \"\" # TODO\n        # create metapool with meta_pool and ddp token\n        new_meta_pool: address = CurveFactory(CRV_POOL_FACTORY).deploy_metapool(meta_pool, _name, _symbol, ddp_token, DEFAULT_CRV_A, DEFAULT_CRV_FEE)\n        # then create another metapool with ddp metapool + bddp token\n        bond_pool: address = CurveFactory(CRV_POOL_FACTORY).deploy_metapool(new_meta_pool, _name, _symbol, bddp_token, DEFAULT_CRV_A, DEFAULT_CRV_FEE)\n\n        # @dev MUST call _seed_all_pools after deploying.\n\n        log DeployPoolCrvAMMs(bond_pool, new_meta_pool)\n\n        return (meta_pool, new_meta_pool, bond_pool)\n\n@internal\ndef _seed_all_pools(base_token: address, ddp_token: address, bddp_token: address, \n                    base_pool: address, ddp_pool: address, bddp_pool: address, \n                    bond_manager: address, initial_deposit: uint256):\n    # _assert_initial_deposit must have been called already\n    \n    # TODO MAJOR problem is u cant immediately mint bddp tokens, it requires bonds to vest. \n    # Add function so that we can immediately mint at slight premium to lowest possible value?\n    # might actually support a market price above peg since everyone would arb and we just get more assets permanently in our sysetm\n\n\n    alloc_per_pool: uint256[12] = [0,0,0,0,0,0,0,0,0,0,0,0]\n\n    if ddp_pool == empty(address):\n        # no metapools, just isolated base_token<>ddp<>bddp pool\n        bond_deposit: uint256 = initial_deposit / 3\n        # raw_call(bond_manager, )\n\n        # X % - meta pool (mp) - 50% ddp 50% bddp\n    else:\n        bond_deposit: uint256 = initial_deposit / 2\n        instant_mint_fee: uint256 = bond_deposit * 20 / 100 # TODO maanger.get_instant_mint_fee\n\n    # 25 % - credit pool (ddp) - 100% bt\n    \n    # 25 % - base pool (3p) - 100% bt\n    \n    # 0 % - meta pool (mp) - 50% 3pt, 50% ddpt\n    \n    # 50 % - bond pool (bp) - 50% bddpt, 50% mpt\n    \n\n@view\n@internal\ndef _get_meta_pool_for_base_token(base_token: address, ) -> address:\n    \"\"\"\n    @notice         the plot thickens with another chicken. May your bonds be forever unbroken\n    @param base_token  raw asset that \n    @param token    token that pool and chicjken bond are denominated in\n    \"\"\"\n    if base_token in self.USD_SHITCOINS:\n        return CRV_META_POOL_USD\n\n    if base_token in self.ETHLIKE_COINS:\n        return CRV_META_POOL_ETH\n\n    return empty(address)\n\n@external\ndef update_shitcoins(shitcoin_list: DynArray[address, MAX_TOKEN_PER_CLASS]):\n    assert msg.sender == god\n    self._update_shitcoins(shitcoin_list)\n\n@internal\ndef _update_shitcoins(shitcoin_list: DynArray[address, MAX_TOKEN_PER_CLASS]):\n    self.USD_SHITCOINS = shitcoin_list\n    log ShitcoinListChanged(shitcoin_list)\n\n@external\ndef update_eth_tokens(eth_list: DynArray[address, MAX_TOKEN_PER_CLASS]):\n    assert msg.sender == god\n    self._update_eth_tokens(eth_list)\n\n@internal\ndef _update_eth_tokens(eth_list: DynArray[address, MAX_TOKEN_PER_CLASS]):\n    self.ETHLIKE_COINS = eth_list\n    log EthListChanged(eth_list)\n\n\n# fin\n\n\n\n\n# much empty\n# fuck around and throw some NFT shit in here?\n\n\n\n\n\n","imports":[],"references":[],"urls":[]},"YearnVault.vy":{"checksum":{"algorithm":"md5","hash":"0xb98146f5148242ca7d45baccf6dd6309"},"content":"# @version 0.3.3\n\"\"\"\n@title Yearn Token Vault\n@license GNU AGPLv3\n@author yearn.finance\n@notice\n    Yearn Token Vault. Holds an underlying token, and allows users to interact\n    with the Yearn ecosystem through Strategies connected to the Vault.\n    Vaults are not limited to a single Strategy, they can have as many Strategies\n    as can be designed (however the withdrawal queue is capped at 20.)\n    Deposited funds are moved into the most impactful strategy that has not\n    already reached its limit for assets under management, regardless of which\n    Strategy a user's funds end up in, they receive their portion of yields\n    generated across all Strategies.\n    When a user withdraws, if there are no funds sitting undeployed in the\n    Vault, the Vault withdraws funds from Strategies in the order of least\n    impact. (Funds are taken from the Strategy that will disturb everyone's\n    gains the least, then the next least, etc.) In order to achieve this, the\n    withdrawal queue's order must be properly set and managed by the community\n    (through governance).\n    Vault Strategies are parameterized to pursue the highest risk-adjusted yield.\n    There is an \"Emergency Shutdown\" mode. When the Vault is put into emergency\n    shutdown, assets will be recalled from the Strategies as quickly as is\n    practical (given on-chain conditions), minimizing loss. Deposits are\n    halted, new Strategies may not be added, and each Strategy exits with the\n    minimum possible damage to position, while opening up deposits to be\n    withdrawn by users. There are no restrictions on withdrawals above what is\n    expected under Normal Operation.\n    For further details, please refer to the specification:\n    https://github.com/iearn-finance/yearn-vaults/blob/main/SPECIFICATION.md\n\"\"\"\n\nAPI_VERSION: constant(String[28]) = \"0.4.5\"\n\nfrom vyper.interfaces import ERC20\n\nimplements: ERC20\n\n\ninterface DetailedERC20:\n    def name() -> String[42]: view\n    def symbol() -> String[20]: view\n    def decimals() -> uint256: view\n\n\ninterface Strategy:\n    def want() -> address: view\n    def vault() -> address: view\n    def isActive() -> bool: view\n    def delegatedAssets() -> uint256: view\n    def estimatedTotalAssets() -> uint256: view\n    def withdraw(_amount: uint256) -> uint256: nonpayable\n    def migrate(_newStrategy: address): nonpayable\n    def emergencyExit() -> bool: view\n\nname: public(String[64])\nsymbol: public(String[32])\ndecimals: public(uint256)\n\nbalanceOf: public(HashMap[address, uint256])\nallowance: public(HashMap[address, HashMap[address, uint256]])\ntotalSupply: public(uint256)\n\ntoken: public(ERC20)\ngovernance: public(address)\nmanagement: public(address)\nguardian: public(address)\npendingGovernance: address\n\nstruct StrategyParams:\n    performanceFee: uint256  # Strategist's fee (basis points)\n    activation: uint256  # Activation block.timestamp\n    debtRatio: uint256  # Maximum borrow amount (in BPS of total assets)\n    minDebtPerHarvest: uint256  # Lower limit on the increase of debt since last harvest\n    maxDebtPerHarvest: uint256  # Upper limit on the increase of debt since last harvest\n    lastReport: uint256  # block.timestamp of the last time a report occured\n    totalDebt: uint256  # Total outstanding debt that Strategy has\n    totalGain: uint256  # Total returns that Strategy has realized for Vault\n    totalLoss: uint256  # Total losses that Strategy has realized for Vault\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    value: uint256\n\n\nevent Approval:\n    owner: indexed(address)\n    spender: indexed(address)\n    value: uint256\n\nevent Deposit:\n    recipient: indexed(address)\n    shares: uint256\n    amount: uint256\n\nevent Withdraw:\n    recipient: indexed(address)\n    shares: uint256\n    amount: uint256\n\nevent Sweep:\n    token: indexed(address)\n    amount: uint256\n\nevent LockedProfitDegradationUpdated:\n    value: uint256\n\nevent StrategyAdded:\n    strategy: indexed(address)\n    debtRatio: uint256  # Maximum borrow amount (in BPS of total assets)\n    minDebtPerHarvest: uint256  # Lower limit on the increase of debt since last harvest\n    maxDebtPerHarvest: uint256  # Upper limit on the increase of debt since last harvest\n    performanceFee: uint256  # Strategist's fee (basis points)\n\n\nevent StrategyReported:\n    strategy: indexed(address)\n    gain: uint256\n    loss: uint256\n    debtPaid: uint256\n    totalGain: uint256\n    totalLoss: uint256\n    totalDebt: uint256\n    debtAdded: uint256\n    debtRatio: uint256\n\nevent FeeReport:\n    management_fee: uint256\n    performance_fee: uint256\n    strategist_fee: uint256\n    duration: uint256\n\nevent WithdrawFromStrategy:\n    strategy: indexed(address)\n    totalDebt: uint256\n    loss: uint256\n\nevent UpdateGovernance:\n    governance: address # New active governance\n\n\nevent UpdateManagement:\n    management: address # New active manager\n\nevent UpdateRewards:\n    rewards: address # New active rewards recipient\n\n\nevent UpdateDepositLimit:\n    depositLimit: uint256 # New active deposit limit\n\n\nevent UpdatePerformanceFee:\n    performanceFee: uint256 # New active performance fee\n\n\nevent UpdateManagementFee:\n    managementFee: uint256 # New active management fee\n\n\nevent UpdateGuardian:\n    guardian: address # Address of the active guardian\n\n\nevent EmergencyShutdown:\n    active: bool # New emergency shutdown state (if false, normal operation enabled)\n\n\nevent UpdateWithdrawalQueue:\n    queue: address[MAXIMUM_STRATEGIES] # New active withdrawal queue\n\n\nevent StrategyUpdateDebtRatio:\n    strategy: indexed(address) # Address of the strategy for the debt ratio adjustment\n    debtRatio: uint256 # The new debt limit for the strategy (in BPS of total assets)\n\n\nevent StrategyUpdateMinDebtPerHarvest:\n    strategy: indexed(address) # Address of the strategy for the rate limit adjustment\n    minDebtPerHarvest: uint256  # Lower limit on the increase of debt since last harvest\n\n\nevent StrategyUpdateMaxDebtPerHarvest:\n    strategy: indexed(address) # Address of the strategy for the rate limit adjustment\n    maxDebtPerHarvest: uint256  # Upper limit on the increase of debt since last harvest\n\n\nevent StrategyUpdatePerformanceFee:\n    strategy: indexed(address) # Address of the strategy for the performance fee adjustment\n    performanceFee: uint256 # The new performance fee for the strategy\n\n\nevent StrategyMigrated:\n    oldVersion: indexed(address) # Old version of the strategy to be migrated\n    newVersion: indexed(address) # New version of the strategy\n\n\nevent StrategyRevoked:\n    strategy: indexed(address) # Address of the strategy that is revoked\n\n\nevent StrategyRemovedFromQueue:\n    strategy: indexed(address) # Address of the strategy that is removed from the withdrawal queue\n\n\nevent StrategyAddedToQueue:\n    strategy: indexed(address) # Address of the strategy that is added to the withdrawal queue\n\nevent NewPendingGovernance:\n    pendingGovernance: indexed(address)\n\n# NOTE: Track the total for overhead targeting purposes\nstrategies: public(HashMap[address, StrategyParams])\nMAXIMUM_STRATEGIES: constant(uint256) = 20\nDEGRADATION_COEFFICIENT: constant(uint256) = 10 ** 18\n\n# Ordering that `withdraw` uses to determine which strategies to pull funds from\n# NOTE: Does *NOT* have to match the ordering of all the current strategies that\n#       exist, but it is recommended that it does or else withdrawal depth is\n#       limited to only those inside the queue.\n# NOTE: Ordering is determined by governance, and should be balanced according\n#       to risk, slippage, and/or volatility. Can also be ordered to increase the\n#       withdrawal speed of a particular Strategy.\n# NOTE: The first time a ZERO_ADDRESS is encountered, it stops withdrawing\nwithdrawalQueue: public(address[MAXIMUM_STRATEGIES])\n\nemergencyShutdown: public(bool)\n\ndepositLimit: public(uint256)  # Limit for totalAssets the Vault can hold\ndebtRatio: public(uint256)  # Debt ratio for the Vault across all strategies (in BPS, <= 10k)\ntotalIdle: public(uint256)  # Amount of tokens that are in the vault\ntotalDebt: public(uint256)  # Amount of tokens that all strategies have borrowed\nlastReport: public(uint256)  # block.timestamp of last report\nactivation: public(uint256)  # block.timestamp of contract deployment\nlockedProfit: public(uint256) # how much profit is locked and cant be withdrawn\nlockedProfitDegradation: public(uint256) # rate per block of degradation. DEGRADATION_COEFFICIENT is 100% per block\nrewards: public(address)  # Rewards contract where Governance fees are sent to\n# Governance Fee for management of Vault (given to `rewards`)\nmanagementFee: public(uint256)\n# Governance Fee for performance of Vault (given to `rewards`)\nperformanceFee: public(uint256)\nMAX_BPS: constant(uint256) = 10_000  # 100%, or 10k basis points\n# NOTE: A four-century period will be missing 3 of its 100 Julian leap years, leaving 97.\n#       So the average year has 365 + 97/400 = 365.2425 days\n#       ERROR(Julian): -0.0078\n#       ERROR(Gregorian): -0.0003\n#       A day = 24 * 60 * 60 sec = 86400 sec\n#       365.2425 * 86400 = 31556952.0\nSECS_PER_YEAR: constant(uint256) = 31_556_952  # 365.2425 days\n# `nonces` track `permit` approvals with signature.\nnonces: public(HashMap[address, uint256])\nDOMAIN_TYPE_HASH: constant(bytes32) = keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)')\nPERMIT_TYPE_HASH: constant(bytes32) = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")\n\n\n@external\ndef initialize(\n    token: address,\n    governance: address,\n    rewards: address,\n    nameOverride: String[64],\n    symbolOverride: String[32],\n    guardian: address = msg.sender,\n    management: address =  msg.sender,\n):\n    \"\"\"\n    @notice\n        Initializes the Vault, this is called only once, when the contract is\n        deployed.\n        The performance fee is set to 10% of yield, per Strategy.\n        The management fee is set to 2%, per year.\n        The initial deposit limit is set to 0 (deposits disabled); it must be\n        updated after initialization.\n    @dev\n        If `nameOverride` is not specified, the name will be 'yearn'\n        combined with the name of `token`.\n        If `symbolOverride` is not specified, the symbol will be 'yv'\n        combined with the symbol of `token`.\n        The token used by the vault should not change balances outside transfers and \n        it must transfer the exact amount requested. Fee on transfer and rebasing are not supported.\n    @param token The token that may be deposited into this Vault.\n    @param governance The address authorized for governance interactions.\n    @param rewards The address to distribute rewards to.\n    @param management The address of the vault manager.\n    @param nameOverride Specify a custom Vault name. Leave empty for default choice.\n    @param symbolOverride Specify a custom Vault symbol name. Leave empty for default choice.\n    @param guardian The address authorized for guardian interactions. Defaults to caller.\n    \"\"\"\n    assert self.activation == 0  # dev: no devops199\n    self.token = ERC20(token)\n    if nameOverride == \"\":\n        self.name = concat(DetailedERC20(token).symbol(), \" yVault\")\n    else:\n        self.name = nameOverride\n    if symbolOverride == \"\":\n        self.symbol = concat(\"yv\", DetailedERC20(token).symbol())\n    else:\n        self.symbol = symbolOverride\n    decimals: uint256 = DetailedERC20(token).decimals()\n    self.decimals = decimals\n    assert decimals < 256 # dev: see VVE-2020-0001\n\n    self.governance = governance\n    log UpdateGovernance(governance)\n    self.management = management\n    log UpdateManagement(management)\n    self.rewards = rewards\n    log UpdateRewards(rewards)\n    self.guardian = guardian\n    log UpdateGuardian(guardian)\n    self.performanceFee = 1000  # 10% of yield (per Strategy)\n    log UpdatePerformanceFee(convert(1000, uint256))\n    self.managementFee = 200  # 2% per year\n    log UpdateManagementFee(convert(200, uint256))\n    self.lastReport = block.timestamp\n    self.activation = block.timestamp\n    self.lockedProfitDegradation = convert(DEGRADATION_COEFFICIENT * 46 / 10 ** 6 , uint256) # 6 hours in blocks\n    # EIP-712\n\n\n@pure\n@external\ndef apiVersion() -> String[28]:\n    \"\"\"\n    @notice\n        Used to track the deployed version of this contract. In practice you\n        can use this version number to compare with Yearn's GitHub and\n        determine which version of the source matches this deployed contract.\n    @dev\n        All strategies must have an `apiVersion()` that matches the Vault's\n        `API_VERSION`.\n    @return API_VERSION which holds the current version of this contract.\n    \"\"\"\n    return API_VERSION\n\n@view\n@internal\ndef domain_separator() -> bytes32:\n    return keccak256(\n        concat(\n            DOMAIN_TYPE_HASH,\n            keccak256(convert(\"Yearn Vault\", Bytes[11])),\n            keccak256(convert(API_VERSION, Bytes[28])),\n            convert(chain.id, bytes32),\n            convert(self, bytes32)\n        )\n    )\n\n@view\n@external\ndef DOMAIN_SEPARATOR() -> bytes32:\n    return self.domain_separator()\n\n@external\ndef setName(name: String[42]):\n    \"\"\"\n    @notice\n        Used to change the value of `name`.\n        This may only be called by governance.\n    @param name The new name to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    self.name = name\n\n\n@external\ndef setSymbol(symbol: String[20]):\n    \"\"\"\n    @notice\n        Used to change the value of `symbol`.\n        This may only be called by governance.\n    @param symbol The new symbol to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    self.symbol = symbol\n\n\n# 2-phase commit for a change in governance\n@external\ndef setGovernance(governance: address):\n    \"\"\"\n    @notice\n        Nominate a new address to use as governance.\n        The change does not go into effect immediately. This function sets a\n        pending change, and the governance address is not updated until\n        the proposed governance address has accepted the responsibility.\n        This may only be called by the current governance address.\n    @param governance The address requested to take over Vault governance.\n    \"\"\"\n    assert msg.sender == self.governance\n    log NewPendingGovernance(governance)\n    self.pendingGovernance = governance\n\n\n@external\ndef acceptGovernance():\n    \"\"\"\n    @notice\n        Once a new governance address has been proposed using setGovernance(),\n        this function may be called by the proposed address to accept the\n        responsibility of taking over governance for this contract.\n        This may only be called by the proposed governance address.\n    @dev\n        setGovernance() should be called by the existing governance address,\n        prior to calling this function.\n    \"\"\"\n    assert msg.sender == self.pendingGovernance\n    self.governance = msg.sender\n    log UpdateGovernance(msg.sender)\n\n\n@external\ndef setManagement(management: address):\n    \"\"\"\n    @notice\n        Changes the management address.\n        Management is able to make some investment decisions adjusting parameters.\n        This may only be called by governance.\n    @param management The address to use for managing.\n    \"\"\"\n    assert msg.sender == self.governance\n    self.management = management\n    log UpdateManagement(management)\n\n\n@external\ndef setRewards(rewards: address):\n    \"\"\"\n    @notice\n        Changes the rewards address. Any distributed rewards\n        will cease flowing to the old address and begin flowing\n        to this address once the change is in effect.\n        This will not change any Strategy reports in progress, only\n        new reports made after this change goes into effect.\n        This may only be called by governance.\n    @param rewards The address to use for collecting rewards.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert not (rewards in [self, ZERO_ADDRESS])\n    self.rewards = rewards\n    log UpdateRewards(rewards)\n\n\n@external\ndef setLockedProfitDegradation(degradation: uint256):\n    \"\"\"\n    @notice\n        Changes the locked profit degradation.\n    @param degradation The rate of degradation in percent per second scaled to 1e18.\n    \"\"\"\n    assert msg.sender == self.governance\n    # Since \"degradation\" is of type uint256 it can never be less than zero\n    assert degradation <= DEGRADATION_COEFFICIENT\n    self.lockedProfitDegradation = degradation\n    log LockedProfitDegradationUpdated(degradation) \n\n\n@external\ndef setDepositLimit(limit: uint256):\n    \"\"\"\n    @notice\n        Changes the maximum amount of tokens that can be deposited in this Vault.\n        Note, this is not how much may be deposited by a single depositor,\n        but the maximum amount that may be deposited across all depositors.\n        This may only be called by governance.\n    @param limit The new deposit limit to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    self.depositLimit = limit\n    log UpdateDepositLimit(limit)\n\n\n@external\ndef setPerformanceFee(fee: uint256):\n    \"\"\"\n    @notice\n        Used to change the value of `performanceFee`.\n        Should set this value below the maximum strategist performance fee.\n        This may only be called by governance.\n    @param fee The new performance fee to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert fee <= MAX_BPS / 2\n    self.performanceFee = fee\n    log UpdatePerformanceFee(fee)\n\n\n@external\ndef setManagementFee(fee: uint256):\n    \"\"\"\n    @notice\n        Used to change the value of `managementFee`.\n        This may only be called by governance.\n    @param fee The new management fee to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert fee <= MAX_BPS\n    self.managementFee = fee\n    log UpdateManagementFee(fee)\n\n\n@external\ndef setGuardian(guardian: address):\n    \"\"\"\n    @notice\n        Used to change the address of `guardian`.\n        This may only be called by governance or the existing guardian.\n    @param guardian The new guardian address to use.\n    \"\"\"\n    assert msg.sender in [self.guardian, self.governance]\n    self.guardian = guardian\n    log UpdateGuardian(guardian)\n\n\n@external\ndef setEmergencyShutdown(active: bool):\n    \"\"\"\n    @notice\n        Activates or deactivates Vault mode where all Strategies go into full\n        withdrawal.\n        During Emergency Shutdown:\n        1. No Users may deposit into the Vault (but may withdraw as usual.)\n        2. Governance may not add new Strategies.\n        3. Each Strategy must pay back their debt as quickly as reasonable to\n            minimally affect their position.\n        4. Only Governance may undo Emergency Shutdown.\n        See contract level note for further details.\n        This may only be called by governance or the guardian.\n    @param active\n        If true, the Vault goes into Emergency Shutdown. If false, the Vault\n        goes back into Normal Operation.\n    \"\"\"\n    if active:\n        assert msg.sender in [self.guardian, self.governance]\n    else:\n        assert msg.sender == self.governance\n    self.emergencyShutdown = active\n    log EmergencyShutdown(active)\n\n\n@external\ndef setWithdrawalQueue(queue: address[MAXIMUM_STRATEGIES]):\n    \"\"\"\n    @notice\n        Updates the withdrawalQueue to match the addresses and order specified\n        by `queue`.\n        There can be fewer strategies than the maximum, as well as fewer than\n        the total number of strategies active in the vault. `withdrawalQueue`\n        will be updated in a gas-efficient manner, assuming the input is well-\n        ordered with 0x0 only at the end.\n        This may only be called by governance or management.\n    @dev\n        This is order sensitive, specify the addresses in the order in which\n        funds should be withdrawn (so `queue`[0] is the first Strategy withdrawn\n        from, `queue`[1] is the second, etc.)\n        This means that the least impactful Strategy (the Strategy that will have\n        its core positions impacted the least by having funds removed) should be\n        at `queue`[0], then the next least impactful at `queue`[1], and so on.\n    @param queue\n        The array of addresses to use as the new withdrawal queue. This is\n        order sensitive.\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n\n    # HACK: Temporary until Vyper adds support for Dynamic arrays\n    old_queue: address[MAXIMUM_STRATEGIES] = empty(address[MAXIMUM_STRATEGIES])\n    for i in range(MAXIMUM_STRATEGIES):\n        old_queue[i] = self.withdrawalQueue[i] \n        if queue[i] == ZERO_ADDRESS:\n            # NOTE: Cannot use this method to remove entries from the queue\n            assert old_queue[i] == ZERO_ADDRESS\n            break\n        # NOTE: Cannot use this method to add more entries to the queue\n        assert old_queue[i] != ZERO_ADDRESS\n\n        assert self.strategies[queue[i]].activation > 0\n\n        existsInOldQueue: bool = False\n        for j in range(MAXIMUM_STRATEGIES):\n            if queue[j] == ZERO_ADDRESS:\n                existsInOldQueue = True\n                break\n            if queue[i] == old_queue[j]:\n                # NOTE: Ensure that every entry in queue prior to reordering exists now\n                existsInOldQueue = True\n\n            if j <= i:\n                # NOTE: This will only check for duplicate entries in queue after `i`\n                continue\n            assert queue[i] != queue[j]  # dev: do not add duplicate strategies\n\n        assert existsInOldQueue # dev: do not add new strategies\n\n        self.withdrawalQueue[i] = queue[i]\n    log UpdateWithdrawalQueue(queue)\n\n\n@internal\ndef erc20_safe_transfer(token: address, receiver: address, amount: uint256):\n    # Used only to send tokens that are not the type managed by this Vault.\n    # HACK: Used to handle non-compliant tokens like USDT\n    response: Bytes[32] = raw_call(\n        token,\n        concat(\n            method_id(\"transfer(address,uint256)\"),\n            convert(receiver, bytes32),\n            convert(amount, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response) > 0:\n        assert convert(response, bool), \"Transfer failed!\"\n\n\n@internal\ndef erc20_safe_transferFrom(token: address, sender: address, receiver: address, amount: uint256):\n    # Used only to send tokens that are not the type managed by this Vault.\n    # HACK: Used to handle non-compliant tokens like USDT\n    response: Bytes[32] = raw_call(\n        token,\n        concat(\n            method_id(\"transferFrom(address,address,uint256)\"),\n            convert(sender, bytes32),\n            convert(receiver, bytes32),\n            convert(amount, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response) > 0:\n        assert convert(response, bool), \"Transfer failed!\"\n\n\n@internal\ndef _transfer(sender: address, receiver: address, amount: uint256):\n    # See note on `transfer()`.\n\n    # Protect people from accidentally sending their shares to bad places\n    assert receiver not in [self, ZERO_ADDRESS]\n    self.balanceOf[sender] -= amount\n    self.balanceOf[receiver] += amount\n    log Transfer(sender, receiver, amount)\n\n\n@external\ndef transfer(receiver: address, amount: uint256) -> bool:\n    \"\"\"\n    @notice\n        Transfers shares from the caller's address to `receiver`. This function\n        will always return true, unless the user is attempting to transfer\n        shares to this contract's address, or to 0x0.\n    @param receiver\n        The address shares are being transferred to. Must not be this contract's\n        address, must not be 0x0.\n    @param amount The quantity of shares to transfer.\n    @return\n        True if transfer is sent to an address other than this contract's or\n        0x0, otherwise the transaction will fail.\n    \"\"\"\n    self._transfer(msg.sender, receiver, amount)\n    return True\n\n\n@external\ndef transferFrom(sender: address, receiver: address, amount: uint256) -> bool:\n    \"\"\"\n    @notice\n        Transfers `amount` shares from `sender` to `receiver`. This operation will\n        always return true, unless the user is attempting to transfer shares\n        to this contract's address, or to 0x0.\n        Unless the caller has given this contract unlimited approval,\n        transfering shares will decrement the caller's `allowance` by `amount`.\n    @param sender The address shares are being transferred from.\n    @param receiver\n        The address shares are being transferred to. Must not be this contract's\n        address, must not be 0x0.\n    @param amount The quantity of shares to transfer.\n    @return\n        True if transfer is sent to an address other than this contract's or\n        0x0, otherwise the transaction will fail.\n    \"\"\"\n    # Unlimited approval (saves an SSTORE)\n    if (self.allowance[sender][msg.sender] < MAX_UINT256):\n        allowance: uint256 = self.allowance[sender][msg.sender] - amount\n        self.allowance[sender][msg.sender] = allowance\n        # NOTE: Allows log filters to have a full accounting of allowance changes\n        log Approval(sender, msg.sender, allowance)\n    self._transfer(sender, receiver, amount)\n    return True\n\n\n@external\ndef approve(spender: address, amount: uint256) -> bool:\n    \"\"\"\n    @dev Approve the passed address to spend the specified amount of tokens on behalf of\n         `msg.sender`. Beware that changing an allowance with this method brings the risk\n         that someone may use both the old and the new allowance by unfortunate transaction\n         ordering. See https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param spender The address which will spend the funds.\n    @param amount The amount of tokens to be spent.\n    \"\"\"\n    self.allowance[msg.sender][spender] = amount\n    log Approval(msg.sender, spender, amount)\n    return True\n\n\n@external\ndef increaseAllowance(spender: address, amount: uint256) -> bool:\n    \"\"\"\n    @dev Increase the allowance of the passed address to spend the total amount of tokens\n         on behalf of msg.sender. This method mitigates the risk that someone may use both\n         the old and the new allowance by unfortunate transaction ordering.\n         See https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param spender The address which will spend the funds.\n    @param amount The amount of tokens to increase the allowance by.\n    \"\"\"\n    self.allowance[msg.sender][spender] += amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@external\ndef decreaseAllowance(spender: address, amount: uint256) -> bool:\n    \"\"\"\n    @dev Decrease the allowance of the passed address to spend the total amount of tokens\n         on behalf of msg.sender. This method mitigates the risk that someone may use both\n         the old and the new allowance by unfortunate transaction ordering.\n         See https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param spender The address which will spend the funds.\n    @param amount The amount of tokens to decrease the allowance by.\n    \"\"\"\n    self.allowance[msg.sender][spender] -= amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@external\ndef permit(owner: address, spender: address, amount: uint256, expiry: uint256, signature: Bytes[65]) -> bool:\n    \"\"\"\n    @notice\n        Approves spender by owner's signature to expend owner's tokens.\n        See https://eips.ethereum.org/EIPS/eip-2612.\n    @param owner The address which is a source of funds and has signed the Permit.\n    @param spender The address which is allowed to spend the funds.\n    @param amount The amount of tokens to be spent.\n    @param expiry The timestamp after which the Permit is no longer valid.\n    @param signature A valid secp256k1 signature of Permit by owner encoded as r, s, v.\n    @return True, if transaction completes successfully\n    \"\"\"\n    assert owner != ZERO_ADDRESS  # dev: invalid owner\n    assert expiry >= block.timestamp  # dev: permit expired\n    nonce: uint256 = self.nonces[owner]\n    digest: bytes32 = keccak256(\n        concat(\n            b'\\x19\\x01',\n            self.domain_separator(),\n            keccak256(\n                concat(\n                    PERMIT_TYPE_HASH,\n                    convert(owner, bytes32),\n                    convert(spender, bytes32),\n                    convert(amount, bytes32),\n                    convert(nonce, bytes32),\n                    convert(expiry, bytes32),\n                )\n            )\n        )\n    )\n    # NOTE: signature is packed as r, s, v\n    r: uint256 = convert(slice(signature, 0, 32), uint256)\n    s: uint256 = convert(slice(signature, 32, 32), uint256)\n    v: uint256 = convert(slice(signature, 64, 1), uint256)\n    assert ecrecover(digest, v, r, s) == owner  # dev: invalid signature\n    self.allowance[owner][spender] = amount\n    self.nonces[owner] = nonce + 1\n    log Approval(owner, spender, amount)\n    return True\n\n\n@view\n@internal\ndef _totalAssets() -> uint256:\n    # See note on `totalAssets()`.\n    return self.totalIdle + self.totalDebt\n\n\n@view\n@external\ndef totalAssets() -> uint256:\n    \"\"\"\n    @notice\n        Returns the total quantity of all assets under control of this\n        Vault, whether they're loaned out to a Strategy, or currently held in\n        the Vault.\n    @return The total assets under control of this Vault.\n    \"\"\"\n    return self._totalAssets()\n\n\n@view\n@internal\ndef _calculateLockedProfit() -> uint256:\n    lockedFundsRatio: uint256 = (block.timestamp - self.lastReport) * self.lockedProfitDegradation\n\n    if(lockedFundsRatio < DEGRADATION_COEFFICIENT):\n        lockedProfit: uint256 = self.lockedProfit\n        return lockedProfit - (\n                lockedFundsRatio\n                * lockedProfit\n                / DEGRADATION_COEFFICIENT\n            )\n    else:        \n        return 0\n\n@view\n@internal\ndef _freeFunds() -> uint256:\n    return self._totalAssets() - self._calculateLockedProfit()\n\n@internal\ndef _issueSharesForAmount(to: address, amount: uint256) -> uint256:\n    # Issues `amount` Vault shares to `to`.\n    # Shares must be issued prior to taking on new collateral, or\n    # calculation will be wrong. This means that only *trusted* tokens\n    # (with no capability for exploitative behavior) can be used.\n    shares: uint256 = 0\n    # HACK: Saves 2 SLOADs (~200 gas, post-Berlin)\n    totalSupply: uint256 = self.totalSupply\n    if totalSupply > 0:\n        # Mint amount of shares based on what the Vault is managing overall\n        # NOTE: if sqrt(token.totalSupply()) > 1e39, this could potentially revert\n        shares =  amount * totalSupply / self._freeFunds()  # dev: no free funds\n    else:\n        # No existing shares, so mint 1:1\n        shares = amount\n    assert shares != 0 # dev: division rounding resulted in zero\n\n    # Mint new shares\n    self.totalSupply = totalSupply + shares\n    self.balanceOf[to] += shares\n    log Transfer(ZERO_ADDRESS, to, shares)\n\n    return shares\n\n\n@external\n@nonreentrant(\"withdraw\")\ndef deposit(_amount: uint256 = MAX_UINT256, recipient: address = msg.sender) -> uint256:\n    \"\"\"\n    @notice\n        Deposits `_amount` `token`, issuing shares to `recipient`. If the\n        Vault is in Emergency Shutdown, deposits will not be accepted and this\n        call will fail.\n    @dev\n        Measuring quantity of shares to issues is based on the total\n        outstanding debt that this contract has (\"expected value\") instead\n        of the total balance sheet it has (\"estimated value\") has important\n        security considerations, and is done intentionally. If this value were\n        measured against external systems, it could be purposely manipulated by\n        an attacker to withdraw more assets than they otherwise should be able\n        to claim by redeeming their shares.\n        On deposit, this means that shares are issued against the total amount\n        that the deposited capital can be given in service of the debt that\n        Strategies assume. If that number were to be lower than the \"expected\n        value\" at some future point, depositing shares via this method could\n        entitle the depositor to *less* than the deposited value once the\n        \"realized value\" is updated from further reports by the Strategies\n        to the Vaults.\n        Care should be taken by integrators to account for this discrepancy,\n        by using the view-only methods of this contract (both off-chain and\n        on-chain) to determine if depositing into the Vault is a \"good idea\".\n    @param _amount The quantity of tokens to deposit, defaults to all.\n    @param recipient\n        The address to issue the shares in this Vault to. Defaults to the\n        caller's address.\n    @return The issued Vault shares.\n    \"\"\"\n    assert not self.emergencyShutdown  # Deposits are locked out\n    assert recipient not in [self, ZERO_ADDRESS]\n\n    amount: uint256 = _amount\n\n    # If _amount not specified, transfer the full token balance,\n    # up to deposit limit\n    if amount == MAX_UINT256:\n        amount = min(\n            self.depositLimit - self._totalAssets(),\n            self.token.balanceOf(msg.sender),\n        )\n    else:\n        # Ensure deposit limit is respected\n        assert self._totalAssets() + amount <= self.depositLimit\n\n    # Ensure we are depositing something\n    assert amount > 0\n\n    # Issue new shares (needs to be done before taking deposit to be accurate)\n    # Shares are issued to recipient (may be different from msg.sender)\n    # See @dev note, above.\n    shares: uint256 = self._issueSharesForAmount(recipient, amount)\n\n    # Tokens are transferred from msg.sender (may be different from _recipient)\n    self.erc20_safe_transferFrom(self.token.address, msg.sender, self, amount)\n    self.totalIdle += amount\n\n    log Deposit(recipient, shares, amount)\n\n    return shares  # Just in case someone wants them\n\n\n@view\n@internal\ndef _shareValue(shares: uint256) -> uint256:\n    # Returns price = 1:1 if vault is empty\n    if self.totalSupply == 0:\n        return shares\n\n    # Determines the current value of `shares`.\n    # NOTE: if sqrt(Vault.totalAssets()) >>> 1e39, this could potentially revert\n\n    return (\n        shares\n        * self._freeFunds()\n        / self.totalSupply\n    )\n\n\n@view\n@internal\ndef _sharesForAmount(amount: uint256) -> uint256:\n    # Determines how many shares `amount` of token would receive.\n    # See dev note on `deposit`.\n    _freeFunds: uint256 = self._freeFunds()\n    if _freeFunds > 0:\n        # NOTE: if sqrt(token.totalSupply()) > 1e37, this could potentially revert\n        return  (\n            amount\n            * self.totalSupply\n            / _freeFunds \n        )\n    else:\n        return 0\n\n\n@view\n@external\ndef maxAvailableShares() -> uint256:\n    \"\"\"\n    @notice\n        Determines the maximum quantity of shares this Vault can facilitate a\n        withdrawal for, factoring in assets currently residing in the Vault,\n        as well as those deployed to strategies on the Vault's balance sheet.\n    @dev\n        Regarding how shares are calculated, see dev note on `deposit`.\n        If you want to calculated the maximum a user could withdraw up to,\n        you want to use this function.\n        Note that the amount provided by this function is the theoretical\n        maximum possible from withdrawing, the real amount depends on the\n        realized losses incurred during withdrawal.\n    @return The total quantity of shares this Vault can provide.\n    \"\"\"\n    shares: uint256 = self._sharesForAmount(self.totalIdle)\n\n    for strategy in self.withdrawalQueue:\n        if strategy == ZERO_ADDRESS:\n            break\n        shares += self._sharesForAmount(self.strategies[strategy].totalDebt)\n\n    return shares\n\n\n@internal\ndef _reportLoss(strategy: address, loss: uint256):\n    # Loss can only be up the amount of debt issued to strategy\n    totalDebt: uint256 = self.strategies[strategy].totalDebt\n    assert totalDebt >= loss\n\n    # Also, make sure we reduce our trust with the strategy by the amount of loss\n    if self.debtRatio != 0: # if vault with single strategy that is set to EmergencyOne\n        # NOTE: The context to this calculation is different than the calculation in `_reportLoss`,\n        # this calculation intentionally approximates via `totalDebt` to avoid manipulatable results\n        ratio_change: uint256 = min(\n            # NOTE: This calculation isn't 100% precise, the adjustment is ~10%-20% more severe due to EVM math\n            loss * self.debtRatio / self.totalDebt,\n            self.strategies[strategy].debtRatio,\n        )\n        self.strategies[strategy].debtRatio -= ratio_change\n        self.debtRatio -= ratio_change\n    # Finally, adjust our strategy's parameters by the loss\n    self.strategies[strategy].totalLoss += loss\n    self.strategies[strategy].totalDebt = totalDebt - loss\n    self.totalDebt -= loss\n\n\n@external\n@nonreentrant(\"withdraw\")\ndef withdraw(\n    maxShares: uint256 = MAX_UINT256,\n    recipient: address = msg.sender,\n    maxLoss: uint256 = 1,  # 0.01% [BPS]\n) -> uint256:\n    \"\"\"\n    @notice\n        Withdraws the calling account's tokens from this Vault, redeeming\n        amount `_shares` for an appropriate amount of tokens.\n        See note on `setWithdrawalQueue` for further details of withdrawal\n        ordering and behavior.\n    @dev\n        Measuring the value of shares is based on the total outstanding debt\n        that this contract has (\"expected value\") instead of the total balance\n        sheet it has (\"estimated value\") has important security considerations,\n        and is done intentionally. If this value were measured against external\n        systems, it could be purposely manipulated by an attacker to withdraw\n        more assets than they otherwise should be able to claim by redeeming\n        their shares.\n        On withdrawal, this means that shares are redeemed against the total\n        amount that the deposited capital had \"realized\" since the point it\n        was deposited, up until the point it was withdrawn. If that number\n        were to be higher than the \"expected value\" at some future point,\n        withdrawing shares via this method could entitle the depositor to\n        *more* than the expected value once the \"realized value\" is updated\n        from further reports by the Strategies to the Vaults.\n        Under exceptional scenarios, this could cause earlier withdrawals to\n        earn \"more\" of the underlying assets than Users might otherwise be\n        entitled to, if the Vault's estimated value were otherwise measured\n        through external means, accounting for whatever exceptional scenarios\n        exist for the Vault (that aren't covered by the Vault's own design.)\n        In the situation where a large withdrawal happens, it can empty the \n        vault balance and the strategies in the withdrawal queue. \n        Strategies not in the withdrawal queue will have to be harvested to \n        rebalance the funds and make the funds available again to withdraw.\n    @param maxShares\n        How many shares to try and redeem for tokens, defaults to all.\n    @param recipient\n        The address to issue the shares in this Vault to. Defaults to the\n        caller's address.\n    @param maxLoss\n        The maximum acceptable loss to sustain on withdrawal. Defaults to 0.01%.\n        If a loss is specified, up to that amount of shares may be burnt to cover losses on withdrawal.\n    @return The quantity of tokens redeemed for `_shares`.\n    \"\"\"\n    shares: uint256 = maxShares  # May reduce this number below\n\n    # Max Loss is <=100%, revert otherwise\n    assert maxLoss <= MAX_BPS\n\n    # If _shares not specified, transfer full share balance\n    if shares == MAX_UINT256:\n        shares = self.balanceOf[msg.sender]\n\n    # Limit to only the shares they own\n    assert shares <= self.balanceOf[msg.sender]\n\n    # Ensure we are withdrawing something\n    assert shares > 0\n\n    # See @dev note, above.\n    value: uint256 = self._shareValue(shares)\n    vault_balance: uint256 = self.totalIdle\n\n    if value > vault_balance:\n        totalLoss: uint256 = 0\n        # We need to go get some from our strategies in the withdrawal queue\n        # NOTE: This performs forced withdrawals from each Strategy. During\n        #       forced withdrawal, a Strategy may realize a loss. That loss\n        #       is reported back to the Vault, and the will affect the amount\n        #       of tokens that the withdrawer receives for their shares. They\n        #       can optionally specify the maximum acceptable loss (in BPS)\n        #       to prevent excessive losses on their withdrawals (which may\n        #       happen in certain edge cases where Strategies realize a loss)\n        for strategy in self.withdrawalQueue:\n            if strategy == ZERO_ADDRESS:\n                break  # We've exhausted the queue\n\n            if value <= vault_balance:\n                break  # We're done withdrawing\n\n            amountNeeded: uint256 = value - vault_balance\n\n            # NOTE: Don't withdraw more than the debt so that Strategy can still\n            #       continue to work based on the profits it has\n            # NOTE: This means that user will lose out on any profits that each\n            #       Strategy in the queue would return on next harvest, benefiting others\n            amountNeeded = min(amountNeeded, self.strategies[strategy].totalDebt)\n            if amountNeeded == 0:\n                continue  # Nothing to withdraw from this Strategy, try the next one\n\n            # Force withdraw amount from each Strategy in the order set by governance\n            preBalance: uint256 = self.token.balanceOf(self)\n            loss: uint256 = Strategy(strategy).withdraw(amountNeeded)\n            withdrawn: uint256 = self.token.balanceOf(self) - preBalance\n            vault_balance += withdrawn\n\n            # NOTE: Withdrawer incurs any losses from liquidation\n            if loss > 0:\n                value -= loss\n                totalLoss += loss\n                self._reportLoss(strategy, loss)\n\n            # Reduce the Strategy's debt by the amount withdrawn (\"realized returns\")\n            # NOTE: This doesn't add to returns as it's not earned by \"normal means\"\n            self.strategies[strategy].totalDebt -= withdrawn\n            self.totalDebt -= withdrawn\n            log WithdrawFromStrategy(strategy, self.strategies[strategy].totalDebt, loss)\n\n        self.totalIdle = vault_balance\n        # NOTE: We have withdrawn everything possible out of the withdrawal queue\n        #       but we still don't have enough to fully pay them back, so adjust\n        #       to the total amount we've freed up through forced withdrawals\n        if value > vault_balance:\n            value = vault_balance\n            # NOTE: Burn # of shares that corresponds to what Vault has on-hand,\n            #       including the losses that were incurred above during withdrawals\n            shares = self._sharesForAmount(value + totalLoss)\n\n        # NOTE: This loss protection is put in place to revert if losses from\n        #       withdrawing are more than what is considered acceptable.\n        assert totalLoss <= maxLoss * (value + totalLoss) / MAX_BPS\n\n    # Burn shares (full value of what is being withdrawn)\n    self.totalSupply -= shares\n    self.balanceOf[msg.sender] -= shares\n    log Transfer(msg.sender, ZERO_ADDRESS, shares)\n    \n    self.totalIdle -= value\n    # Withdraw remaining balance to _recipient (may be different to msg.sender) (minus fee)\n    self.erc20_safe_transfer(self.token.address, recipient, value)\n    log Withdraw(recipient, shares, value)\n    \n    return value\n\n\n@view\n@external\ndef pricePerShare() -> uint256:\n    \"\"\"\n    @notice Gives the price for a single Vault share.\n    @dev See dev note on `withdraw`.\n    @return The value of a single share.\n    \"\"\"\n    return self._shareValue(10 ** self.decimals)\n\n\n@internal\ndef _organizeWithdrawalQueue():\n    # Reorganize `withdrawalQueue` based on premise that if there is an\n    # empty value between two actual values, then the empty value should be\n    # replaced by the later value.\n    # NOTE: Relative ordering of non-zero values is maintained.\n    offset: uint256 = 0\n    for idx in range(MAXIMUM_STRATEGIES):\n        strategy: address = self.withdrawalQueue[idx]\n        if strategy == ZERO_ADDRESS:\n            offset += 1  # how many values we need to shift, always `<= idx`\n        elif offset > 0:\n            self.withdrawalQueue[idx - offset] = strategy\n            self.withdrawalQueue[idx] = ZERO_ADDRESS\n\n\n@external\ndef addStrategy(\n    strategy: address,\n    debtRatio: uint256,\n    minDebtPerHarvest: uint256,\n    maxDebtPerHarvest: uint256,\n    performanceFee: uint256,\n):\n    \"\"\"\n    @notice\n        Add a Strategy to the Vault.\n        This may only be called by governance.\n    @dev\n        The Strategy will be appended to `withdrawalQueue`, call\n        `setWithdrawalQueue` to change the order.\n    @param strategy The address of the Strategy to add.\n    @param debtRatio\n        The share of the total assets in the `vault that the `strategy` has access to.\n    @param minDebtPerHarvest\n        Lower limit on the increase of debt since last harvest\n    @param maxDebtPerHarvest\n        Upper limit on the increase of debt since last harvest\n    @param performanceFee\n        The fee the strategist will receive based on this Vault's performance.\n    \"\"\"\n    # Check if queue is full\n    assert self.withdrawalQueue[MAXIMUM_STRATEGIES - 1] == ZERO_ADDRESS\n\n    # Check calling conditions\n    assert not self.emergencyShutdown\n    assert msg.sender == self.governance\n\n    # Check strategy configuration\n    assert strategy != ZERO_ADDRESS\n    assert self.strategies[strategy].activation == 0\n    assert self == Strategy(strategy).vault()\n    assert self.token.address == Strategy(strategy).want()\n\n    # Check strategy parameters\n    assert self.debtRatio + debtRatio <= MAX_BPS\n    assert minDebtPerHarvest <= maxDebtPerHarvest\n    assert performanceFee <= MAX_BPS / 2 \n\n    # Add strategy to approved strategies\n    self.strategies[strategy] = StrategyParams({\n        performanceFee: performanceFee,\n        activation: block.timestamp,\n        debtRatio: debtRatio,\n        minDebtPerHarvest: minDebtPerHarvest,\n        maxDebtPerHarvest: maxDebtPerHarvest,\n        lastReport: block.timestamp,\n        totalDebt: 0,\n        totalGain: 0,\n        totalLoss: 0,\n    })\n    log StrategyAdded(strategy, debtRatio, minDebtPerHarvest, maxDebtPerHarvest, performanceFee)\n\n    # Update Vault parameters\n    self.debtRatio += debtRatio\n\n    # Add strategy to the end of the withdrawal queue\n    self.withdrawalQueue[MAXIMUM_STRATEGIES - 1] = strategy\n    self._organizeWithdrawalQueue()\n\n\n@external\ndef updateStrategyDebtRatio(\n    strategy: address,\n    debtRatio: uint256,\n):\n    \"\"\"\n    @notice\n        Change the quantity of assets `strategy` may manage.\n        This may be called by governance or management.\n    @param strategy The Strategy to update.\n    @param debtRatio The quantity of assets `strategy` may now manage.\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    assert self.strategies[strategy].activation > 0\n    assert Strategy(strategy).emergencyExit() == False # dev: strategy in emergency\n    self.debtRatio -= self.strategies[strategy].debtRatio\n    self.strategies[strategy].debtRatio = debtRatio\n    self.debtRatio += debtRatio\n    assert self.debtRatio <= MAX_BPS\n    log StrategyUpdateDebtRatio(strategy, debtRatio)\n\n\n@external\ndef updateStrategyMinDebtPerHarvest(\n    strategy: address,\n    minDebtPerHarvest: uint256,\n):\n    \"\"\"\n    @notice\n        Change the quantity assets per block this Vault may deposit to or\n        withdraw from `strategy`.\n        This may only be called by governance or management.\n    @param strategy The Strategy to update.\n    @param minDebtPerHarvest\n        Lower limit on the increase of debt since last harvest\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    assert self.strategies[strategy].activation > 0\n    assert self.strategies[strategy].maxDebtPerHarvest >= minDebtPerHarvest\n    self.strategies[strategy].minDebtPerHarvest = minDebtPerHarvest\n    log StrategyUpdateMinDebtPerHarvest(strategy, minDebtPerHarvest)\n\n\n@external\ndef updateStrategyMaxDebtPerHarvest(\n    strategy: address,\n    maxDebtPerHarvest: uint256,\n):\n    \"\"\"\n    @notice\n        Change the quantity assets per block this Vault may deposit to or\n        withdraw from `strategy`.\n        This may only be called by governance or management.\n    @param strategy The Strategy to update.\n    @param maxDebtPerHarvest\n        Upper limit on the increase of debt since last harvest\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    assert self.strategies[strategy].activation > 0\n    assert self.strategies[strategy].minDebtPerHarvest <= maxDebtPerHarvest\n    self.strategies[strategy].maxDebtPerHarvest = maxDebtPerHarvest\n    log StrategyUpdateMaxDebtPerHarvest(strategy, maxDebtPerHarvest)\n\n\n@external\ndef updateStrategyPerformanceFee(\n    strategy: address,\n    performanceFee: uint256,\n):\n    \"\"\"\n    @notice\n        Change the fee the strategist will receive based on this Vault's\n        performance.\n        This may only be called by governance.\n    @param strategy The Strategy to update.\n    @param performanceFee The new fee the strategist will receive.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert performanceFee <= MAX_BPS / 2\n    assert self.strategies[strategy].activation > 0\n    self.strategies[strategy].performanceFee = performanceFee\n    log StrategyUpdatePerformanceFee(strategy, performanceFee)\n\n\n@internal\ndef _revokeStrategy(strategy: address):\n    self.debtRatio -= self.strategies[strategy].debtRatio\n    self.strategies[strategy].debtRatio = 0\n    log StrategyRevoked(strategy)\n\n\n@external\ndef migrateStrategy(oldVersion: address, newVersion: address):\n    \"\"\"\n    @notice\n        Migrates a Strategy, including all assets from `oldVersion` to\n        `newVersion`.\n        This may only be called by governance.\n    @dev\n        Strategy must successfully migrate all capital and positions to new\n        Strategy, or else this will upset the balance of the Vault.\n        The new Strategy should be \"empty\" e.g. have no prior commitments to\n        this Vault, otherwise it could have issues.\n    @param oldVersion The existing Strategy to migrate from.\n    @param newVersion The new Strategy to migrate to.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert newVersion != ZERO_ADDRESS\n    assert self.strategies[oldVersion].activation > 0\n    assert self.strategies[newVersion].activation == 0\n\n    strategy: StrategyParams = self.strategies[oldVersion]\n\n    self._revokeStrategy(oldVersion)\n    # _revokeStrategy will lower the debtRatio\n    self.debtRatio += strategy.debtRatio\n    # Debt is migrated to new strategy\n    self.strategies[oldVersion].totalDebt = 0\n\n    self.strategies[newVersion] = StrategyParams({\n        performanceFee: strategy.performanceFee,\n        # NOTE: use last report for activation time, so E[R] calc works\n        activation: strategy.lastReport,\n        debtRatio: strategy.debtRatio,\n        minDebtPerHarvest: strategy.minDebtPerHarvest,\n        maxDebtPerHarvest: strategy.maxDebtPerHarvest,\n        lastReport: strategy.lastReport,\n        totalDebt: strategy.totalDebt,\n        totalGain: 0,\n        totalLoss: 0,\n    })\n\n    Strategy(oldVersion).migrate(newVersion)\n    log StrategyMigrated(oldVersion, newVersion)\n\n    for idx in range(MAXIMUM_STRATEGIES):\n        if self.withdrawalQueue[idx] == oldVersion:\n            self.withdrawalQueue[idx] = newVersion\n            return  # Don't need to reorder anything because we swapped\n\n\n@external\ndef revokeStrategy(strategy: address = msg.sender):\n    \"\"\"\n    @notice\n        Revoke a Strategy, setting its debt limit to 0 and preventing any\n        future deposits.\n        This function should only be used in the scenario where the Strategy is\n        being retired but no migration of the positions are possible, or in the\n        extreme scenario that the Strategy needs to be put into \"Emergency Exit\"\n        mode in order for it to exit as quickly as possible. The latter scenario\n        could be for any reason that is considered \"critical\" that the Strategy\n        exits its position as fast as possible, such as a sudden change in market\n        conditions leading to losses, or an imminent failure in an external\n        dependency.\n        This may only be called by governance, the guardian, or the Strategy\n        itself. Note that a Strategy will only revoke itself during emergency\n        shutdown.\n    @param strategy The Strategy to revoke.\n    \"\"\"\n    assert msg.sender in [strategy, self.governance, self.guardian]\n    assert self.strategies[strategy].debtRatio != 0 # dev: already zero\n\n    self._revokeStrategy(strategy)\n\n\n@external\ndef addStrategyToQueue(strategy: address):\n    \"\"\"\n    @notice\n        Adds `strategy` to `withdrawalQueue`.\n        This may only be called by governance or management.\n    @dev\n        The Strategy will be appended to `withdrawalQueue`, call\n        `setWithdrawalQueue` to change the order.\n    @param strategy The Strategy to add.\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    # Must be a current Strategy\n    assert self.strategies[strategy].activation > 0\n    # Can't already be in the queue\n    last_idx: uint256 = 0\n    for s in self.withdrawalQueue:\n        if s == ZERO_ADDRESS:\n            break\n        assert s != strategy\n        last_idx += 1\n    # Check if queue is full\n    assert last_idx < MAXIMUM_STRATEGIES\n\n    self.withdrawalQueue[MAXIMUM_STRATEGIES - 1] = strategy\n    self._organizeWithdrawalQueue()\n    log StrategyAddedToQueue(strategy)\n\n\n@external\ndef removeStrategyFromQueue(strategy: address):\n    \"\"\"\n    @notice\n        Remove `strategy` from `withdrawalQueue`.\n        This may only be called by governance or management.\n    @dev\n        We don't do this with revokeStrategy because it should still\n        be possible to withdraw from the Strategy if it's unwinding.\n    @param strategy The Strategy to remove.\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    for idx in range(MAXIMUM_STRATEGIES):\n        if self.withdrawalQueue[idx] == strategy:\n            self.withdrawalQueue[idx] = ZERO_ADDRESS\n            self._organizeWithdrawalQueue()\n            log StrategyRemovedFromQueue(strategy)\n            return  # We found the right location and cleared it\n    raise  # We didn't find the Strategy in the queue\n\n\n@view\n@internal\ndef _debtOutstanding(strategy: address) -> uint256:\n    # See note on `debtOutstanding()`.\n    if self.debtRatio == 0:\n        return self.strategies[strategy].totalDebt\n\n    strategy_debtLimit: uint256 = (\n        self.strategies[strategy].debtRatio\n        * self._totalAssets()\n        / MAX_BPS\n    )\n    strategy_totalDebt: uint256 = self.strategies[strategy].totalDebt\n\n    if self.emergencyShutdown:\n        return strategy_totalDebt\n    elif strategy_totalDebt <= strategy_debtLimit:\n        return 0\n    else:\n        return strategy_totalDebt - strategy_debtLimit\n\n\n@view\n@external\ndef debtOutstanding(strategy: address = msg.sender) -> uint256:\n    \"\"\"\n    @notice\n        Determines if `strategy` is past its debt limit and if any tokens\n        should be withdrawn to the Vault.\n    @param strategy The Strategy to check. Defaults to the caller.\n    @return The quantity of tokens to withdraw.\n    \"\"\"\n    return self._debtOutstanding(strategy)\n\n\n@view\n@internal\ndef _creditAvailable(strategy: address) -> uint256:\n    # See note on `creditAvailable()`.\n    if self.emergencyShutdown:\n        return 0\n    vault_totalAssets: uint256 = self._totalAssets()\n    vault_debtLimit: uint256 =  self.debtRatio * vault_totalAssets / MAX_BPS \n    vault_totalDebt: uint256 = self.totalDebt\n    strategy_debtLimit: uint256 = self.strategies[strategy].debtRatio * vault_totalAssets / MAX_BPS\n    strategy_totalDebt: uint256 = self.strategies[strategy].totalDebt\n    strategy_minDebtPerHarvest: uint256 = self.strategies[strategy].minDebtPerHarvest\n    strategy_maxDebtPerHarvest: uint256 = self.strategies[strategy].maxDebtPerHarvest\n\n    # Exhausted credit line\n    if strategy_debtLimit <= strategy_totalDebt or vault_debtLimit <= vault_totalDebt:\n        return 0\n\n    # Start with debt limit left for the Strategy\n    available: uint256 = strategy_debtLimit - strategy_totalDebt\n\n    # Adjust by the global debt limit left\n    available = min(available, vault_debtLimit - vault_totalDebt)\n\n    # Can only borrow up to what the contract has in reserve\n    # NOTE: Running near 100% is discouraged\n    available = min(available, self.totalIdle)\n\n    # Adjust by min and max borrow limits (per harvest)\n    # NOTE: min increase can be used to ensure that if a strategy has a minimum\n    #       amount of capital needed to purchase a position, it's not given capital\n    #       it can't make use of yet.\n    # NOTE: max increase is used to make sure each harvest isn't bigger than what\n    #       is authorized. This combined with adjusting min and max periods in\n    #       `BaseStrategy` can be used to effect a \"rate limit\" on capital increase.\n    if available < strategy_minDebtPerHarvest:\n        return 0\n    else:\n        return min(available, strategy_maxDebtPerHarvest)\n\n@view\n@external\ndef creditAvailable(strategy: address = msg.sender) -> uint256:\n    \"\"\"\n    @notice\n        Amount of tokens in Vault a Strategy has access to as a credit line.\n        This will check the Strategy's debt limit, as well as the tokens\n        available in the Vault, and determine the maximum amount of tokens\n        (if any) the Strategy may draw on.\n        In the rare case the Vault is in emergency shutdown this will return 0.\n    @param strategy The Strategy to check. Defaults to caller.\n    @return The quantity of tokens available for the Strategy to draw on.\n    \"\"\"\n    return self._creditAvailable(strategy)\n\n\n@view\n@internal\ndef _expectedReturn(strategy: address) -> uint256:\n    # See note on `expectedReturn()`.\n    strategy_lastReport: uint256 = self.strategies[strategy].lastReport\n    timeSinceLastHarvest: uint256 = block.timestamp - strategy_lastReport\n    totalHarvestTime: uint256 = strategy_lastReport - self.strategies[strategy].activation\n\n    # NOTE: If either `timeSinceLastHarvest` or `totalHarvestTime` is 0, we can short-circuit to `0`\n    if timeSinceLastHarvest > 0 and totalHarvestTime > 0 and Strategy(strategy).isActive():\n        # NOTE: Unlikely to throw unless strategy accumalates >1e68 returns\n        # NOTE: Calculate average over period of time where harvests have occured in the past\n        return (\n            self.strategies[strategy].totalGain\n            * timeSinceLastHarvest\n            / totalHarvestTime\n        )\n    else:\n        return 0  # Covers the scenario when block.timestamp == activation\n\n\n@view\n@external\ndef availableDepositLimit() -> uint256:\n    if self.depositLimit > self._totalAssets():\n        return self.depositLimit - self._totalAssets()\n    else:\n        return 0\n\n\n@view\n@external\ndef expectedReturn(strategy: address = msg.sender) -> uint256:\n    \"\"\"\n    @notice\n        Provide an accurate expected value for the return this `strategy`\n        would provide to the Vault the next time `report()` is called\n        (since the last time it was called).\n    @param strategy The Strategy to determine the expected return for. Defaults to caller.\n    @return\n        The anticipated amount `strategy` should make on its investment\n        since its last report.\n    \"\"\"\n    return self._expectedReturn(strategy)\n\n\n@internal\ndef _assessFees(strategy: address, gain: uint256) -> uint256:\n    # Issue new shares to cover fees\n    # NOTE: In effect, this reduces overall share price by the combined fee\n    # NOTE: may throw if Vault.totalAssets() > 1e64, or not called for more than a year\n    if self.strategies[strategy].activation == block.timestamp:\n        return 0  # NOTE: Just added, no fees to assess\n\n    duration: uint256 = block.timestamp - self.strategies[strategy].lastReport\n    assert duration != 0 # can't assessFees twice within the same block\n\n    if gain == 0:\n        # NOTE: The fees are not charged if there hasn't been any gains reported\n        return 0\n\n    management_fee: uint256 = (\n        (\n            (self.strategies[strategy].totalDebt - Strategy(strategy).delegatedAssets())\n            * duration \n            * self.managementFee\n        )\n        / MAX_BPS\n        / SECS_PER_YEAR\n    )\n\n    # NOTE: Applies if Strategy is not shutting down, or it is but all debt paid off\n    # NOTE: No fee is taken when a Strategy is unwinding it's position, until all debt is paid\n    strategist_fee: uint256 = (\n        gain\n        * self.strategies[strategy].performanceFee\n        / MAX_BPS\n    )\n    # NOTE: Unlikely to throw unless strategy reports >1e72 harvest profit\n    performance_fee: uint256 = gain * self.performanceFee / MAX_BPS\n\n    # NOTE: This must be called prior to taking new collateral,\n    #       or the calculation will be wrong!\n    # NOTE: This must be done at the same time, to ensure the relative\n    #       ratio of governance_fee : strategist_fee is kept intact\n    total_fee: uint256 = performance_fee + strategist_fee + management_fee\n    # ensure total_fee is not more than gain\n    if total_fee > gain:\n        total_fee = gain\n    if total_fee > 0:  # NOTE: If mgmt fee is 0% and no gains were realized, skip\n        reward: uint256 = self._issueSharesForAmount(self, total_fee)\n\n        # Send the rewards out as new shares in this Vault\n        if strategist_fee > 0:  # NOTE: Guard against DIV/0 fault\n            # NOTE: Unlikely to throw unless sqrt(reward) >>> 1e39\n            strategist_reward: uint256 = (\n                strategist_fee\n                * reward\n                / total_fee\n            )\n            self._transfer(self, strategy, strategist_reward)\n            # NOTE: Strategy distributes rewards at the end of harvest()\n        # NOTE: Governance earns any dust leftover from flooring math above\n        if self.balanceOf[self] > 0:\n            self._transfer(self, self.rewards, self.balanceOf[self])\n    log FeeReport(management_fee, performance_fee, strategist_fee, duration)\n    return total_fee\n\n\n@external\ndef report(gain: uint256, loss: uint256, _debtPayment: uint256) -> uint256:\n    \"\"\"\n    @notice\n        Reports the amount of assets the calling Strategy has free (usually in\n        terms of ROI).\n        The performance fee is determined here, off of the strategy's profits\n        (if any), and sent to governance.\n        The strategist's fee is also determined here (off of profits), to be\n        handled according to the strategist on the next harvest.\n        This may only be called by a Strategy managed by this Vault.\n    @dev\n        For approved strategies, this is the most efficient behavior.\n        The Strategy reports back what it has free, then Vault \"decides\"\n        whether to take some back or give it more. Note that the most it can\n        take is `gain + _debtPayment`, and the most it can give is all of the\n        remaining reserves. Anything outside of those bounds is abnormal behavior.\n        All approved strategies must have increased diligence around\n        calling this function, as abnormal behavior could become catastrophic.\n    @param gain\n        Amount Strategy has realized as a gain on it's investment since its\n        last report, and is free to be given back to Vault as earnings\n    @param loss\n        Amount Strategy has realized as a loss on it's investment since its\n        last report, and should be accounted for on the Vault's balance sheet.\n        The loss will reduce the debtRatio. The next time the strategy will harvest,\n        it will pay back the debt in an attempt to adjust to the new debt limit.\n    @param _debtPayment\n        Amount Strategy has made available to cover outstanding debt\n    @return Amount of debt outstanding (if totalDebt > debtLimit or emergency shutdown).\n    \"\"\"\n\n    # Only approved strategies can call this function\n    assert self.strategies[msg.sender].activation > 0\n    # No lying about total available to withdraw!\n    assert self.token.balanceOf(msg.sender) >= gain + _debtPayment\n\n    # We have a loss to report, do it before the rest of the calculations\n    if loss > 0:\n        self._reportLoss(msg.sender, loss)\n\n    # Assess both management fee and performance fee, and issue both as shares of the vault\n    totalFees: uint256 = self._assessFees(msg.sender, gain)\n\n    # Returns are always \"realized gains\"\n    self.strategies[msg.sender].totalGain += gain\n\n    # Compute the line of credit the Vault is able to offer the Strategy (if any)\n    credit: uint256 = self._creditAvailable(msg.sender)\n\n    # Outstanding debt the Strategy wants to take back from the Vault (if any)\n    # NOTE: debtOutstanding <= StrategyParams.totalDebt\n    debt: uint256 = self._debtOutstanding(msg.sender)\n    debtPayment: uint256 = min(_debtPayment, debt)\n\n    if debtPayment > 0:\n        self.strategies[msg.sender].totalDebt -= debtPayment\n        self.totalDebt -= debtPayment\n        debt -= debtPayment\n        # NOTE: `debt` is being tracked for later\n\n    # Update the actual debt based on the full credit we are extending to the Strategy\n    # or the returns if we are taking funds back\n    # NOTE: credit + self.strategies[msg.sender].totalDebt is always < self.debtLimit\n    # NOTE: At least one of `credit` or `debt` is always 0 (both can be 0)\n    if credit > 0:\n        self.strategies[msg.sender].totalDebt += credit\n        self.totalDebt += credit\n\n    # Give/take balance to Strategy, based on the difference between the reported gains\n    # (if any), the debt payment (if any), the credit increase we are offering (if any),\n    # and the debt needed to be paid off (if any)\n    # NOTE: This is just used to adjust the balance of tokens between the Strategy and\n    #       the Vault based on the Strategy's debt limit (as well as the Vault's).\n    totalAvail: uint256 = gain + debtPayment\n    if totalAvail < credit:  # credit surplus, give to Strategy\n        self.totalIdle -= credit - totalAvail\n        self.erc20_safe_transfer(self.token.address, msg.sender, credit - totalAvail)\n    elif totalAvail > credit:  # credit deficit, take from Strategy\n        self.totalIdle += totalAvail - credit\n        self.erc20_safe_transferFrom(self.token.address, msg.sender, self, totalAvail - credit)\n    # else, don't do anything because it is balanced\n\n    # Profit is locked and gradually released per block\n    # NOTE: compute current locked profit and replace with sum of current and new\n    lockedProfitBeforeLoss: uint256 = self._calculateLockedProfit() + gain - totalFees\n    if lockedProfitBeforeLoss > loss: \n        self.lockedProfit = lockedProfitBeforeLoss - loss\n    else:\n        self.lockedProfit = 0\n\n    # Update reporting time\n    self.strategies[msg.sender].lastReport = block.timestamp\n    self.lastReport = block.timestamp\n\n    log StrategyReported(\n        msg.sender,\n        gain,\n        loss,\n        debtPayment,\n        self.strategies[msg.sender].totalGain,\n        self.strategies[msg.sender].totalLoss,\n        self.strategies[msg.sender].totalDebt,\n        credit,\n        self.strategies[msg.sender].debtRatio,\n    )\n\n    if self.strategies[msg.sender].debtRatio == 0 or self.emergencyShutdown:\n        # Take every last penny the Strategy has (Emergency Exit/revokeStrategy)\n        # NOTE: This is different than `debt` in order to extract *all* of the returns\n        return Strategy(msg.sender).estimatedTotalAssets()\n    else:\n        # Otherwise, just return what we have as debt outstanding\n        return debt\n\n\n@external\ndef sweep(token: address, amount: uint256 = MAX_UINT256):\n    \"\"\"\n    @notice\n        Removes tokens from this Vault that are not the type of token managed\n        by this Vault. This may be used in case of accidentally sending the\n        wrong kind of token to this Vault.\n        Tokens will be sent to `governance`.\n        This will fail if an attempt is made to sweep the tokens that this\n        Vault manages.\n        This may only be called by governance.\n    @param token The token to transfer out of this vault.\n    @param amount The quantity or tokenId to transfer out.\n    \"\"\"\n    assert msg.sender == self.governance\n    # Can't be used to steal what this Vault is protecting\n    value: uint256 = amount\n    if value == MAX_UINT256:\n        value = ERC20(token).balanceOf(self)\n\n    if token == self.token.address:\n        value = self.token.balanceOf(self) - self.totalIdle\n\n    log Sweep(token, value)\n    self.erc20_safe_transfer(token, self.governance, value)","imports":[],"references":[],"urls":[]}}}